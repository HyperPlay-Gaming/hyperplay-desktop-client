LavaPack.loadBundle([[85,{"../../../shared/constants/app":3218,"../../../shared/constants/metametrics":3223,"../../../shared/modules/hexstring-utils":3247,"../../../shared/modules/random-id":3251,"../metamask-controller":87,"@metamask/obs-store":1112,assert:1499,"eth-rpc-errors":1978,"eth-sig-util":1980,events:1732,jsonschema:2515,loglevel:2750},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var a=g(e("events")),o=e("assert"),i=e("@metamask/obs-store"),n=e("eth-rpc-errors"),s=e("eth-sig-util"),l=g(e("loglevel")),c=g(e("jsonschema")),u=e("../../../shared/constants/app"),d=e("../metamask-controller"),p=g(e("../../../shared/modules/random-id")),m=e("../../../shared/constants/metametrics"),h=e("../../../shared/modules/hexstring-utils");function g(e){return e&&e.__esModule?e:{default:e}}class f extends a.default{constructor({getCurrentChainId:e,metricsEvent:t}){super(),this._getCurrentChainId=e,this.memStore=new i.ObservableStore({unapprovedTypedMessages:{},unapprovedTypedMessagesCount:0}),this.resetState=()=>{this.memStore.updateState({unapprovedTypedMessages:{},unapprovedTypedMessagesCount:0})},this.messages=[],this.metricsEvent=t}get unapprovedTypedMessagesCount(){return Object.keys(this.getUnapprovedMsgs()).length}getUnapprovedMsgs(){return this.messages.filter((e=>"unapproved"===e.status)).reduce(((e,t)=>(e[t.id]=t,e)),{})}addUnapprovedMessageAsync(e,t,r){return new Promise(((a,o)=>{const i=this.addUnapprovedMessage(e,t,r);this.once(`${i}:finished`,(t=>{switch(t.status){case"signed":return a(t.rawSig);case"rejected":return o(n.ethErrors.provider.userRejectedRequest("MetaMask Message Signature: User denied message signature."));case"errored":return o(new Error(`MetaMask Message Signature: ${t.error}`));default:return o(new Error(`MetaMask Message Signature: Unknown problem: ${JSON.stringify(e)}`))}}))}))}addUnapprovedMessage(e,t,r){e.version=r,t&&(e.origin=t.origin),this.validateParams(e),l.default.debug(`TypedMessageManager addUnapprovedMessage: ${JSON.stringify(e)}`);const a=(new Date).getTime(),o=(0,p.default)(),i={id:o,msgParams:e,time:a,status:"unapproved",type:u.MESSAGE_TYPE.ETH_SIGN_TYPED_DATA};return this.addMsg(i),this.emit("update"),o}validateParams(e){switch(o.strict.ok(e&&"object"==typeof e,"Params must be an object."),o.strict.ok("data"in e,'Params must include a "data" field.'),o.strict.ok("from"in e,'Params must include a "from" field.'),o.strict.ok("string"==typeof e.from&&(0,h.isValidHexAddress)(e.from,{allowNonPrefixed:!1}),'"from" field must be a valid, lowercase, hexadecimal Ethereum address string.'),e.version){case"V1":o.strict.ok(Array.isArray(e.data),'"params.data" must be an array.'),o.strict.doesNotThrow((()=>{(0,s.typedSignatureHash)(e.data)}),"Signing data must be valid EIP-712 typed data.");break;case"V3":case"V4":{let t;o.strict.equal(typeof e.data,"string",'"params.data" must be a string.'),o.strict.doesNotThrow((()=>{t=JSON.parse(e.data)}),'"data" must be a valid JSON string.');const r=c.default.validate(t,s.TYPED_MESSAGE_SCHEMA);if(0!==r.errors.length)throw n.ethErrors.rpc.invalidParams({message:"Signing data must conform to EIP-712 schema. See https://git.io/fNtcx.",data:r.errors.map((e=>e.message.toString()))});o.strict.ok(t.primaryType in t.types,`Primary type of "${t.primaryType}" has no type definition.`);let{chainId:a}=t.domain;if(a){const e=parseInt(this._getCurrentChainId(),16);o.strict.ok(!Number.isNaN(e),`Cannot sign messages for chainId "${a}", because MetaMask is switching networks.`),"string"==typeof a&&(a=parseInt(a,a.startsWith("0x")?16:10)),o.strict.equal(a,e,`Provided chainId "${a}" must match the active chainId "${e}"`)}break}default:o.strict.fail(`Unknown typed data version "${e.version}"`)}}addMsg(e){this.messages.push(e),this._saveMsgList()}getMsg(e){return this.messages.find((t=>t.id===e))}approveMessage(e){return this.setMsgStatusApproved(e.metamaskId),this.prepMsgForSigning(e)}setMsgStatusApproved(e){this._setMsgStatus(e,"approved")}setMsgStatusSigned(e,t){const r=this.getMsg(e);r.rawSig=t,this._updateMsg(r),this._setMsgStatus(e,"signed")}prepMsgForSigning(e){return delete e.metamaskId,delete e.version,Promise.resolve(e)}rejectMsg(e,t=undefined){if(t){const r=this.getMsg(e);this.metricsEvent({event:t,category:m.EVENT.CATEGORIES.TRANSACTIONS,properties:{action:"Sign Request",version:r.msgParams.version,type:r.type}})}this._setMsgStatus(e,"rejected")}errorMessage(e,t){const r=this.getMsg(e);r.error=t,this._updateMsg(r),this._setMsgStatus(e,"errored")}clearUnapproved(){this.messages=this.messages.filter((e=>"unapproved"!==e.status)),this._saveMsgList()}_setMsgStatus(e,t){const r=this.getMsg(e);if(!r)throw new Error(`TypedMessageManager - Message not found for id: "${e}".`);r.status=t,this._updateMsg(r),this.emit(`${e}:${t}`,r),"rejected"!==t&&"signed"!==t&&"errored"!==t||this.emit(`${e}:finished`,r)}_updateMsg(e){const t=this.messages.findIndex((t=>t.id===e.id));-1!==t&&(this.messages[t]=e),this._saveMsgList()}_saveMsgList(){const e=this.getUnapprovedMsgs(),t=Object.keys(e).length;this.memStore.updateState({unapprovedTypedMessages:e,unapprovedTypedMessagesCount:t}),this.emit(d.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE)}}r.default=f}}},{package:"$root$",file:"app/scripts/lib/typed-message-manager.js"}],[87,{"../../shared/constants/app":3218,"../../shared/constants/hardware-wallets":3220,"../../shared/constants/keyrings":3221,"../../shared/constants/metametrics":3223,"../../shared/constants/network":3224,"../../shared/constants/permissions":3225,"../../shared/constants/phishing":3226,"../../shared/constants/swaps":3228,"../../shared/constants/time":3229,"../../shared/constants/tokens":3230,"../../shared/constants/transaction":3231,"../../shared/lib/metamask-controller-utils":3234,"../../shared/lib/token-util":3238,"../../shared/modules/hexstring-utils":3247,"../../shared/modules/mv3.utils":3248,"../../shared/modules/string-utils":3254,"../../shared/modules/transaction.utils":3256,"../../shared/notifications":3257,"./account-import-strategies":3,"./controllers/alert":7,"./controllers/app-state":8,"./controllers/backup":9,"./controllers/cached-balances":10,"./controllers/detect-tokens":11,"./controllers/ens":13,"./controllers/incoming-transactions":14,"./controllers/metametrics":15,"./controllers/network":18,"./controllers/onboarding":20,"./controllers/permissions":24,"./controllers/preferences":28,"./controllers/swaps":29,"./controllers/transactions":30,"./detect-multiple-instances":36,"./lib/ComposableObservableStore":38,"./lib/account-tracker":39,"./lib/createDupeReqFilterMiddleware":42,"./lib/createLoggerMiddleware":43,"./lib/createMetaRPCHandler":44,"./lib/createMetamaskMiddleware":45,"./lib/createOnboardingMiddleware":46,"./lib/createOriginMiddleware":47,"./lib/createRPCMethodTrackingMiddleware":48,"./lib/createTabIdMiddleware":50,"./lib/decrypt-message-manager":51,"./lib/encryption-public-key-manager":52,"./lib/message-manager":61,"./lib/personal-message-manager":67,"./lib/rpc-method-middleware":78,"./lib/seed-phrase-verifier":79,"./lib/segment":81,"./lib/stream-utils":84,"./lib/typed-message-manager":85,"./lib/util":86,"@keystonehq/metamask-airgapped-keyring":491,"@metamask/address-book-controller":925,"@metamask/announcement-controller":931,"@metamask/approval-controller":938,"@metamask/assets-controllers":956,"@metamask/base-controller":961,"@metamask/eth-ledger-bridge-keyring":1013,"@metamask/gas-fee-controller":1076,"@metamask/obs-store":1112,"@metamask/obs-store/dist/asStream":1111,"@metamask/permission-controller":1119,"@metamask/phishing-controller":1128,"@metamask/smart-transactions-controller":1134,"@metamask/subject-metadata-controller":1139,"@sentry/browser":1190,_process:2833,"await-semaphore":1507,buffer:1731,"eth-json-rpc-middleware":1932,"eth-keyring-controller":1957,"eth-lattice-keyring":1958,"eth-query":1974,"eth-rpc-errors":1978,"eth-trezor-keyring":1993,events:1732,"json-rpc-engine":2505,"json-rpc-middleware-stream/engineStream":2507,lodash:2735,loglevel:2750,nanoid:2790,pump:2848,"webextension-polyfill":3202},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){(function(t,a){(function(){Object.defineProperty(r,"__esModule",{value:!0}),r.default=r.METAMASK_CONTROLLER_EVENTS=void 0;var o=Re(e("events")),i=Re(e("pump")),n=e("@metamask/obs-store"),s=e("@metamask/obs-store/dist/asStream"),l=e("json-rpc-engine"),c=e("lodash"),u=Re(e("json-rpc-middleware-stream/engineStream")),d=e("eth-json-rpc-middleware"),p=Re(e("eth-keyring-controller")),m=e("eth-rpc-errors"),h=e("await-semaphore"),g=Re(e("loglevel")),f=Re(e("eth-trezor-keyring")),b=Re(e("@metamask/eth-ledger-bridge-keyring")),v=Re(e("eth-lattice-keyring")),k=e("@keystonehq/metamask-airgapped-keyring"),y=Re(e("eth-query")),w=Re(e("nanoid")),C=e("@sentry/browser"),j=e("@metamask/address-book-controller"),T=e("@metamask/approval-controller"),M=e("@metamask/base-controller"),E=e("@metamask/assets-controllers"),z=e("@metamask/phishing-controller"),S=e("@metamask/announcement-controller"),A=e("@metamask/gas-fee-controller"),P=e("@metamask/permission-controller"),_=e("@metamask/subject-metadata-controller"),x=Re(e("@metamask/smart-transactions-controller")),N=Re(e("webextension-polyfill")),O=e("../../shared/constants/transaction"),I=e("../../shared/constants/phishing"),R=e("../../shared/constants/swaps"),q=e("../../shared/constants/keyrings"),L=e("../../shared/constants/network"),U=e("../../shared/constants/hardware-wallets"),D=e("../../shared/constants/permissions"),K=e("../../shared/notifications"),B=e("../../shared/modules/hexstring-utils"),F=e("../../shared/constants/time"),$=e("../../shared/constants/app"),V=e("../../shared/constants/metametrics"),H=e("../../shared/lib/token-util"),G=e("../../shared/modules/string-utils"),W=e("../../shared/modules/transaction.utils"),Y=e("../../shared/constants/tokens"),J=e("../../shared/lib/metamask-controller-utils"),Q=e("../../shared/modules/mv3.utils"),Z=e("./detect-multiple-instances"),X=Re(e("./lib/ComposableObservableStore")),ee=Re(e("./lib/account-tracker")),te=Re(e("./lib/createDupeReqFilterMiddleware")),re=Re(e("./lib/createLoggerMiddleware")),ae=e("./lib/rpc-method-middleware"),oe=Re(e("./lib/createOriginMiddleware")),ie=Re(e("./lib/createTabIdMiddleware")),ne=Re(e("./lib/createOnboardingMiddleware")),se=e("./lib/stream-utils"),le=Re(e("./controllers/ens")),ce=Ie(e("./controllers/network")),ue=Re(e("./controllers/preferences")),de=Re(e("./controllers/app-state")),pe=Re(e("./controllers/cached-balances")),me=Re(e("./controllers/alert")),he=Re(e("./controllers/onboarding")),ge=Re(e("./controllers/backup")),fe=Re(e("./controllers/incoming-transactions")),be=Ie(e("./lib/message-manager")),ve=Re(e("./lib/decrypt-message-manager")),ke=Re(e("./lib/encryption-public-key-manager")),ye=Re(e("./lib/personal-message-manager")),we=Re(e("./lib/typed-message-manager")),Ce=Re(e("./controllers/transactions")),je=Re(e("./controllers/detect-tokens")),Te=Re(e("./controllers/swaps")),Me=Re(e("./account-import-strategies")),Ee=Re(e("./lib/seed-phrase-verifier")),ze=Re(e("./controllers/metametrics")),Se=e("./lib/segment"),Ae=Re(e("./lib/createMetaRPCHandler")),Pe=e("./lib/util"),_e=Re(e("./lib/createMetamaskMiddleware")),xe=e("./controllers/permissions"),Ne=Re(e("./lib/createRPCMethodTrackingMiddleware"));function Oe(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,r=new WeakMap;return(Oe=function(e){return e?r:t})(e)}function Ie(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var r=Oe(t);if(r&&r.has(e))return r.get(e);var a={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if("default"!==i&&Object.prototype.hasOwnProperty.call(e,i)){var n=o?Object.getOwnPropertyDescriptor(e,i):null;n&&(n.get||n.set)?Object.defineProperty(a,i,n):a[i]=e[i]}return a.default=e,r&&r.set(e,a),a}function Re(e){return e&&e.__esModule?e:{default:e}}function qe(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}r.METAMASK_CONTROLLER_EVENTS={UPDATE_BADGE:"updateBadge",APPROVAL_STATE_CHANGE:"ApprovalController:stateChange"};class Le extends o.default{constructor(e){super(),qe(this,"removePermissionsFor",(e=>{try{this.permissionController.revokePermissions(e)}catch(e){if(!(e instanceof P.PermissionsRequestNotFoundError))throw e}})),qe(this,"rejectPermissionsRequest",(e=>{try{this.permissionController.rejectPermissionsRequest(e)}catch(e){if(!(e instanceof P.PermissionsRequestNotFoundError))throw e}})),qe(this,"acceptPermissionsRequest",(e=>{try{this.permissionController.acceptPermissionsRequest(e)}catch(e){if(!(e instanceof P.PermissionsRequestNotFoundError))throw e}})),qe(this,"resolvePendingApproval",((e,t)=>{try{this.approvalController.accept(e,t)}catch(e){if(!(e instanceof T.ApprovalRequestNotFoundError))throw e}})),qe(this,"rejectPendingApproval",((e,t)=>{try{this.approvalController.reject(e,new m.EthereumRpcError(t.code,t.message,t.data))}catch(e){if(!(e instanceof T.ApprovalRequestNotFoundError))throw e}})),this.defaultMaxListeners=20,this.sendUpdate=(0,c.debounce)(this.privateSendUpdate.bind(this),200*F.MILLISECOND),this.opts=e,this.extension=e.browser,this.platform=e.platform,this.notificationManager=e.notificationManager;const r=e.initState||{},a=this.platform.getVersion();this.recordFirstTimeInfo(r),this.activeControllerConnections=0,this.getRequestAccountTabIds=e.getRequestAccountTabIds,this.getOpenMetamaskTabsIds=e.getOpenMetamaskTabsIds,this.controllerMessenger=new M.ControllerMessenger,this.localStoreApiWrapper=e.localStore,this.store=new X.default({state:r,controllerMessenger:this.controllerMessenger,persist:!0}),this.connections={},this.createVaultMutex=new h.Mutex,this.extension.runtime.onInstalled.addListener((e=>{"update"===e.reason&&"8.1.0"===a&&this.platform.openExtensionInBrowser()})),this.approvalController=new T.ApprovalController({messenger:this.controllerMessenger.getRestricted({name:"ApprovalController"}),showApprovalRequest:e.showUserConfirmation}),this.networkController=new ce.default({state:r.NetworkController,infuraProjectId:e.infuraProjectId}),this.networkController.initializeProvider(),this.provider=this.networkController.getProviderAndBlockTracker().provider,this.blockTracker=this.networkController.getProviderAndBlockTracker().blockTracker;const o=this.controllerMessenger.getRestricted({name:"TokenListController"});this.tokenListController=new E.TokenListController({chainId:(0,J.hexToDecimal)(this.networkController.getCurrentChainId()),preventPollingOnNetworkRestart:!r.TokenListController||r.TokenListController.preventPollingOnNetworkRestart,onNetworkStateChange:e=>{this.networkController.store.subscribe((t=>{const r={...t,providerConfig:{...t.provider,chainId:(0,J.hexToDecimal)(t.provider.chainId)}};return e(r)}))},messenger:o,state:r.TokenListController}),this.preferencesController=new ue.default({initState:r.PreferencesController,initLangCode:e.initLangCode,openPopup:e.openPopup,network:this.networkController,tokenListController:this.tokenListController,provider:this.provider}),this.tokensController=new E.TokensController({onPreferencesStateChange:this.preferencesController.store.subscribe.bind(this.preferencesController.store),onNetworkStateChange:e=>this.networkController.store.subscribe((t=>{const r={...t,providerConfig:{...t.provider}};return e(r)})),config:{provider:this.provider},state:r.TokensController}),this.assetsContractController=new E.AssetsContractController({onPreferencesStateChange:e=>this.preferencesController.store.subscribe(e),onNetworkStateChange:e=>this.networkController.on(ce.NETWORK_EVENTS.NETWORK_DID_CHANGE,(()=>{const t=this.networkController.store.getState(),r={...t,providerConfig:{...t.provider,chainId:(0,J.hexToDecimal)(t.provider.chainId)}};return e(r)}))},{provider:this.provider},r.AssetsContractController),this.nftController=new E.NftController({onPreferencesStateChange:this.preferencesController.store.subscribe.bind(this.preferencesController.store),onNetworkStateChange:e=>this.networkController.store.subscribe((t=>{const r={...t,providerConfig:{...t.provider}};return e(r)})),getERC721AssetName:this.assetsContractController.getERC721AssetName.bind(this.assetsContractController),getERC721AssetSymbol:this.assetsContractController.getERC721AssetSymbol.bind(this.assetsContractController),getERC721TokenURI:this.assetsContractController.getERC721TokenURI.bind(this.assetsContractController),getERC721OwnerOf:this.assetsContractController.getERC721OwnerOf.bind(this.assetsContractController),getERC1155BalanceOf:this.assetsContractController.getERC1155BalanceOf.bind(this.assetsContractController),getERC1155TokenURI:this.assetsContractController.getERC1155TokenURI.bind(this.assetsContractController),onNftAdded:({address:e,symbol:t,tokenId:r,standard:a,source:o})=>this.metaMetricsController.trackEvent({event:V.EVENT_NAMES.NFT_ADDED,category:V.EVENT.CATEGORIES.WALLET,properties:{token_contract_address:e,token_symbol:t,asset_type:O.AssetType.NFT,token_standard:a,source:o},sensitiveProperties:{tokenId:r}})},{},r.NftController),this.nftController.setApiKey(t.env.OPENSEA_KEY),this.metaMetricsController=new ze.default({segment:Se.segment,preferencesStore:this.preferencesController.store,onNetworkDidChange:this.networkController.on.bind(this.networkController,ce.NETWORK_EVENTS.NETWORK_DID_CHANGE),getNetworkIdentifier:this.networkController.getNetworkIdentifier.bind(this.networkController),getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),version:this.platform.getVersion(),environment:"production",extension:this.extension,initState:r.MetaMetricsController,captureException:C.captureException}),this.on("update",(e=>{this.metaMetricsController.handleMetaMaskStateUpdate(e)}));const i=this.controllerMessenger.getRestricted({name:"GasFeeController"}),n=R.GAS_API_BASE_URL;this.gasFeeController=new A.GasFeeController({state:r.GasFeeController,interval:1e4,messenger:i,clientId:R.SWAPS_CLIENT_ID,getProvider:()=>this.networkController.getProviderAndBlockTracker().provider,onNetworkStateChange:this.networkController.on.bind(this.networkController,ce.NETWORK_EVENTS.NETWORK_DID_CHANGE),getCurrentNetworkEIP1559Compatibility:this.networkController.getEIP1559Compatibility.bind(this.networkController),getCurrentAccountEIP1559Compatibility:this.getCurrentAccountEIP1559Compatibility.bind(this),legacyAPIEndpoint:`${n}/networks/<chain_id>/gasPrices`,EIP1559APIEndpoint:`${n}/networks/<chain_id>/suggestedGasFees`,getCurrentNetworkLegacyGasAPICompatibility:()=>this.networkController.getCurrentChainId()===L.CHAIN_IDS.MAINNET,getChainId:()=>this.networkController.getCurrentChainId()}),this.qrHardwareKeyring=new k.MetaMaskKeyring,this.appStateController=new de.default({addUnlockListener:this.on.bind(this,"unlock"),isUnlocked:this.isUnlocked.bind(this),initState:r.AppStateController,onInactiveTimeout:()=>this.setLocked(),showUnlockRequest:e.showUserConfirmation,preferencesStore:this.preferencesController.store,qrHardwareStore:this.qrHardwareKeyring.getMemStore()});const s=this.controllerMessenger.getRestricted({name:"CurrencyRateController"});this.currencyRateController=new E.CurrencyRateController({includeUsdRate:!0,messenger:s,state:{...r.CurrencyController,nativeCurrency:this.networkController.providerStore.getState().ticker}}),this.phishingController=new z.PhishingController({},r.PhishingController),this.phishingController.maybeUpdatePhishingLists(),this.announcementController=new S.AnnouncementController({allAnnouncements:K.UI_NOTIFICATIONS},r.AnnouncementController),this.tokenRatesController=new E.TokenRatesController({onTokensStateChange:e=>this.tokensController.subscribe(e),onCurrencyRateStateChange:e=>this.controllerMessenger.subscribe(`${this.currencyRateController.name}:stateChange`,e),onNetworkStateChange:e=>this.networkController.store.subscribe((t=>{const r={...t,providerConfig:{...t.provider,chainId:(0,J.hexToDecimal)(t.provider.chainId)}};return e(r)}))},{disabled:!this.preferencesController.store.getState().useCurrencyRateCheck},r.TokenRatesController),this.preferencesController.store.subscribe((0,Pe.previousValueComparator)(((e,t)=>{const{useCurrencyRateCheck:r}=e,{useCurrencyRateCheck:a}=t;a&&!r?(this.currencyRateController.start(),this.tokenRatesController.configure({disabled:!1},!1,!1)):!a&&r&&(this.currencyRateController.stop(),this.tokenRatesController.configure({disabled:!0},!1,!1))}),this.preferencesController.store.getState())),this.ensController=new le.default({provider:this.provider,getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),onNetworkDidChange:this.networkController.on.bind(this.networkController,ce.NETWORK_EVENTS.NETWORK_DID_CHANGE)}),this.onboardingController=new he.default({initState:r.OnboardingController}),this.incomingTransactionsController=new fe.default({blockTracker:this.blockTracker,onNetworkDidChange:this.networkController.on.bind(this.networkController,ce.NETWORK_EVENTS.NETWORK_DID_CHANGE),getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),preferencesController:this.preferencesController,onboardingController:this.onboardingController,initState:r.IncomingTransactionsController}),this.accountTracker=new ee.default({provider:this.provider,blockTracker:this.blockTracker,getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),getNetworkIdentifier:this.networkController.getNetworkIdentifier.bind(this.networkController),preferencesController:this.preferencesController,onboardingController:this.onboardingController}),this.on("controllerConnectionChanged",(e=>{const{completedOnboarding:t}=this.onboardingController.store.getState();e>0&&t?this.triggerNetworkrequests():this.stopNetworkRequests()})),this.onboardingController.store.subscribe((0,Pe.previousValueComparator)((async(e,t)=>{const{completedOnboarding:r}=e,{completedOnboarding:a}=t;!r&&a&&this.triggerNetworkrequests()}),this.onboardingController.store.getState())),this.cachedBalancesController=new pe.default({accountTracker:this.accountTracker,getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),initState:r.CachedBalancesController}),this.tokensController.hub.on("pendingSuggestedAsset",(async()=>{await e.openPopup()}));let l=[];Q.isManifestV3||(l=[f.default,b.default,v.default,k.MetaMaskKeyring]),this.keyringController=new p.default({keyringTypes:l,initState:r.KeyringController,encryptor:e.encryptor||undefined,cacheEncryptionKey:Q.isManifestV3}),this.keyringController.memStore.subscribe((e=>this._onKeyringControllerUpdate(e))),this.keyringController.on("unlock",(()=>this._onUnlock())),this.keyringController.on("lock",(()=>this._onLock()));const u=()=>this.preferencesController.store.getState().identities;this.permissionController=new P.PermissionController({messenger:this.controllerMessenger.getRestricted({name:"PermissionController",allowedActions:[`${this.approvalController.name}:addRequest`,`${this.approvalController.name}:hasRequest`,`${this.approvalController.name}:acceptRequest`,`${this.approvalController.name}:rejectRequest`]}),state:r.PermissionController,caveatSpecifications:(0,xe.getCaveatSpecifications)({getIdentities:u}),permissionSpecifications:{...(0,xe.getPermissionSpecifications)({getIdentities:u,getAllAccounts:this.keyringController.getAccounts.bind(this.keyringController),captureKeyringTypesWithMissingIdentities:(e={},t=[])=>{const r=t.filter((t=>!e[t])).map((e=>{var t;return null===(t=this.keyringController.getKeyringForAccount(e))||void 0===t?void 0:t.type})),a=Object.keys(e||{}).length,o=Object.keys(this.accountTracker.store.getState().accounts||{}).length;(0,C.captureException)(new Error(`Attempt to get permission specifications failed because their were ${t.length} accounts, but ${a} identities, and the ${r} keyrings included accounts with missing identities. Meanwhile, there are ${o} accounts in the account tracker.`))}})},unrestrictedMethods:xe.unrestrictedMethods}),this.permissionLogController=new xe.PermissionLogController({restrictedMethods:new Set(Object.keys(D.RestrictedMethods)),initState:r.PermissionLogController}),this.subjectMetadataController=new _.SubjectMetadataController({messenger:this.controllerMessenger.getRestricted({name:"SubjectMetadataController",allowedActions:[`${this.permissionController.name}:hasPermissions`]}),state:r.SubjectMetadataController,subjectCacheLimit:100}),this.detectTokensController=new je.default({preferences:this.preferencesController,tokensController:this.tokensController,assetsContractController:this.assetsContractController,network:this.networkController,keyringMemStore:this.keyringController.memStore,tokenList:this.tokenListController,trackMetaMetricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.addressBookController=new j.AddressBookController(undefined,r.AddressBookController),this.alertController=new me.default({initState:r.AlertController,preferencesStore:this.preferencesController.store}),this.backupController=new ge.default({preferencesController:this.preferencesController,addressBookController:this.addressBookController,trackMetaMetricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.txController=new Ce.default({initState:r.TransactionController||r.TransactionManager,getPermittedAccounts:this.getPermittedAccounts.bind(this),getProviderConfig:this.networkController.getProviderConfig.bind(this.networkController),getCurrentNetworkEIP1559Compatibility:this.networkController.getEIP1559Compatibility.bind(this.networkController),getCurrentAccountEIP1559Compatibility:this.getCurrentAccountEIP1559Compatibility.bind(this),getNetworkState:()=>this.networkController.networkStore.getState(),onNetworkStateChange:e=>this.networkController.networkStore.subscribe(e),getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),preferencesStore:this.preferencesController.store,txHistoryLimit:60,signTransaction:this.keyringController.signTransaction.bind(this.keyringController),provider:this.provider,blockTracker:this.blockTracker,createEventFragment:this.metaMetricsController.createEventFragment.bind(this.metaMetricsController),updateEventFragment:this.metaMetricsController.updateEventFragment.bind(this.metaMetricsController),finalizeEventFragment:this.metaMetricsController.finalizeEventFragment.bind(this.metaMetricsController),getEventFragmentById:this.metaMetricsController.getEventFragmentById.bind(this.metaMetricsController),trackMetaMetricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),getParticipateInMetrics:()=>this.metaMetricsController.state.participateInMetaMetrics,getEIP1559GasFeeEstimates:this.gasFeeController.fetchGasFeeEstimates.bind(this.gasFeeController),getExternalPendingTransactions:this.getExternalPendingTransactions.bind(this),getAccountType:this.getAccountType.bind(this),getDeviceModel:this.getDeviceModel.bind(this),getTokenStandardAndDetails:this.assetsContractController.getTokenStandardAndDetails.bind(this.assetsContractController)}),this.txController.on("newUnapprovedTx",(()=>e.showUserConfirmation())),this.txController.on("tx:status-update",(async(e,t)=>{if(t===O.TransactionStatus.confirmed||t===O.TransactionStatus.failed){const t=this.txController.txStateManager.getTransaction(e),n=this.preferencesController.getFrequentRpcListDetail();let s={};if(t.chainId){var r;const e=n.find((e=>t.chainId===e.chainId));s=null!==(r=null==e?void 0:e.rpcPrefs)&&void 0!==r?r:{}}this.platform.showTransactionNotification(t,s);const{txReceipt:l}=t;if(t.type===O.TransactionType.tokenMethodTransferFrom&&t.txParams!==undefined){var a,o;const{data:e,to:r,from:i}=t.txParams,{chainId:n}=t,s=(0,W.parseStandardTokenTransactionData)(e),l=null!==(a=(0,H.getTokenIdParam)(s))&&void 0!==a?a:(0,J.getTokenValueParam)(s),{allNfts:c}=this.nftController.state,u=null==c||null===(o=c[i])||void 0===o?void 0:o[n].find((({address:e,tokenId:t})=>(0,G.isEqualCaseInsensitive)(e,r)&&t===l));u&&this.nftController.checkAndUpdateSingleNftOwnershipStatus(u,!1,{userAddress:i,chainId:n})}const c=this.getState();var i;if(l&&"0x0"===l.status)this.metaMetricsController.trackEvent({event:"Tx Status Update: On-Chain Failure",category:V.EVENT.CATEGORIES.BACKGROUND,properties:{action:"Transactions",errorMessage:null===(i=t.simulationFails)||void 0===i?void 0:i.reason,numberOfTokens:c.tokens.length,numberOfAccounts:Object.keys(c.accounts).length}},{matomoEvent:!0})}})),this.networkController.on(ce.NETWORK_EVENTS.NETWORK_DID_CHANGE,(async()=>{const{ticker:e}=this.networkController.getProviderConfig();try{await this.currencyRateController.setNativeCurrency(e)}catch(e){console.error(e)}})),this.networkController.lookupNetwork(),this.messageManager=new be.default({metricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.personalMessageManager=new ye.default({metricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.decryptMessageManager=new ve.default({metricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.encryptionPublicKeyManager=new ke.default({metricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.typedMessageManager=new we.default({getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),metricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.swapsController=new Te.default({getBufferedGasLimit:this.txController.txGasUtil.getBufferedGasLimit.bind(this.txController.txGasUtil),networkController:this.networkController,provider:this.provider,getProviderConfig:this.networkController.getProviderConfig.bind(this.networkController),getTokenRatesState:()=>this.tokenRatesController.state,getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),getEIP1559GasFeeEstimates:this.gasFeeController.fetchGasFeeEstimates.bind(this.gasFeeController)}),this.smartTransactionsController=new x.default({onNetworkStateChange:e=>{this.networkController.store.subscribe((t=>{const r={...t,providerConfig:{...t.provider}};return e(r)}))},getNetwork:this.networkController.getNetworkState.bind(this.networkController),getNonceLock:this.txController.nonceTracker.getNonceLock.bind(this.txController.nonceTracker),confirmExternalTransaction:this.txController.confirmExternalTransaction.bind(this.txController),provider:this.provider,trackMetaMetricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)},{supportedChainIds:[L.CHAIN_IDS.MAINNET,L.CHAIN_IDS.GOERLI]},r.SmartTransactionsController),this.networkController.on(ce.NETWORK_EVENTS.NETWORK_DID_CHANGE,(()=>{this.accountTracker._updateAccounts()})),this.networkController.on(ce.NETWORK_EVENTS.NETWORK_WILL_CHANGE,(()=>{this.txController.txStateManager.clearUnapprovedTxs(),this.encryptionPublicKeyManager.clearUnapproved(),this.personalMessageManager.clearUnapproved(),this.typedMessageManager.clearUnapproved(),this.decryptMessageManager.clearUnapproved(),this.messageManager.clearUnapproved()})),this.metamaskMiddleware=(0,_e.default)({static:{eth_syncing:!1,web3_clientVersion:`MetaMask/v${a}`},version:a,getAccounts:async({origin:e},{suppressUnauthorizedError:t=!0}={})=>{if(e===$.ORIGIN_METAMASK){const e=this.preferencesController.getSelectedAddress();return e?[e]:[]}return this.isUnlocked()?await this.getPermittedAccounts(e,{suppressUnauthorizedError:t}):[]},processTransaction:this.newUnapprovedTransaction.bind(this),processEthSignMessage:this.newUnsignedMessage.bind(this),processTypedMessage:this.newUnsignedTypedMessage.bind(this),processTypedMessageV3:this.newUnsignedTypedMessage.bind(this),processTypedMessageV4:this.newUnsignedTypedMessage.bind(this),processPersonalMessage:this.newUnsignedPersonalMessage.bind(this),processDecryptMessage:this.newRequestDecryptMessage.bind(this),processEncryptionPublicKey:this.newRequestEncryptionPublicKey.bind(this),getPendingNonce:this.getPendingNonce.bind(this),getPendingTransactionByHash:e=>this.txController.getTransactions({searchCriteria:{hash:e,status:O.TransactionStatus.submitted}})[0]}),this.on("update",(e=>this._onStateUpdate(e)));const d={AccountTracker:this.accountTracker.store,TxController:this.txController.memStore,TokenRatesController:this.tokenRatesController,MessageManager:this.messageManager.memStore,PersonalMessageManager:this.personalMessageManager.memStore,DecryptMessageManager:this.decryptMessageManager.memStore,EncryptionPublicKeyManager:this.encryptionPublicKeyManager.memStore,TypesMessageManager:this.typedMessageManager.memStore,SwapsController:this.swapsController.store,EnsController:this.ensController.store,ApprovalController:this.approvalController};this.store.updateStructure({AppStateController:this.appStateController.store,TransactionController:this.txController.store,KeyringController:this.keyringController.store,PreferencesController:this.preferencesController.store,MetaMetricsController:this.metaMetricsController.store,AddressBookController:this.addressBookController,CurrencyController:this.currencyRateController,NetworkController:this.networkController.store,CachedBalancesController:this.cachedBalancesController.store,AlertController:this.alertController.store,OnboardingController:this.onboardingController.store,IncomingTransactionsController:this.incomingTransactionsController.store,PermissionController:this.permissionController,PermissionLogController:this.permissionLogController.store,SubjectMetadataController:this.subjectMetadataController,BackupController:this.backupController,AnnouncementController:this.announcementController,GasFeeController:this.gasFeeController,TokenListController:this.tokenListController,TokensController:this.tokensController,SmartTransactionsController:this.smartTransactionsController,NftController:this.nftController,PhishingController:this.phishingController,...d}),this.memStore=new X.default({config:{AppStateController:this.appStateController.store,NetworkController:this.networkController.store,CachedBalancesController:this.cachedBalancesController.store,KeyringController:this.keyringController.memStore,PreferencesController:this.preferencesController.store,MetaMetricsController:this.metaMetricsController.store,AddressBookController:this.addressBookController,CurrencyController:this.currencyRateController,AlertController:this.alertController.store,OnboardingController:this.onboardingController.store,IncomingTransactionsController:this.incomingTransactionsController.store,PermissionController:this.permissionController,PermissionLogController:this.permissionLogController.store,SubjectMetadataController:this.subjectMetadataController,BackupController:this.backupController,AnnouncementController:this.announcementController,GasFeeController:this.gasFeeController,TokenListController:this.tokenListController,TokensController:this.tokensController,SmartTransactionsController:this.smartTransactionsController,NftController:this.nftController,...d},controllerMessenger:this.controllerMessenger});const g=[this.accountTracker.resetState,this.txController.resetState,this.messageManager.resetState,this.personalMessageManager.resetState,this.decryptMessageManager.resetState,this.encryptionPublicKeyManager.resetState,this.typedMessageManager.resetState,this.swapsController.resetState,this.ensController.resetState,this.approvalController.clear.bind(this.approvalController)];Q.isManifestV3?!0===globalThis.isFirstTimeProfileLoaded&&this.resetStates(g):this.resetStates(g),!this.isUnlocked()&&this.onboardingController.store.getState().completedOnboarding?this._loginUser():this._startUISync(),this.extension.runtime.getPlatformInfo().then((({os:e})=>{this.appStateController.setBrowserEnvironment(e,this.extension.runtime.getBrowserInfo===undefined?"chrome":"firefox")})),this.setupControllerEventSubscriptions(),this.publicConfigStore=this.createPublicConfigStore(),this.extension.runtime.onMessageExternal.addListener(Z.onMessageReceived),(0,Z.checkForMultipleVersionsRunning)()}triggerNetworkrequests(){this.accountTracker.start(),this.incomingTransactionsController.start(),this.preferencesController.store.getState().useCurrencyRateCheck&&this.currencyRateController.start(),this.preferencesController.store.getState().useTokenDetection&&this.tokenListController.start()}stopNetworkRequests(){this.accountTracker.stop(),this.incomingTransactionsController.stop(),this.preferencesController.store.getState().useCurrencyRateCheck&&this.currencyRateController.stop(),this.preferencesController.store.getState().useTokenDetection&&this.tokenListController.stop()}resetStates(e){e.forEach((e=>{try{e()}catch(e){console.error(e)}})),globalThis.isFirstTimeProfileLoaded=!1}setupControllerEventSubscriptions(){const e=async(e,t)=>{this.isUnlocked()&&this.notifyConnections(e,{method:xe.NOTIFICATION_NAMES.accountsChanged,params:t.length<2?t:await this.getPermittedAccounts(e)}),this.permissionLogController.updateAccountsHistory(e,t)};let t;this.preferencesController.store.subscribe((async({selectedAddress:r})=>{if(r&&r!==t){t=r;const a=(0,xe.getPermittedAccountsByOrigin)(this.permissionController.state);for(const[t,o]of a.entries())o.includes(r)&&e(t,o)}})),this.controllerMessenger.subscribe(`${this.permissionController.name}:stateChange`,(async(t,r)=>{const a=(0,xe.getChangedAccounts)(t,r);for(const[t,r]of a.entries())e(t,r)}),xe.getPermittedAccountsByOrigin)}createPublicConfigStore(){const e=new n.ObservableStore,{networkController:t}=this;function r(r){const a=t.getCurrentChainId();"loading"!==r.network&&e.putState(function(e,{isUnlocked:t,network:r}){return{isUnlocked:t,chainId:e,networkVersion:r}}(a,r))}return this.on("update",r),r(this.getState()),e}async getProviderState(e){return{isUnlocked:this.isUnlocked(),...this.getProviderNetworkState(),accounts:await this.getPermittedAccounts(e)}}getProviderNetworkState(e){const{network:t}=e||this.getState();return{chainId:this.networkController.getCurrentChainId(),networkVersion:t}}getState(){const{vault:e}=this.keyringController.store.getState();return{isInitialized:Boolean(e),...this.memStore.getFlatState()}}getApi(){const{addressBookController:e,alertController:t,appStateController:r,nftController:a,nftDetectionController:o,currencyRateController:i,detectTokensController:n,ensController:s,gasFeeController:l,metaMetricsController:c,networkController:u,announcementController:d,onboardingController:p,permissionController:m,preferencesController:h,qrHardwareKeyring:g,swapsController:f,tokensController:b,smartTransactionsController:v,txController:k,assetsContractController:y,backupController:w}=this;return{getState:this.getState.bind(this),setCurrentCurrency:i.setCurrentCurrency.bind(i),setUseBlockie:h.setUseBlockie.bind(h),setUseNonceField:h.setUseNonceField.bind(h),setUsePhishDetect:h.setUsePhishDetect.bind(h),setUseMultiAccountBalanceChecker:h.setUseMultiAccountBalanceChecker.bind(h),setUseTokenDetection:h.setUseTokenDetection.bind(h),setUseNftDetection:h.setUseNftDetection.bind(h),setUseCurrencyRateCheck:h.setUseCurrencyRateCheck.bind(h),setOpenSeaEnabled:h.setOpenSeaEnabled.bind(h),setIpfsGateway:h.setIpfsGateway.bind(h),setParticipateInMetaMetrics:c.setParticipateInMetaMetrics.bind(c),setCurrentLocale:h.setCurrentLocale.bind(h),markPasswordForgotten:this.markPasswordForgotten.bind(this),unMarkPasswordForgotten:this.unMarkPasswordForgotten.bind(this),getRequestAccountTabIds:this.getRequestAccountTabIds,getOpenMetamaskTabsIds:this.getOpenMetamaskTabsIds,markNotificationPopupAsAutomaticallyClosed:()=>this.notificationManager.markAsAutomaticallyClosed(),addNewAccount:this.addNewAccount.bind(this),verifySeedPhrase:this.verifySeedPhrase.bind(this),resetAccount:this.resetAccount.bind(this),removeAccount:this.removeAccount.bind(this),importAccountWithStrategy:this.importAccountWithStrategy.bind(this),connectHardware:this.connectHardware.bind(this),forgetDevice:this.forgetDevice.bind(this),checkHardwareStatus:this.checkHardwareStatus.bind(this),unlockHardwareWalletAccount:this.unlockHardwareWalletAccount.bind(this),setLedgerTransportPreference:this.setLedgerTransportPreference.bind(this),attemptLedgerTransportCreation:this.attemptLedgerTransportCreation.bind(this),establishLedgerTransportPreference:this.establishLedgerTransportPreference.bind(this),submitQRHardwareCryptoHDKey:g.submitCryptoHDKey.bind(g),submitQRHardwareCryptoAccount:g.submitCryptoAccount.bind(g),cancelSyncQRHardware:g.cancelSync.bind(g),submitQRHardwareSignature:g.submitSignature.bind(g),cancelQRHardwareSignRequest:g.cancelSignRequest.bind(g),fetchInfoToSync:this.fetchInfoToSync.bind(this),submitPassword:this.submitPassword.bind(this),verifyPassword:this.verifyPassword.bind(this),setProviderType:u.setProviderType.bind(u),rollbackToPreviousProvider:u.rollbackToPreviousProvider.bind(u),setCustomRpc:this.setCustomRpc.bind(this),updateAndSetCustomRpc:this.updateAndSetCustomRpc.bind(this),delCustomRpc:this.delCustomRpc.bind(this),addCustomNetwork:this.addCustomNetwork.bind(this),requestAddNetworkApproval:this.requestAddNetworkApproval.bind(this),setSelectedAddress:h.setSelectedAddress.bind(h),addToken:b.addToken.bind(b),rejectWatchAsset:b.rejectWatchAsset.bind(b),acceptWatchAsset:b.acceptWatchAsset.bind(b),updateTokenType:b.updateTokenType.bind(b),setAccountLabel:h.setAccountLabel.bind(h),setFeatureFlag:h.setFeatureFlag.bind(h),setPreference:h.setPreference.bind(h),addKnownMethodData:h.addKnownMethodData.bind(h),setDismissSeedBackUpReminder:h.setDismissSeedBackUpReminder.bind(h),setDisabledRpcMethodPreference:h.setDisabledRpcMethodPreference.bind(h),getRpcMethodPreferences:h.getRpcMethodPreferences.bind(h),setAdvancedGasFee:h.setAdvancedGasFee.bind(h),setTheme:h.setTheme.bind(h),setImprovedTokenAllowanceEnabled:h.setImprovedTokenAllowanceEnabled.bind(h),setTransactionSecurityCheckEnabled:h.setTransactionSecurityCheckEnabled.bind(h),getTokenStandardAndDetails:this.getTokenStandardAndDetails.bind(this),addNft:a.addNft.bind(a),addNftVerifyOwnership:a.addNftVerifyOwnership.bind(a),removeAndIgnoreNft:a.removeAndIgnoreNft.bind(a),removeNft:a.removeNft.bind(a),checkAndUpdateAllNftsOwnershipStatus:a.checkAndUpdateAllNftsOwnershipStatus.bind(a),checkAndUpdateSingleNftOwnershipStatus:a.checkAndUpdateSingleNftOwnershipStatus.bind(a),isNftOwner:a.isNftOwner.bind(a),setAddressBook:e.set.bind(e),removeFromAddressBook:e.delete.bind(e),setLastActiveTime:r.setLastActiveTime.bind(r),setDefaultHomeActiveTabName:r.setDefaultHomeActiveTabName.bind(r),setConnectedStatusPopoverHasBeenShown:r.setConnectedStatusPopoverHasBeenShown.bind(r),setRecoveryPhraseReminderHasBeenShown:r.setRecoveryPhraseReminderHasBeenShown.bind(r),setRecoveryPhraseReminderLastShown:r.setRecoveryPhraseReminderLastShown.bind(r),setShowTestnetMessageInDropdown:r.setShowTestnetMessageInDropdown.bind(r),setShowPortfolioTooltip:r.setShowPortfolioTooltip.bind(r),setShowBetaHeader:r.setShowBetaHeader.bind(r),setCollectiblesDetectionNoticeDismissed:r.setCollectiblesDetectionNoticeDismissed.bind(r),updateCollectibleDropDownState:r.updateCollectibleDropDownState.bind(r),setFirstTimeUsedNetwork:r.setFirstTimeUsedNetwork.bind(r),tryReverseResolveAddress:s.reverseResolveAddress.bind(s),setLocked:this.setLocked.bind(this),createNewVaultAndKeychain:this.createNewVaultAndKeychain.bind(this),createNewVaultAndRestore:this.createNewVaultAndRestore.bind(this),exportAccount:this.exportAccount.bind(this),cancelTransaction:k.cancelTransaction.bind(k),updateTransaction:k.updateTransaction.bind(k),updateAndApproveTransaction:k.updateAndApproveTransaction.bind(k),approveTransactionsWithSameNonce:k.approveTransactionsWithSameNonce.bind(k),createCancelTransaction:this.createCancelTransaction.bind(this),createSpeedUpTransaction:this.createSpeedUpTransaction.bind(this),estimateGas:this.estimateGas.bind(this),getNextNonce:this.getNextNonce.bind(this),addUnapprovedTransaction:k.addUnapprovedTransaction.bind(k),createTransactionEventFragment:k.createTransactionEventFragment.bind(k),getTransactions:k.getTransactions.bind(k),updateEditableParams:k.updateEditableParams.bind(k),updateTransactionGasFees:k.updateTransactionGasFees.bind(k),updateTransactionSendFlowHistory:k.updateTransactionSendFlowHistory.bind(k),updateSwapApprovalTransaction:k.updateSwapApprovalTransaction.bind(k),updateSwapTransaction:k.updateSwapTransaction.bind(k),updatePreviousGasParams:k.updatePreviousGasParams.bind(k),signMessage:this.signMessage.bind(this),cancelMessage:this.cancelMessage.bind(this),signPersonalMessage:this.signPersonalMessage.bind(this),cancelPersonalMessage:this.cancelPersonalMessage.bind(this),signTypedMessage:this.signTypedMessage.bind(this),cancelTypedMessage:this.cancelTypedMessage.bind(this),decryptMessage:this.decryptMessage.bind(this),decryptMessageInline:this.decryptMessageInline.bind(this),cancelDecryptMessage:this.cancelDecryptMessage.bind(this),encryptionPublicKey:this.encryptionPublicKey.bind(this),cancelEncryptionPublicKey:this.cancelEncryptionPublicKey.bind(this),setSeedPhraseBackedUp:p.setSeedPhraseBackedUp.bind(p),completeOnboarding:p.completeOnboarding.bind(p),setFirstTimeFlowType:p.setFirstTimeFlowType.bind(p),setAlertEnabledness:t.setAlertEnabledness.bind(t),setUnconnectedAccountAlertShown:t.setUnconnectedAccountAlertShown.bind(t),setWeb3ShimUsageAlertDismissed:t.setWeb3ShimUsageAlertDismissed.bind(t),removePermissionsFor:this.removePermissionsFor,approvePermissionsRequest:this.acceptPermissionsRequest,rejectPermissionsRequest:this.rejectPermissionsRequest,...(0,xe.getPermissionBackgroundApiMethods)(m),fetchAndSetQuotes:f.fetchAndSetQuotes.bind(f),setSelectedQuoteAggId:f.setSelectedQuoteAggId.bind(f),resetSwapsState:f.resetSwapsState.bind(f),setSwapsTokens:f.setSwapsTokens.bind(f),clearSwapsQuotes:f.clearSwapsQuotes.bind(f),setApproveTxId:f.setApproveTxId.bind(f),setTradeTxId:f.setTradeTxId.bind(f),setSwapsTxGasPrice:f.setSwapsTxGasPrice.bind(f),setSwapsTxGasLimit:f.setSwapsTxGasLimit.bind(f),setSwapsTxMaxFeePerGas:f.setSwapsTxMaxFeePerGas.bind(f),setSwapsTxMaxFeePriorityPerGas:f.setSwapsTxMaxFeePriorityPerGas.bind(f),safeRefetchQuotes:f.safeRefetchQuotes.bind(f),stopPollingForQuotes:f.stopPollingForQuotes.bind(f),setBackgroundSwapRouteState:f.setBackgroundSwapRouteState.bind(f),resetPostFetchState:f.resetPostFetchState.bind(f),setSwapsErrorKey:f.setSwapsErrorKey.bind(f),setInitialGasEstimate:f.setInitialGasEstimate.bind(f),setCustomApproveTxData:f.setCustomApproveTxData.bind(f),setSwapsLiveness:f.setSwapsLiveness.bind(f),setSwapsFeatureFlags:f.setSwapsFeatureFlags.bind(f),setSwapsUserFeeLevel:f.setSwapsUserFeeLevel.bind(f),setSwapsQuotesPollingLimitEnabled:f.setSwapsQuotesPollingLimitEnabled.bind(f),setSmartTransactionsOptInStatus:v.setOptInState.bind(v),fetchSmartTransactionFees:v.getFees.bind(v),clearSmartTransactionFees:v.clearFees.bind(v),submitSignedTransactions:v.submitSignedTransactions.bind(v),cancelSmartTransaction:v.cancelSmartTransaction.bind(v),fetchSmartTransactionsLiveness:v.fetchLiveness.bind(v),updateSmartTransaction:v.updateSmartTransaction.bind(v),setStatusRefreshInterval:v.setStatusRefreshInterval.bind(v),trackMetaMetricsEvent:c.trackEvent.bind(c),trackMetaMetricsPage:c.trackPage.bind(c),createEventFragment:c.createEventFragment.bind(c),updateEventFragment:c.updateEventFragment.bind(c),finalizeEventFragment:c.finalizeEventFragment.bind(c),resolvePendingApproval:this.resolvePendingApproval,rejectPendingApproval:this.rejectPendingApproval,updateViewedNotifications:d.updateViewed.bind(d),getGasFeeEstimatesAndStartPolling:l.getGasFeeEstimatesAndStartPolling.bind(l),disconnectGasFeeEstimatePoller:l.disconnectPoller.bind(l),getGasFeeTimeEstimate:l.getTimeEstimate.bind(l),addPollingTokenToAppState:r.addPollingToken.bind(r),removePollingTokenFromAppState:r.removePollingToken.bind(r),backupUserData:w.backupUserData.bind(w),restoreUserData:w.restoreUserData.bind(w),detectNewTokens:n.detectNewTokens.bind(n),detectNfts:null,addDetectedTokens:b.addDetectedTokens.bind(b),addImportedTokens:b.addTokens.bind(b),ignoreTokens:b.ignoreTokens.bind(b),getBalancesInSingleCall:y.getBalancesInSingleCall.bind(y)}}async exportAccount(e,t){return await this.verifyPassword(t),this.keyringController.exportAccount(e,t)}async getTokenStandardAndDetails(e,t,r){var a,o;const i=await this.assetsContractController.getTokenStandardAndDetails(e,t,r);return{...i,decimals:null==i||null===(a=i.decimals)||void 0===a?void 0:a.toString(10),balance:null==i||null===(o=i.balance)||void 0===o?void 0:o.toString(10)}}async createNewVaultAndKeychain(e){const t=await this.createVaultMutex.acquire();try{let r;if((await this.keyringController.getAccounts()).length>0)r=await this.keyringController.fullUpdate();else{r=await this.keyringController.createNewVaultAndKeychain(e);const t=await this.keyringController.getAccounts();this.preferencesController.setAddresses(t),this.selectFirstIdentity()}return r}finally{t()}}async requestAddNetworkApproval(e,t){try{await this.approvalController.addAndShowApprovalRequest({origin:"metamask",type:"wallet_addEthereumChain",requestData:{chainId:e.chainId,blockExplorerUrl:e.rpcPrefs.blockExplorerUrl,chainName:e.nickname,rpcUrl:e.rpcUrl,ticker:e.ticker,imageUrl:e.rpcPrefs.imageUrl}})}catch(e){if(!t||"User rejected the request."!==e.message)throw e}}async addCustomNetwork(e,t){const{chainId:r,chainName:a,rpcUrl:o,ticker:i,blockExplorerUrl:n}=e;this.preferencesController.upsertToFrequentRpcList(o,r,i,a,{blockExplorerUrl:n}),this.metaMetricsController.trackEvent({event:"Custom Network Added",category:V.EVENT.CATEGORIES.NETWORK,referrer:{url:$.ORIGIN_METAMASK},properties:{chain_id:r,symbol:i,source:V.EVENT.SOURCE.NETWORK.POPULAR_NETWORK_LIST},actionId:t})}async createNewVaultAndRestore(e,t){const r=await this.createVaultMutex.acquire();try{let o,i;const n=a.from(t),{keyringController:s}=this;this.preferencesController.setAddresses([]),this.permissionController.clearState(),this.accountTracker.clearAccounts(),this.cachedBalancesController.clearCachedBalances(),this.txController.txStateManager.clearUnapprovedTxs();const l=await s.createNewVaultAndRestore(e,n),c=new y.default(this.provider);o=await s.getAccounts(),i=await this.getBalance(o[o.length-1],c);const[u]=s.getKeyringsByType(q.KEYRING_TYPES.HD_KEY_TREE);if(!u)throw new Error("MetamaskController - No HD Key Tree found");for(;"0x0"!==i;)await s.addNewAccount(u),o=await s.getAccounts(),i=await this.getBalance(o[o.length-1],c);o.length>1&&"0x0"===i&&(await this.removeAccount(o[o.length-1]),o=await s.getAccounts());const d=this.preferencesController.getLedgerTransportPreference();return this.setLedgerTransportPreference(d),this.preferencesController.setAddresses(o),this.selectFirstIdentity(),l}finally{r()}}getBalance(e,t){return new Promise(((r,a)=>{const o=this.accountTracker.store.getState().accounts[e];o&&o.balance?r(o.balance):t.getBalance(e,((e,t)=>{e?(a(e),g.default.error(e)):r(t||"0x0")}))}))}async fetchInfoToSync(){const{currentLocale:e,frequentRpcList:t,identities:r,selectedAddress:a,useTokenDetection:o}=this.preferencesController.store.getState(),i=!o&&this.networkController.store.getState().provider.chainId===L.CHAIN_IDS.MAINNET,{tokenList:n}=this.tokenListController.state,s=i?Y.STATIC_MAINNET_TOKEN_LIST:n,l={currentLocale:e,frequentRpcList:t,identities:r,selectedAddress:a},{allTokens:c,allIgnoredTokens:u}=this.tokensController.state,d={};Object.keys(c).forEach((e=>{d[e]={},Object.keys(c[e]).forEach((t=>{const r=(0,B.toChecksumHexAddress)(t);d[e][r]=c[e][r].filter((e=>{var t;if(e.isERC721===undefined){if(s[null===(t=e.address)||void 0===t?void 0:t.toLowerCase()]!==undefined)return!0}else if(!1===e.isERC721)return!0;return!1}))}))}));const[p]=this.keyringController.getKeyringsByType(q.KEYRING_TYPES.HD_KEY_TREE),m=this.keyringController.getKeyringsByType(q.KEYRING_TYPES.IMPORTED),h=await p.getAccounts(),g=(await Promise.all(m.map((e=>e.getAccounts())))).reduce(((e,t)=>[...e,...t]),[]),f={hd:h.filter(((e,t)=>h.indexOf(e)===t)).map((e=>(0,B.toChecksumHexAddress)(e))),simpleKeyPair:g.filter(((e,t)=>g.indexOf(e)===t)).map((e=>(0,B.toChecksumHexAddress)(e))),ledger:[],trezor:[],lattice:[]};let{transactions:b}=this.txController.store.getState();return b=Object.values(b).filter((e=>{const t=(0,B.toChecksumHexAddress)(e.txParams.from);return f.hd.includes(t)})),{accounts:f,preferences:l,transactions:b,tokens:{allTokens:d,allIgnoredTokens:u},network:this.networkController.store.getState()}}async submitPassword(e){await this.keyringController.submitPassword(e);try{await this.blockTracker.checkForLatestBlock()}catch(e){g.default.error("Error while unlocking extension.",e)}const t=this.preferencesController.getLedgerTransportPreference();return this.setLedgerTransportPreference(t),this.keyringController.fullUpdate()}async _loginUser(){try{var e;const t=null===(e={})||void 0===e?void 0:e.PASSWORD;t?await this.submitPassword(t):Q.isManifestV3&&await this.submitEncryptionKey(),await this.accountTracker._updateAccounts()}finally{this._startUISync()}}_startUISync(){this.emit("startUISync"),this.startUISync=!0,this.memStore.subscribe(this.sendUpdate.bind(this))}async submitEncryptionKey(){try{const{loginToken:e,loginSalt:t}=await N.default.storage.session.get(["loginToken","loginSalt"]);if(e&&t){const{vault:r}=this.keyringController.store.getState();if(r.salt!==t)return console.warn("submitEncryptionKey: Stored salt and vault salt do not match"),void await this.clearLoginArtifacts();await this.keyringController.submitEncryptionKey(e,t)}}catch(e){throw await this.clearLoginArtifacts(),e}}async clearLoginArtifacts(){await N.default.storage.session.remove(["loginToken","loginSalt"])}async verifyPassword(e){await this.keyringController.verifyPassword(e)}selectFirstIdentity(){const{identities:e}=this.preferencesController.store.getState(),[t]=Object.keys(e);this.preferencesController.setSelectedAddress(t)}getPrimaryKeyringMnemonic(){const[e]=this.keyringController.getKeyringsByType(q.KEYRING_TYPES.HD_KEY_TREE);if(!e.mnemonic)throw new Error("Primary keyring mnemonic unavailable.");return e.mnemonic}async getKeyringForDevice(e,t=null){let r=null;switch(e){case U.DEVICE_NAMES.TREZOR:r=f.default.type;break;case U.DEVICE_NAMES.LEDGER:r=b.default.type;break;case U.DEVICE_NAMES.QR:r=k.MetaMaskKeyring.type;break;case U.DEVICE_NAMES.LATTICE:r=v.default.type;break;default:throw new Error("MetamaskController:getKeyringForDevice - Unknown device")}let[a]=await this.keyringController.getKeyringsByType(r);if(a||(a=await this.keyringController.addNewKeyring(r)),t&&a.setHdPath&&a.setHdPath(t),e===U.DEVICE_NAMES.LATTICE&&(a.appName="MetaMask"),e===U.DEVICE_NAMES.TREZOR){const e=a.getModel();this.appStateController.setTrezorModel(e)}return a.network=this.networkController.getProviderConfig().type,a}async attemptLedgerTransportCreation(){const e=await this.getKeyringForDevice(U.DEVICE_NAMES.LEDGER);return await e.attemptMakeApp()}async establishLedgerTransportPreference(){const e=this.preferencesController.getLedgerTransportPreference();return await this.setLedgerTransportPreference(e)}async connectHardware(e,t,r){const a=await this.getKeyringForDevice(e,r);let o=[];switch(t){case-1:o=await a.getPreviousPage();break;case 1:o=await a.getNextPage();break;default:o=await a.getFirstPage()}const i=await this.keyringController.getAccounts(),n=[...new Set(i.concat(o.map((e=>e.address.toLowerCase()))))];return this.accountTracker.syncWithAddresses(n),o}async checkHardwareStatus(e,t){return(await this.getKeyringForDevice(e,t)).isUnlocked()}async forgetDevice(e){return(await this.getKeyringForDevice(e)).forgetDevice(),!0}async getAccountType(e){switch((await this.keyringController.getKeyringForAccount(e)).type){case q.KEYRING_TYPES.TREZOR:case q.KEYRING_TYPES.LATTICE:case q.KEYRING_TYPES.QR:case q.KEYRING_TYPES.LEDGER:return"hardware";case q.KEYRING_TYPES.IMPORTED:return"imported";default:return"MetaMask"}}async getDeviceModel(e){const t=await this.keyringController.getKeyringForAccount(e);switch(t.type){case q.KEYRING_TYPES.TREZOR:return t.getModel();case q.KEYRING_TYPES.QR:return t.getName();case q.KEYRING_TYPES.LEDGER:return U.DEVICE_NAMES.LEDGER;case q.KEYRING_TYPES.LATTICE:return U.DEVICE_NAMES.LATTICE;default:return"N/A"}}getAccountLabel(e,t,r){return`${e[0].toUpperCase()}${e.slice(1)} ${parseInt(t,10)+1} ${r||""}`.trim()}async unlockHardwareWalletAccount(e,t,r,a){const o=await this.getKeyringForDevice(t,r);o.setAccountToUnlock(e);const i=await this.keyringController.getAccounts(),n=await this.keyringController.addNewAccount(o),s=await this.keyringController.getAccounts();this.preferencesController.setAddresses(s),s.forEach((r=>{if(!i.includes(r)){const i=this.getAccountLabel(t===U.DEVICE_NAMES.QR?o.getName():t,e,a);this.preferencesController.setAccountLabel(r,i),this.preferencesController.setSelectedAddress(r)}}));const{identities:l}=this.preferencesController.store.getState();return{...n,identities:l}}async addNewAccount(e){const[t]=this.keyringController.getKeyringsByType(q.KEYRING_TYPES.HD_KEY_TREE);if(!t)throw new Error("MetamaskController - No HD Key Tree found");const{keyringController:r}=this,{identities:a}=this.preferencesController.store.getState();if(Object.keys(a).length===e){const e=await r.getAccounts(),a=await r.addNewAccount(t),o=await r.getAccounts();await this.verifySeedPhrase(),this.preferencesController.setAddresses(o),o.forEach((t=>{e.includes(t)||this.preferencesController.setSelectedAddress(t)}));const{identities:i}=this.preferencesController.store.getState();return{...a,identities:i}}return{...r.memStore.getState(),identities:a}}async verifySeedPhrase(){const[e]=this.keyringController.getKeyringsByType(q.KEYRING_TYPES.HD_KEY_TREE);if(!e)throw new Error("MetamaskController - No HD Key Tree found");const t=await e.serialize(),r=a.from(t.mnemonic),o=await e.getAccounts();if(o.length<1)throw new Error("MetamaskController - No accounts found");try{return await Ee.default.verifyAccounts(o,r),Array.from(r.values())}catch(e){throw g.default.error(e.message),e}}async resetAccount(){const e=this.preferencesController.getSelectedAddress();return this.txController.wipeTransactions(e),this.networkController.resetConnection(),e}async getPermittedAccounts(e,{suppressUnauthorizedError:t=!0}={}){try{return await this.permissionController.executeRestrictedMethod(e,D.RestrictedMethods.eth_accounts)}catch(e){if(t&&e.code===m.errorCodes.provider.unauthorized)return[];throw e}}removeAllAccountPermissions(e){this.permissionController.updatePermissionsByCaveat(D.CaveatTypes.restrictReturnedAccounts,(t=>xe.CaveatMutatorFactories[D.CaveatTypes.restrictReturnedAccounts].removeAccount(e,t)))}async removeAccount(e){this.removeAllAccountPermissions(e),this.preferencesController.removeAddress(e),this.accountTracker.removeAccount([e]);const t=await this.keyringController.getKeyringForAccount(e);await this.keyringController.removeAccount(e);const r=t?await t.getAccounts():{};var a;0===(null==r?void 0:r.length)&&(null===(a=t.destroy)||void 0===a||a.call(t));return e}async importAccountWithStrategy(e,t){const r=await Me.default.importAccount(e,t),a=await this.keyringController.addNewKeyring(q.KEYRING_TYPES.IMPORTED,[r]),[o]=await a.getAccounts(),i=await this.keyringController.getAccounts();this.preferencesController.setAddresses(i),this.preferencesController.setSelectedAddress(o)}async newUnapprovedTransaction(e,t){return await this.txController.newUnapprovedTransaction(e,t)}async newUnsignedMessage(e,t){const{disabledRpcMethodPreferences:r}=this.preferencesController.store.getState(),{eth_sign:a}=r,o=(0,be.normalizeMsgData)(e.data);let i;if(!a)throw m.ethErrors.rpc.methodNotFound("eth_sign has been disabled. You must enable it in the advanced settings");if(66!==o.length&&67!==o.length)throw m.ethErrors.rpc.invalidParams("eth_sign requires 32 byte message hash");return i=this.messageManager.addUnapprovedMessageAsync(e,t),this.sendUpdate(),this.opts.showUserConfirmation(),await i}async signMessage(e){g.default.info("MetaMaskController - signMessage");const t=e.metamaskId;try{const r=await this.messageManager.approveMessage(e),a=await this.keyringController.signMessage(r);return this.messageManager.setMsgStatusSigned(t,a),this.getState()}catch(e){throw g.default.info("MetaMaskController - eth_sign failed",e),this.messageManager.errorMessage(t,e),e}}cancelMessage(e){const{messageManager:t}=this;return t.rejectMsg(e),this.getState()}async newUnsignedPersonalMessage(e,t){const r=this.personalMessageManager.addUnapprovedMessageAsync(e,t);return this.sendUpdate(),this.opts.showUserConfirmation(),r}async signPersonalMessage(e){g.default.info("MetaMaskController - signPersonalMessage");const t=e.metamaskId;try{const r=await this.personalMessageManager.approveMessage(e),a=await this.keyringController.signPersonalMessage(r);return this.personalMessageManager.setMsgStatusSigned(t,a),this.getState()}catch(e){throw g.default.info("MetaMaskController - eth_personalSign failed",e),this.personalMessageManager.errorMessage(t,e),e}}cancelPersonalMessage(e){return this.personalMessageManager.rejectMsg(e),this.getState()}async newRequestDecryptMessage(e,t){const r=this.decryptMessageManager.addUnapprovedMessageAsync(e,t);return this.sendUpdate(),this.opts.showUserConfirmation(),r}async decryptMessageInline(e){g.default.info("MetaMaskController - decryptMessageInline");const t=e.metamaskId,r=this.decryptMessageManager.getMsg(t);try{const t=(0,B.stripHexPrefix)(e.data),o=a.from(t,"hex");e.data=JSON.parse(o.toString("utf8")),r.rawData=await this.keyringController.decryptMessage(e)}catch(e){r.error=e.message}return this.decryptMessageManager._updateMsg(r),this.getState()}async decryptMessage(e){g.default.info("MetaMaskController - decryptMessage");const t=e.metamaskId;try{const r=await this.decryptMessageManager.approveMessage(e),o=(0,B.stripHexPrefix)(r.data),i=a.from(o,"hex");r.data=JSON.parse(i.toString("utf8"));const n=await this.keyringController.decryptMessage(r);this.decryptMessageManager.setMsgStatusDecrypted(t,n)}catch(e){g.default.info("MetaMaskController - eth_decrypt failed.",e),this.decryptMessageManager.errorMessage(t,e)}return this.getState()}cancelDecryptMessage(e){return this.decryptMessageManager.rejectMsg(e),this.getState()}async newRequestEncryptionPublicKey(e,t){const r=e;switch((await this.keyringController.getKeyringForAccount(r)).type){case q.KEYRING_TYPES.LEDGER:return new Promise(((e,t)=>{t(new Error("Ledger does not support eth_getEncryptionPublicKey."))}));case q.KEYRING_TYPES.TREZOR:return new Promise(((e,t)=>{t(new Error("Trezor does not support eth_getEncryptionPublicKey."))}));case q.KEYRING_TYPES.LATTICE:return new Promise(((e,t)=>{t(new Error("Lattice does not support eth_getEncryptionPublicKey."))}));case q.KEYRING_TYPES.QR:return Promise.reject(new Error("QR hardware does not support eth_getEncryptionPublicKey."));default:{const r=this.encryptionPublicKeyManager.addUnapprovedMessageAsync(e,t);return this.sendUpdate(),this.opts.showUserConfirmation(),r}}}async encryptionPublicKey(e){g.default.info("MetaMaskController - encryptionPublicKey");const t=e.metamaskId;try{const r=await this.encryptionPublicKeyManager.approveMessage(e),a=await this.keyringController.getEncryptionPublicKey(r.data);this.encryptionPublicKeyManager.setMsgStatusReceived(t,a)}catch(e){g.default.info("MetaMaskController - eth_getEncryptionPublicKey failed.",e),this.encryptionPublicKeyManager.errorMessage(t,e)}return this.getState()}cancelEncryptionPublicKey(e){return this.encryptionPublicKeyManager.rejectMsg(e),this.getState()}newUnsignedTypedMessage(e,t,r){const a=this.typedMessageManager.addUnapprovedMessageAsync(e,t,r);return this.sendUpdate(),this.opts.showUserConfirmation(),a}async signTypedMessage(e){g.default.info("MetaMaskController - eth_signTypedData");const t=e.metamaskId,{version:r}=e;try{const a=await this.typedMessageManager.approveMessage(e);"V1"!==r&&"string"==typeof a.data&&(a.data=JSON.parse(a.data));const o=await this.keyringController.signTypedMessage(a,{version:r});return this.typedMessageManager.setMsgStatusSigned(t,o),this.getState()}catch(e){throw g.default.info("MetaMaskController - eth_signTypedData failed.",e),this.typedMessageManager.errorMessage(t,e),e}}cancelTypedMessage(e){return this.typedMessageManager.rejectMsg(e),this.getState()}async getCurrentAccountEIP1559Compatibility(){return!0}async createCancelTransaction(e,t,r){await this.txController.createCancelTransaction(e,t,r);return this.getState()}async createSpeedUpTransaction(e,t,r){await this.txController.createSpeedUpTransaction(e,t,r);return this.getState()}estimateGas(e){return new Promise(((t,r)=>this.txController.txGasUtil.query.estimateGas(e,((e,a)=>e?r(e):t(a.toString(16))))))}markPasswordForgotten(){this.preferencesController.setPasswordForgotten(!0),this.sendUpdate()}unMarkPasswordForgotten(){this.preferencesController.setPasswordForgotten(!1),this.sendUpdate()}setupUntrustedCommunication({connectionStream:e,sender:t,subjectType:r}){const{usePhishDetect:a}=this.preferencesController.store.getState();let o;if(o=r||(t.id&&t.id!==this.extension.runtime.id?$.SUBJECT_TYPES.EXTENSION:$.SUBJECT_TYPES.WEBSITE),t.url){const{hostname:r}=new URL(t.url);this.phishingController.maybeUpdatePhishingLists();const o=this.phishingController.test(r);if(a&&null!=o&&o.result)return void this.sendPhishingWarning(e,r,o)}const i=(0,se.setupMultiplex)(e);this.setupProviderConnection(i.createStream("metamask-provider"),t,o),t.url&&this.setupPublicConfig(i.createStream("publicConfig"))}setupTrustedCommunication(e,t){const r=(0,se.setupMultiplex)(e);this.setupControllerConnection(r.createStream("controller")),this.setupProviderConnection(r.createStream("provider"),t,$.SUBJECT_TYPES.INTERNAL)}setupPhishingCommunication({connectionStream:e}){const{usePhishDetect:t}=this.preferencesController.store.getState();if(!t)return;const r=(0,se.setupMultiplex)(e).createStream("metamask-phishing-safelist");r.on("data",(0,Ae.default)({safelistPhishingDomain:this.safelistPhishingDomain.bind(this)},r))}sendPhishingWarning(e,t,r){const a=I.PHISHING_NEW_ISSUE_URLS[null==r?void 0:r.name];(0,se.setupMultiplex)(e).createStream("phishing").write({hostname:t,newIssueUrl:a})}setupControllerConnection(e){const t=this.getApi();this.activeControllerConnections+=1,this.emit("controllerConnectionChanged",this.activeControllerConnections),e.on("data",(0,Ae.default)(t,e,this.store,this.localStoreApiWrapper));const r=t=>{e._writableState.ended||e.write({jsonrpc:"2.0",method:"sendUpdate",params:[t]})};this.on("update",r);const a=()=>{e._writableState.ended||e.write({jsonrpc:"2.0",method:"startUISync"})};this.startUISync?a():this.once("startUISync",a),e.on("end",(()=>{this.activeControllerConnections-=1,this.emit("controllerConnectionChanged",this.activeControllerConnections),this.removeListener("update",r)}))}setupProviderConnection(e,t,r){let a,o;a=r===$.SUBJECT_TYPES.INTERNAL?$.ORIGIN_METAMASK:new URL(t.url).origin,t.id&&t.id!==this.extension.runtime.id&&this.subjectMetadataController.addSubjectMetadata({origin:a,extensionId:t.id,subjectType:$.SUBJECT_TYPES.EXTENSION}),t.tab&&t.tab.id&&(o=t.tab.id);const n=this.setupProviderEngine({origin:a,sender:t,subjectType:r,tabId:o}),s=(0,u.default)({engine:n}),l=this.addConnection(a,{engine:n});(0,i.default)(e,s,e,(e=>{n._middleware.forEach((e=>{e.destroy&&"function"==typeof e.destroy&&e.destroy()})),l&&this.removeConnection(a,l),e&&g.default.error(e)}))}setupProviderEngine({origin:e,subjectType:t,sender:r,tabId:a}){const{provider:o}=this,i=new l.JsonRpcEngine;return o.on("data",((e,t)=>{if(e)throw e;i.emit("notification",t)})),Q.isManifestV3&&i.push((0,te.default)()),i.push((0,oe.default)({origin:e})),a&&i.push((0,ie.default)({tabId:a})),i.push((0,re.default)({origin:e})),i.push(this.permissionLogController.createMiddleware()),i.push((0,Ne.default)({trackEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),getMetricsState:this.metaMetricsController.store.getState.bind(this.metaMetricsController.store)})),t===$.SUBJECT_TYPES.WEBSITE&&i.push((0,ne.default)({location:r.url,registerOnboarding:this.onboardingController.registerOnboarding})),i.push((0,ae.createMethodMiddleware)({origin:e,subjectType:t,addSubjectMetadata:this.subjectMetadataController.addSubjectMetadata.bind(this.subjectMetadataController),getProviderState:this.getProviderState.bind(this),getUnlockPromise:this.appStateController.getUnlockPromise.bind(this.appStateController),handleWatchAssetRequest:this.tokensController.watchAsset.bind(this.tokensController),requestUserApproval:this.approvalController.addAndShowApprovalRequest.bind(this.approvalController),sendMetrics:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),getAccounts:this.getPermittedAccounts.bind(this,e),getPermissionsForOrigin:this.permissionController.getPermissions.bind(this.permissionController,e),hasPermission:this.permissionController.hasPermission.bind(this.permissionController,e),requestAccountsPermission:this.permissionController.requestPermissions.bind(this.permissionController,{origin:e},{eth_accounts:{}}),requestPermissionsForOrigin:this.permissionController.requestPermissions.bind(this.permissionController,{origin:e}),addCustomRpc:async({chainId:e,blockExplorerUrl:t,ticker:r,chainName:a,rpcUrl:o}={})=>{await this.preferencesController.upsertToFrequentRpcList(o,e,r,a,{blockExplorerUrl:t})},findCustomRpcBy:this.findCustomRpcBy.bind(this),getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),getCurrentRpcUrl:this.networkController.getCurrentRpcUrl.bind(this.networkController),setProviderType:this.networkController.setProviderType.bind(this.networkController),updateRpcTarget:({rpcUrl:e,chainId:t,ticker:r,nickname:a})=>{this.networkController.setRpcTarget(e,t,r,a)},getWeb3ShimUsageState:this.alertController.getWeb3ShimUsageState.bind(this.alertController),setWeb3ShimUsageRecorded:this.alertController.setWeb3ShimUsageRecorded.bind(this.alertController)})),t!==$.SUBJECT_TYPES.INTERNAL&&i.push(this.permissionController.createPermissionMiddleware({origin:e})),i.push(this.metamaskMiddleware),i.push((0,d.providerAsMiddleware)(o)),i}setupPublicConfig(e){const t=(0,s.storeAsStream)(this.publicConfigStore);(0,i.default)(t,e,(e=>{t.destroy(),e&&g.default.error(e)}))}addConnection(e,{engine:t}){if(e===$.ORIGIN_METAMASK)return null;this.connections[e]||(this.connections[e]={});const r=(0,w.default)();return this.connections[e][r]={engine:t},r}removeConnection(e,t){const r=this.connections[e];r&&(delete r[t],0===Object.keys(r).length&&delete this.connections[e])}removeAllConnections(e){const t=this.connections[e];t&&Object.keys(t).forEach((t=>{this.removeConnection(e,t)}))}notifyConnections(e,t){const r=this.connections[e];r&&Object.values(r).forEach((e=>{e.engine&&e.engine.emit("notification",t)}))}notifyAllConnections(e){const t="function"==typeof e?t=>e(t):()=>e;Object.keys(this.connections).forEach((e=>{Object.values(this.connections[e]).forEach((async r=>{r.engine&&r.engine.emit("notification",await t(e))}))}))}async _onKeyringControllerUpdate(e){const{keyrings:t,encryptionKey:r,encryptionSalt:a}=e,o=t.reduce(((e,{accounts:t})=>e.concat(t)),[]);Q.isManifestV3&&await N.default.storage.session.set({loginToken:r,loginSalt:a}),o.length&&(this.preferencesController.syncAddresses(o),this.accountTracker.syncWithAddresses(o))}_onUnlock(){this.notifyAllConnections((async e=>({method:xe.NOTIFICATION_NAMES.unlockStateChanged,params:{isUnlocked:!0,accounts:await this.getPermittedAccounts(e)}}))),this.emit("unlock")}_onLock(){this.notifyAllConnections({method:xe.NOTIFICATION_NAMES.unlockStateChanged,params:{isUnlocked:!1}}),this.emit("lock")}_onStateUpdate(e){this.isClientOpenAndUnlocked=e.isUnlocked&&this._isClientOpen,this.notifyAllConnections({method:xe.NOTIFICATION_NAMES.chainChanged,params:this.getProviderNetworkState(e)})}privateSendUpdate(){this.emit("update",this.getState())}isUnlocked(){return this.keyringController.memStore.getState().isUnlocked}getExternalPendingTransactions(e){return this.smartTransactionsController.getTransactions({addressFrom:e,status:"pending"})}async getPendingNonce(e){const{nonceDetails:t,releaseLock:r}=await this.txController.nonceTracker.getNonceLock(e),a=t.params.highestSuggested;return r(),a}async getNextNonce(e){const t=await this.txController.nonceTracker.getNonceLock(e);return t.releaseLock(),t.nextNonce}async updateAndSetCustomRpc(e,t,r="ETH",a,o){return this.networkController.setRpcTarget(e,t,r,a,o),await this.preferencesController.upsertToFrequentRpcList(e,t,r,a,o),e}async setCustomRpc(e,t,r="ETH",a="",o={}){const i=this.preferencesController.getFrequentRpcListDetail().find((t=>e===t.rpcUrl));return i?this.networkController.setRpcTarget(i.rpcUrl,i.chainId,i.ticker,i.nickname,o):(this.networkController.setRpcTarget(e,t,r,a,o),await this.preferencesController.upsertToFrequentRpcList(e,t,r,a,o)),e}async delCustomRpc(e){await this.preferencesController.removeFromFrequentRpcList(e)}findCustomRpcBy(e){const t=this.preferencesController.getFrequentRpcListDetail();for(const r of t)for(const t of Object.keys(e))if(r[t]===e[t])return r;return null}async setLedgerTransportPreference(e){const t=this.preferencesController.getLedgerTransportPreference(),r=this.preferencesController.setLedgerTransportPreference(e),a=await this.getKeyringForDevice(U.DEVICE_NAMES.LEDGER);return null!=a&&a.updateTransportMethod?a.updateTransportMethod(r).catch((e=>{throw this.preferencesController.setLedgerTransportPreference(t),e})):undefined}recordFirstTimeInfo(e){if(!("firstTimeInfo"in e)){const t=this.platform.getVersion();e.firstTimeInfo={version:t,date:Date.now()}}}set isClientOpen(e){this._isClientOpen=e,this.detectTokensController.isOpen=e}onClientClosed(){try{this.gasFeeController.stopPolling(),this.appStateController.clearPollingTokens()}catch(e){console.error(e)}}onEnvironmentTypeClosed(e){const t=$.POLLING_TOKEN_ENVIRONMENT_TYPES[e];this.appStateController.store.getState()[t].forEach((e=>{this.gasFeeController.disconnectPoller(e),this.appStateController.removePollingToken(e,t)}))}safelistPhishingDomain(e){return this.phishingController.bypass(e)}setLocked(){var e;const[t]=this.keyringController.getKeyringsByType(q.KEYRING_TYPES.TREZOR);t&&t.dispose();const[r]=this.keyringController.getKeyringsByType(q.KEYRING_TYPES.LEDGER);return null==r||null===(e=r.destroy)||void 0===e||e.call(r),Q.isManifestV3&&this.clearLoginArtifacts(),this.keyringController.setLocked()}}r.default=Le}).call(this)}).call(this,e("_process"),e("buffer").Buffer)}}},{package:"$root$",file:"app/scripts/metamask-controller.js"}],[88,{lodash:2735},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var a=e("lodash");var o={version:2,migrate(e){const t=(0,a.cloneDeep)(e);t.meta.version=2;try{"etherscan"===t.data.config.provider.type&&(t.data.config.provider.type="rpc",t.data.config.provider.rpcTarget="https://rpc.metamask.io/")}catch(e){}return Promise.resolve(t)}};r.default=o}}},{package:"$root$",file:"app/scripts/migrations/002.js"}],[89,{lodash:2735},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var a=e("lodash");var o={version:3,migrate(e){const t=(0,a.cloneDeep)(e);t.meta.version=3;try{"https://rawtestrpc.metamask.io/"===t.data.config.provider.rpcTarget&&(t.data.config.provider.rpcTarget="https://testrpc.metamask.io/")}catch(e){}return Promise.resolve(t)}};r.default=o}}},{package:"$root$",file:"app/scripts/migrations/003.js"}],[9,{"../../../shared/modules/string-utils":3254},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var a=e("../../../shared/modules/string-utils");r.default=class{constructor(e={}){const{preferencesController:t,addressBookController:r,trackMetaMetricsEvent:a}=e;this.preferencesController=t,this.addressBookController=r,this._trackMetaMetricsEvent=a}async restoreUserData(e){const t=this.preferencesController.store.getState(),{preferences:r,addressBook:a}=JSON.parse(e);r&&(r.identities=t.identities,r.lostIdentities=t.lostIdentities,r.selectedAddress=t.selectedAddress,this.preferencesController.store.updateState(r)),a&&this.addressBookController.update(a,!0),r&&a&&this._trackMetaMetricsEvent({event:"User Data Imported",category:"Backup"})}async backupUserData(){const e={preferences:{...this.preferencesController.store.getState()},addressBook:{...this.addressBookController.state}};delete e.preferences.identities,delete e.preferences.lostIdentities,delete e.preferences.selectedAddress;const t=JSON.stringify(e),r=new Date,o=e=>(0,a.prependZero)(e,2);return{fileName:`MetaMaskUserData.${r.getFullYear()}_${o(r.getMonth()+1)}_${o(r.getDay())}_${o(r.getHours())}_${o(r.getMinutes())}_${o(r.getDay())}.json`,data:t}}}}}},{package:"$root$",file:"app/scripts/controllers/backup.js"}],[90,{lodash:2735},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var a=e("lodash");var o={version:4,migrate(e){const t=(0,a.cloneDeep)(e);t.meta.version=4;try{if("rpc"!==t.data.config.provider.type)return Promise.resolve(t);switch(t.data.config.provider.rpcTarget){case"https://testrpc.metamask.io/":t.data.config.provider={type:"testnet"};break;case"https://rpc.metamask.io/":t.data.config.provider={type:"mainnet"}}}catch(e){}return Promise.resolve(t)}};r.default=o}}},{package:"$root$",file:"app/scripts/migrations/004.js"}],[91,{lodash:2735},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var a=e("lodash");var o={version:5,migrate(e){const t=(0,a.cloneDeep)(e);t.meta.version=5;try{const e=function(e){const{config:t}=e,r={...e,KeyringController:{vault:e.vault,selectedAccount:t.selectedAccount,walletNicknames:e.walletNicknames}};return delete r.vault,delete r.walletNicknames,delete r.config.selectedAccount,r}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #5${e.stack}`)}return Promise.resolve(t)}};r.default=o}}},{package:"$root$",file:"app/scripts/migrations/005.js"}],[92,{lodash:2735},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var a=e("lodash");var o={version:6,migrate(e){const t=(0,a.cloneDeep)(e);t.meta.version=6;try{const e=function(e){const t=e.KeyringController,r={...e,PreferencesController:{selectedAddress:t.selectedAccount}};return delete r.KeyringController.selectedAccount,r}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #6${e.stack}`)}return Promise.resolve(t)}};r.default=o}}},{package:"$root$",file:"app/scripts/migrations/006.js"}],[924,{"@metamask/base-controller":929,"@metamask/controller-utils":978},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.AddressBookController=void 0;const a=e("@metamask/controller-utils"),o=e("@metamask/base-controller");class i extends o.BaseController{constructor(e,t){super(e,t),this.name="AddressBookController",this.defaultState={addressBook:{}},this.initialize()}clear(){this.update({addressBook:{}})}delete(e,t){if(t=(0,a.toChecksumHexAddress)(t),!(0,a.isValidHexAddress)(t)||!this.state.addressBook[e]||!this.state.addressBook[e][t])return!1;const r=Object.assign({},this.state.addressBook);return delete r[e][t],0===Object.keys(r[e]).length&&delete r[e],this.update({addressBook:r}),!0}set(e,t,r="1",o=""){if(e=(0,a.toChecksumHexAddress)(e),!(0,a.isValidHexAddress)(e))return!1;const i={address:e,chainId:r,isEns:!1,memo:o,name:t},n=(0,a.normalizeEnsName)(t);return n&&(i.name=n,i.isEns=!0),this.update({addressBook:Object.assign(Object.assign({},this.state.addressBook),{[r]:Object.assign(Object.assign({},this.state.addressBook[r]),{[e]:i})})}),!0}}r.AddressBookController=i,r.default=i}}},{package:"@metamask/address-book-controller",file:"node_modules/@metamask/address-book-controller/dist/AddressBookController.js"}],[925,{"./AddressBookController":924},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var a=this&&this.__createBinding||(Object.create?function(e,t,r,a){a===undefined&&(a=r);var o=Object.getOwnPropertyDescriptor(t,r);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,a,o)}:function(e,t,r,a){a===undefined&&(a=r),e[a]=t[r]}),o=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||a(t,e,r)};Object.defineProperty(r,"__esModule",{value:!0}),o(e("./AddressBookController"),r)}}},{package:"@metamask/address-book-controller",file:"node_modules/@metamask/address-book-controller/dist/index.js"}],[926,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.BaseController=void 0;class a{constructor(e={},t={}){this.defaultConfig={},this.defaultState={},this.disabled=!1,this.name="BaseController",this.internalConfig=this.defaultConfig,this.internalState=this.defaultState,this.internalListeners=[],this.initialState=t,this.initialConfig=e}initialize(){return this.internalState=this.defaultState,this.internalConfig=this.defaultConfig,this.configure(this.initialConfig),this.update(this.initialState),this}get config(){return this.internalConfig}get state(){return this.internalState}configure(e,t=!1,r=!0){if(r){this.internalConfig=t?e:Object.assign(this.internalConfig,e);for(const e in this.internalConfig)void 0!==this.internalConfig[e]&&(this[e]=this.internalConfig[e])}else for(const t in e)void 0!==this.internalConfig[t]&&(this.internalConfig[t]=e[t],this[t]=e[t])}notify(){this.disabled||this.internalListeners.forEach((e=>{e(this.internalState)}))}subscribe(e){this.internalListeners.push(e)}unsubscribe(e){const t=this.internalListeners.findIndex((t=>e===t));return t>-1&&this.internalListeners.splice(t,1),t>-1}update(e,t=!1){this.internalState=t?Object.assign({},e):Object.assign({},this.internalState,e),this.notify()}}r.BaseController=a,r.default=a}}},{package:"@metamask/address-book-controller>@metamask/base-controller",file:"node_modules/@metamask/address-book-controller/node_modules/@metamask/base-controller/dist/BaseController.js"}],[927,{immer:2474},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.getPersistentState=r.getAnonymizedState=r.BaseController=void 0;const a=e("immer");(0,a.enablePatches)();function o(e,t,r){return Object.keys(e).reduce(((a,o)=>{const i=t[o][r],n=e[o];return"function"==typeof i?a[o]=i(n):i&&(a[o]=n),a}),{})}r.BaseController=class{constructor({messenger:e,metadata:t,name:r,state:a}){this.messagingSystem=e,this.name=r,this.internalState=a,this.metadata=t,this.messagingSystem.registerActionHandler(`${r}:getState`,(()=>this.state))}get state(){return this.internalState}set state(e){throw new Error("Controller state cannot be directly mutated; use 'update' method instead.")}update(e){const[t,r]=a.produceWithPatches(this.internalState,e);this.internalState=t,this.messagingSystem.publish(`${this.name}:stateChange`,t,r)}destroy(){this.messagingSystem.clearEventSubscriptions(`${this.name}:stateChange`)}},r.getAnonymizedState=function(e,t){return o(e,t,"anonymous")},r.getPersistentState=function(e,t){return o(e,t,"persist")}}}},{package:"@metamask/address-book-controller>@metamask/base-controller",file:"node_modules/@metamask/address-book-controller/node_modules/@metamask/base-controller/dist/BaseControllerV2.js"}],[928,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.ControllerMessenger=r.RestrictedControllerMessenger=void 0;class a{constructor({controllerMessenger:e,name:t,allowedActions:r,allowedEvents:a}){this.controllerMessenger=e,this.controllerName=t,this.allowedActions=r||null,this.allowedEvents=a||null}registerActionHandler(e,t){if(!e.startsWith(`${this.controllerName}:`))throw new Error(`Only allowed registering action handlers prefixed by '${this.controllerName}:'`);this.controllerMessenger.registerActionHandler(e,t)}unregisterActionHandler(e){if(!e.startsWith(`${this.controllerName}:`))throw new Error(`Only allowed unregistering action handlers prefixed by '${this.controllerName}:'`);this.controllerMessenger.unregisterActionHandler(e)}call(e,...t){if(null===this.allowedActions)throw new Error("No actions allowed");if(!this.allowedActions.includes(e))throw new Error(`Action missing from allow list: ${e}`);return this.controllerMessenger.call(e,...t)}publish(e,...t){if(!e.startsWith(`${this.controllerName}:`))throw new Error(`Only allowed publishing events prefixed by '${this.controllerName}:'`);this.controllerMessenger.publish(e,...t)}subscribe(e,t,r){if(null===this.allowedEvents)throw new Error("No events allowed");if(!this.allowedEvents.includes(e))throw new Error(`Event missing from allow list: ${e}`);return r?this.controllerMessenger.subscribe(e,t,r):this.controllerMessenger.subscribe(e,t)}unsubscribe(e,t){if(null===this.allowedEvents)throw new Error("No events allowed");if(!this.allowedEvents.includes(e))throw new Error(`Event missing from allow list: ${e}`);this.controllerMessenger.unsubscribe(e,t)}clearEventSubscriptions(e){if(!e.startsWith(`${this.controllerName}:`))throw new Error(`Only allowed clearing events prefixed by '${this.controllerName}:'`);this.controllerMessenger.clearEventSubscriptions(e)}}r.RestrictedControllerMessenger=a;r.ControllerMessenger=class{constructor(){this.actions=new Map,this.events=new Map,this.eventPayloadCache=new Map}registerActionHandler(e,t){if(this.actions.has(e))throw new Error(`A handler for ${e} has already been registered`);this.actions.set(e,t)}unregisterActionHandler(e){this.actions.delete(e)}clearActions(){this.actions.clear()}call(e,...t){const r=this.actions.get(e);if(!r)throw new Error(`A handler for ${e} has not been registered`);return r(...t)}publish(e,...t){const r=this.events.get(e);if(r)for(const[e,a]of r.entries())if(a){const r=this.eventPayloadCache.get(e),o=a(...t);o!==r&&(this.eventPayloadCache.set(e,o),e(o,r))}else e(...t)}subscribe(e,t,r){let a=this.events.get(e);a||(a=new Map,this.events.set(e,a)),a.set(t,r)}unsubscribe(e,t){const r=this.events.get(e);if(!r||!r.has(t))throw new Error(`Subscription not found for event: ${e}`);r.get(t)&&this.eventPayloadCache.delete(t),r.delete(t)}clearEventSubscriptions(e){this.events.delete(e)}clearSubscriptions(){this.events.clear()}getRestricted({name:e,allowedActions:t,allowedEvents:r}){return new a({controllerMessenger:this,name:e,allowedActions:t,allowedEvents:r})}}}}},{package:"@metamask/address-book-controller>@metamask/base-controller",file:"node_modules/@metamask/address-book-controller/node_modules/@metamask/base-controller/dist/ControllerMessenger.js"}],[929,{"./BaseController":926,"./BaseControllerV2":927,"./ControllerMessenger":928},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var a=this&&this.__createBinding||(Object.create?function(e,t,r,a){a===undefined&&(a=r);var o=Object.getOwnPropertyDescriptor(t,r);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,a,o)}:function(e,t,r,a){a===undefined&&(a=r),e[a]=t[r]}),o=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||a(t,e,r)};Object.defineProperty(r,"__esModule",{value:!0}),r.getPersistentState=r.getAnonymizedState=r.BaseControllerV2=r.BaseController=void 0;var i=e("./BaseController");Object.defineProperty(r,"BaseController",{enumerable:!0,get:function(){return i.BaseController}});var n=e("./BaseControllerV2");Object.defineProperty(r,"BaseControllerV2",{enumerable:!0,get:function(){return n.BaseController}}),Object.defineProperty(r,"getAnonymizedState",{enumerable:!0,get:function(){return n.getAnonymizedState}}),Object.defineProperty(r,"getPersistentState",{enumerable:!0,get:function(){return n.getPersistentState}}),o(e("./ControllerMessenger"),r)}}},{package:"@metamask/address-book-controller>@metamask/base-controller",file:"node_modules/@metamask/address-book-controller/node_modules/@metamask/base-controller/dist/index.js"}],[93,{lodash:2735},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var a=e("lodash");var o={version:7,migrate(e){const t=(0,a.cloneDeep)(e);t.meta.version=7;try{const e=function(e){const t={...e,TransactionManager:{transactions:e.transactions||[],gasMultiplier:e.gasMultiplier||1}};return delete t.transactions,delete t.gasMultiplier,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #7${e.stack}`)}return Promise.resolve(t)}};r.default=o}}},{package:"$root$",file:"app/scripts/migrations/007.js"}],[930,{"@metamask/base-controller":935},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.AnnouncementController=void 0;const a=e("@metamask/base-controller"),o={announcements:{}};class i extends a.BaseController{constructor(e,t){super(e,t||o),this.initialize(),this._addAnnouncements()}_addAnnouncements(){const e={},{allAnnouncements:t}=this.config;Object.values(t).forEach((t=>{e[t.id]=this.state.announcements[t.id]?this.state.announcements[t.id]:Object.assign(Object.assign({},t),{isShown:!1})})),this.update({announcements:e})}updateViewed(e){const t=this.state.announcements;for(const r of Object.keys(e).map(Number))t[r].isShown=e[r];this.update({announcements:t},!0)}}r.AnnouncementController=i}}},{package:"@metamask/announcement-controller",file:"node_modules/@metamask/announcement-controller/dist/AnnouncementController.js"}],[931,{"./AnnouncementController":930},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var a=this&&this.__createBinding||(Object.create?function(e,t,r,a){a===undefined&&(a=r);var o=Object.getOwnPropertyDescriptor(t,r);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,a,o)}:function(e,t,r,a){a===undefined&&(a=r),e[a]=t[r]}),o=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||a(t,e,r)};Object.defineProperty(r,"__esModule",{value:!0}),o(e("./AnnouncementController"),r)}}},{package:"@metamask/announcement-controller",file:"node_modules/@metamask/announcement-controller/dist/index.js"}],[932,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.BaseController=void 0;class a{constructor(e={},t={}){this.defaultConfig={},this.defaultState={},this.disabled=!1,this.name="BaseController",this.internalConfig=this.defaultConfig,this.internalState=this.defaultState,this.internalListeners=[],this.initialState=t,this.initialConfig=e}initialize(){return this.internalState=this.defaultState,this.internalConfig=this.defaultConfig,this.configure(this.initialConfig),this.update(this.initialState),this}get config(){return this.internalConfig}get state(){return this.internalState}configure(e,t=!1,r=!0){if(r){this.internalConfig=t?e:Object.assign(this.internalConfig,e);for(const e in this.internalConfig)void 0!==this.internalConfig[e]&&(this[e]=this.internalConfig[e])}else for(const t in e)void 0!==this.internalConfig[t]&&(this.internalConfig[t]=e[t],this[t]=e[t])}notify(){this.disabled||this.internalListeners.forEach((e=>{e(this.internalState)}))}subscribe(e){this.internalListeners.push(e)}unsubscribe(e){const t=this.internalListeners.findIndex((t=>e===t));return t>-1&&this.internalListeners.splice(t,1),t>-1}update(e,t=!1){this.internalState=t?Object.assign({},e):Object.assign({},this.internalState,e),this.notify()}}r.BaseController=a,r.default=a}}},{package:"@metamask/announcement-controller>@metamask/base-controller",file:"node_modules/@metamask/announcement-controller/node_modules/@metamask/base-controller/dist/BaseController.js"}],[933,{immer:2474},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.getPersistentState=r.getAnonymizedState=r.BaseController=void 0;const a=e("immer");(0,a.enablePatches)();function o(e,t,r){return Object.keys(e).reduce(((a,o)=>{const i=t[o][r],n=e[o];return"function"==typeof i?a[o]=i(n):i&&(a[o]=n),a}),{})}r.BaseController=class{constructor({messenger:e,metadata:t,name:r,state:a}){this.messagingSystem=e,this.name=r,this.internalState=a,this.metadata=t,this.messagingSystem.registerActionHandler(`${r}:getState`,(()=>this.state))}get state(){return this.internalState}set state(e){throw new Error("Controller state cannot be directly mutated; use 'update' method instead.")}update(e){const[t,r]=a.produceWithPatches(this.internalState,e);this.internalState=t,this.messagingSystem.publish(`${this.name}:stateChange`,t,r)}destroy(){this.messagingSystem.clearEventSubscriptions(`${this.name}:stateChange`)}},r.getAnonymizedState=function(e,t){return o(e,t,"anonymous")},r.getPersistentState=function(e,t){return o(e,t,"persist")}}}},{package:"@metamask/announcement-controller>@metamask/base-controller",file:"node_modules/@metamask/announcement-controller/node_modules/@metamask/base-controller/dist/BaseControllerV2.js"}],[934,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.ControllerMessenger=r.RestrictedControllerMessenger=void 0;class a{constructor({controllerMessenger:e,name:t,allowedActions:r,allowedEvents:a}){this.controllerMessenger=e,this.controllerName=t,this.allowedActions=r||null,this.allowedEvents=a||null}registerActionHandler(e,t){if(!e.startsWith(`${this.controllerName}:`))throw new Error(`Only allowed registering action handlers prefixed by '${this.controllerName}:'`);this.controllerMessenger.registerActionHandler(e,t)}unregisterActionHandler(e){if(!e.startsWith(`${this.controllerName}:`))throw new Error(`Only allowed unregistering action handlers prefixed by '${this.controllerName}:'`);this.controllerMessenger.unregisterActionHandler(e)}call(e,...t){if(null===this.allowedActions)throw new Error("No actions allowed");if(!this.allowedActions.includes(e))throw new Error(`Action missing from allow list: ${e}`);return this.controllerMessenger.call(e,...t)}publish(e,...t){if(!e.startsWith(`${this.controllerName}:`))throw new Error(`Only allowed publishing events prefixed by '${this.controllerName}:'`);this.controllerMessenger.publish(e,...t)}subscribe(e,t,r){if(null===this.allowedEvents)throw new Error("No events allowed");if(!this.allowedEvents.includes(e))throw new Error(`Event missing from allow list: ${e}`);return r?this.controllerMessenger.subscribe(e,t,r):this.controllerMessenger.subscribe(e,t)}unsubscribe(e,t){if(null===this.allowedEvents)throw new Error("No events allowed");if(!this.allowedEvents.includes(e))throw new Error(`Event missing from allow list: ${e}`);this.controllerMessenger.unsubscribe(e,t)}clearEventSubscriptions(e){if(!e.startsWith(`${this.controllerName}:`))throw new Error(`Only allowed clearing events prefixed by '${this.controllerName}:'`);this.controllerMessenger.clearEventSubscriptions(e)}}r.RestrictedControllerMessenger=a;r.ControllerMessenger=class{constructor(){this.actions=new Map,this.events=new Map,this.eventPayloadCache=new Map}registerActionHandler(e,t){if(this.actions.has(e))throw new Error(`A handler for ${e} has already been registered`);this.actions.set(e,t)}unregisterActionHandler(e){this.actions.delete(e)}clearActions(){this.actions.clear()}call(e,...t){const r=this.actions.get(e);if(!r)throw new Error(`A handler for ${e} has not been registered`);return r(...t)}publish(e,...t){const r=this.events.get(e);if(r)for(const[e,a]of r.entries())if(a){const r=this.eventPayloadCache.get(e),o=a(...t);o!==r&&(this.eventPayloadCache.set(e,o),e(o,r))}else e(...t)}subscribe(e,t,r){let a=this.events.get(e);a||(a=new Map,this.events.set(e,a)),a.set(t,r)}unsubscribe(e,t){const r=this.events.get(e);if(!r||!r.has(t))throw new Error(`Subscription not found for event: ${e}`);r.get(t)&&this.eventPayloadCache.delete(t),r.delete(t)}clearEventSubscriptions(e){this.events.delete(e)}clearSubscriptions(){this.events.clear()}getRestricted({name:e,allowedActions:t,allowedEvents:r}){return new a({controllerMessenger:this,name:e,allowedActions:t,allowedEvents:r})}}}}},{package:"@metamask/announcement-controller>@metamask/base-controller",file:"node_modules/@metamask/announcement-controller/node_modules/@metamask/base-controller/dist/ControllerMessenger.js"}],[935,{"./BaseController":932,"./BaseControllerV2":933,"./ControllerMessenger":934},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var a=this&&this.__createBinding||(Object.create?function(e,t,r,a){a===undefined&&(a=r);var o=Object.getOwnPropertyDescriptor(t,r);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,a,o)}:function(e,t,r,a){a===undefined&&(a=r),e[a]=t[r]}),o=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||a(t,e,r)};Object.defineProperty(r,"__esModule",{value:!0}),r.getPersistentState=r.getAnonymizedState=r.BaseControllerV2=r.BaseController=void 0;var i=e("./BaseController");Object.defineProperty(r,"BaseController",{enumerable:!0,get:function(){return i.BaseController}});var n=e("./BaseControllerV2");Object.defineProperty(r,"BaseControllerV2",{enumerable:!0,get:function(){return n.BaseController}}),Object.defineProperty(r,"getAnonymizedState",{enumerable:!0,get:function(){return n.getAnonymizedState}}),Object.defineProperty(r,"getPersistentState",{enumerable:!0,get:function(){return n.getPersistentState}}),o(e("./ControllerMessenger"),r)}}},{package:"@metamask/announcement-controller>@metamask/base-controller",file:"node_modules/@metamask/announcement-controller/node_modules/@metamask/base-controller/dist/index.js"}],[936,{"./errors":937,"@metamask/base-controller":961,"eth-rpc-errors":1978,nanoid:939},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.ApprovalController=void 0;const a=e("eth-rpc-errors"),o=e("nanoid"),i=e("@metamask/base-controller"),n=e("./errors"),s="ApprovalController",l={pendingApprovals:{persist:!1,anonymous:!0},pendingApprovalCount:{persist:!1,anonymous:!1}};class c extends i.BaseControllerV2{constructor({messenger:e,showApprovalRequest:t,state:r={}}){super({name:s,metadata:l,messenger:e,state:Object.assign(Object.assign({},{pendingApprovals:{},pendingApprovalCount:0}),r)}),this._approvals=new Map,this._origins=new Map,this._showApprovalRequest=t,this.registerMessageHandlers()}registerMessageHandlers(){this.messagingSystem.registerActionHandler(`${s}:clearRequests`,this.clear.bind(this)),this.messagingSystem.registerActionHandler(`${s}:addRequest`,((e,t)=>t?this.addAndShowApprovalRequest(e):this.add(e))),this.messagingSystem.registerActionHandler(`${s}:hasRequest`,this.has.bind(this)),this.messagingSystem.registerActionHandler(`${s}:acceptRequest`,this.accept.bind(this)),this.messagingSystem.registerActionHandler(`${s}:rejectRequest`,this.reject.bind(this))}addAndShowApprovalRequest(e){const t=this._add(e.origin,e.type,e.id,e.requestData);return this._showApprovalRequest(),t}add(e){return this._add(e.origin,e.type,e.id,e.requestData)}get(e){return this.state.pendingApprovals[e]}getApprovalCount(e={}){var t,r;if(!e.origin&&!e.type)throw new Error("Must specify origin, type, or both.");const{origin:a,type:o}=e;if(a&&o)return Number(Boolean(null===(t=this._origins.get(a))||void 0===t?void 0:t.has(o)));if(a)return(null===(r=this._origins.get(a))||void 0===r?void 0:r.size)||0;let i=0;for(const e of Object.values(this.state.pendingApprovals))e.type===o&&(i+=1);return i}getTotalApprovalCount(){return this.state.pendingApprovalCount}has(e={}){var t;const{id:r,origin:a,type:o}=e;if(r){if("string"!=typeof r)throw new Error("May not specify non-string id.");return this._approvals.has(r)}if(o&&"string"!=typeof o)throw new Error("May not specify non-string type.");if(a){if("string"!=typeof a)throw new Error("May not specify non-string origin.");return o?Boolean(null===(t=this._origins.get(a))||void 0===t?void 0:t.has(o)):this._origins.has(a)}if(o){for(const e of Object.values(this.state.pendingApprovals))if(e.type===o)return!0;return!1}throw new Error("Must specify a valid combination of id, origin, and type.")}accept(e,t){this._deleteApprovalAndGetCallbacks(e).resolve(t)}reject(e,t){this._deleteApprovalAndGetCallbacks(e).reject(t)}clear(e){for(const t of this._approvals.keys())this.reject(t,e);this._origins.clear(),this.update((()=>({pendingApprovals:{},pendingApprovalCount:0})))}_add(e,t,r=(0,o.nanoid)(),i){var n;if(this._validateAddParams(r,e,t,i),null===(n=this._origins.get(e))||void 0===n?void 0:n.has(t))throw a.ethErrors.rpc.resourceUnavailable(((e,t)=>`Request of type '${t}' already pending for origin ${e}. Please wait.`)(e,t));return new Promise(((a,o)=>{this._approvals.set(r,{resolve:a,reject:o}),this._addPendingApprovalOrigin(e,t),this._addToStore(r,e,t,i)}))}_validateAddParams(e,t,r,o){let i=null;if(e&&"string"==typeof e?this._approvals.has(e)?i=`Approval request with id '${e}' already exists.`:t&&"string"==typeof t?r&&"string"==typeof r?o&&("object"!=typeof o||Array.isArray(o))&&(i="Request data must be a plain object if specified."):i="Must specify non-empty string type.":i="Must specify non-empty string origin.":i="Must specify non-empty string id.",i)throw a.ethErrors.rpc.internal(i)}_addPendingApprovalOrigin(e,t){const r=this._origins.get(e)||new Set;r.add(t),this._origins.has(e)||this._origins.set(e,r)}_addToStore(e,t,r,a){const o={id:e,origin:t,type:r,time:Date.now(),requestData:a||null};this.update((t=>{t.pendingApprovals[e]=o,t.pendingApprovalCount=Object.keys(t.pendingApprovals).length}))}_delete(e){this._approvals.delete(e);const{origin:t,type:r}=this.state.pendingApprovals[e];this._origins.get(t).delete(r),this._isEmptyOrigin(t)&&this._origins.delete(t),this.update((t=>{delete t.pendingApprovals[e],t.pendingApprovalCount=Object.keys(t.pendingApprovals).length}))}_deleteApprovalAndGetCallbacks(e){const t=this._approvals.get(e);if(!t)throw new n.ApprovalRequestNotFoundError(e);return this._delete(e),t}_isEmptyOrigin(e){var t;return!(null===(t=this._origins.get(e))||void 0===t?void 0:t.size)}}r.ApprovalController=c,r.default=c}}},{package:"@metamask/approval-controller",file:"node_modules/@metamask/approval-controller/dist/ApprovalController.js"}],[937,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.ApprovalRequestNotFoundError=void 0;class a extends Error{constructor(e){super(`Approval request with id '${e}' not found.`)}}r.ApprovalRequestNotFoundError=a}}},{package:"@metamask/approval-controller",file:"node_modules/@metamask/approval-controller/dist/errors.js"}],[938,{"./ApprovalController":936,"./errors":937},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var a=this&&this.__createBinding||(Object.create?function(e,t,r,a){a===undefined&&(a=r);var o=Object.getOwnPropertyDescriptor(t,r);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,a,o)}:function(e,t,r,a){a===undefined&&(a=r),e[a]=t[r]}),o=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||a(t,e,r)};Object.defineProperty(r,"__esModule",{value:!0}),o(e("./ApprovalController"),r),o(e("./errors"),r)}}},{package:"@metamask/approval-controller",file:"node_modules/@metamask/approval-controller/dist/index.js"}],[939,{"./url-alphabet/index.cjs":940},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){let{urlAlphabet:a}=e("./url-alphabet/index.cjs"),o=e=>crypto.getRandomValues(new Uint8Array(e)),i=(e,t,r)=>{let a=(2<<Math.log(e.length-1)/Math.LN2)-1,o=-~(1.6*a*t/e.length);return(i=t)=>{let n="";for(;;){let t=r(o),s=o;for(;s--;)if(n+=e[t[s]&a]||"",n.length===i)return n}}};t.exports={nanoid:(e=21)=>crypto.getRandomValues(new Uint8Array(e)).reduce(((e,t)=>e+=(t&=63)<36?t.toString(36):t<62?(t-26).toString(36).toUpperCase():t>62?"-":"_"),""),customAlphabet:(e,t=21)=>i(e,t,o),customRandom:i,urlAlphabet:a,random:o}}}},{package:"@metamask/approval-controller>nanoid",file:"node_modules/@metamask/approval-controller/node_modules/nanoid/index.browser.cjs"}],[94,{lodash:2735},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var a=e("lodash");var o={version:8,migrate(e){const t=(0,a.cloneDeep)(e);t.meta.version=8;try{const e=function(e){const t={...e,NoticeController:{noticesList:e.noticesList||[]}};return delete t.noticesList,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #8${e.stack}`)}return Promise.resolve(t)}};r.default=o}}},{package:"$root$",file:"app/scripts/migrations/008.js"}],[940,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){t.exports={urlAlphabet:"useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict"}}}},{package:"@metamask/approval-controller>nanoid",file:"node_modules/@metamask/approval-controller/node_modules/nanoid/url-alphabet/index.cjs"}],[95,{lodash:2735},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var a=e("lodash");var o={version:9,migrate(e){const t=(0,a.cloneDeep)(e);t.meta.version=9;try{const e=function(e){const t=(0,a.merge)({},e,{CurrencyController:{currentCurrency:e.currentFiat||e.fiatCurrency||"USD",conversionRate:e.conversionRate,conversionDate:e.conversionDate}});return delete t.currentFiat,delete t.fiatCurrency,delete t.conversionRate,delete t.conversionDate,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #9${e.stack}`)}return Promise.resolve(t)}};r.default=o}}},{package:"$root$",file:"app/scripts/migrations/009.js"}],[96,{lodash:2735},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var a=e("lodash");var o={version:10,migrate(e){const t=(0,a.cloneDeep)(e);t.meta.version=10;try{const e=function(e){const t=(0,a.merge)({},e,{ShapeShiftController:{shapeShiftTxList:e.shapeShiftTxList||[]}});return delete t.shapeShiftTxList,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #10${e.stack}`)}return Promise.resolve(t)}};r.default=o}}},{package:"$root$",file:"app/scripts/migrations/010.js"}],[962,{"./wordlists/chinese_simplified.json":964,"./wordlists/chinese_traditional.json":965,"./wordlists/czech.json":966,"./wordlists/english.json":967,"./wordlists/french.json":968,"./wordlists/italian.json":969,"./wordlists/japanese.json":970,"./wordlists/korean.json":971,"./wordlists/portuguese.json":972,"./wordlists/spanish.json":973},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0});const a={};let o;r.wordlists=a,r._default=o;try{r._default=o=e("./wordlists/czech.json"),a.czech=o}catch(e){}try{r._default=o=e("./wordlists/chinese_simplified.json"),a.chinese_simplified=o}catch(e){}try{r._default=o=e("./wordlists/chinese_traditional.json"),a.chinese_traditional=o}catch(e){}try{r._default=o=e("./wordlists/korean.json"),a.korean=o}catch(e){}try{r._default=o=e("./wordlists/french.json"),a.french=o}catch(e){}try{r._default=o=e("./wordlists/italian.json"),a.italian=o}catch(e){}try{r._default=o=e("./wordlists/spanish.json"),a.spanish=o}catch(e){}try{r._default=o=e("./wordlists/japanese.json"),a.japanese=o,a.JA=o}catch(e){}try{r._default=o=e("./wordlists/portuguese.json"),a.portuguese=o}catch(e){}try{r._default=o=e("./wordlists/english.json"),a.english=o,a.EN=o}catch(e){}}}},{package:"eth-keyring-controller>@metamask/bip39",file:"node_modules/@metamask/bip39/src/_wordlists.js"}],[963,{"./_wordlists":962,buffer:1731,"create-hash":1848,pbkdf2:2824,randombytes:2880},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){(function(t){(function(){Object.defineProperty(r,"__esModule",{value:!0});const a=e("create-hash"),o=e("pbkdf2"),i=e("randombytes"),n=e("./_wordlists");let s=n._default;const l="Invalid mnemonic",c="Invalid entropy",u="A wordlist is required but a default could not be found.\n"+"Please pass a 2048 word array explicitly.";function d(e){return(e||"").normalize("NFKD")}function p(e,t,r){for(;e.length<r;)e=t+e;return e}function m(e){return parseInt(e,2)}function h(e){return e.map((e=>p(e.toString(2),"0",8))).join("")}function g(e){const t=8*e.length/32,r=a("sha256").update(e).digest();return h(Array.from(r)).slice(0,t)}function f(e){return"mnemonic"+(e||"")}function b(e,r){if(!(r=r||s))throw new Error(u);const a="string"==typeof e?t.from(d(e),"utf8"):e,o=[];let i=[];for(const e of a.values())32===e||12288===e?(o.push(t.from(i)),i=[]):i.push(e);if(o.push(t.from(i)),o.length%3!=0)throw new Error(l);const n=o.map((e=>{const t=r.indexOf(e.toString("utf8"));if(-1===t)throw new Error(l);return p(t.toString(2),"0",11)})).join(""),h=32*Math.floor(n.length/33),f=n.slice(0,h),b=n.slice(h),v=f.match(/(.{1,8})/g).map(m);if(v.length<16)throw new Error(c);if(v.length>32)throw new Error(c);if(v.length%4!=0)throw new Error(c);const k=t.from(v);if(g(k)!==b)throw new Error("Invalid mnemonic checksum");return k.toString("hex")}function v(e,r){if(t.isBuffer(e)||(e=t.from(e,"hex")),!(r=r||s))throw new Error(u);if(e.length<16)throw new TypeError(c);if(e.length>32)throw new TypeError(c);if(e.length%4!=0)throw new TypeError(c);const a=(h(Array.from(e))+g(e)).match(/(.{1,11})/g).map((e=>{const a=m(e);return r=r||[],t.from(d(r[a]),"utf8")})),o="あいこくしん"===r[0]?"　":" ",i=t.from(o,"utf8").length,n=a.reduce(((e,t,r)=>{const o=r<a.length-1;return e+t.length+(o?i:0)}),0),{workingBuffer:l}=a.reduce(((e,t,r)=>{const n=r<a.length-1;return e.workingBuffer.set(t,e.offset),n&&e.workingBuffer.write(o,e.offset+t.length,i,"utf8"),{workingBuffer:e.workingBuffer,offset:e.offset+t.length+(n?i:0)}}),{workingBuffer:t.alloc(n),offset:0});return l}r.mnemonicToSeedSync=function(e,r){const a="string"==typeof e?t.from(d(e),"utf8"):e,i=t.from(f(d(r)),"utf8");return o.pbkdf2Sync(a,i,2048,64,"sha512")},r.mnemonicToSeed=function(e,r){return Promise.resolve().then((()=>function(e,t,r,a,i){return Promise.resolve().then((()=>new Promise(((n,s)=>{o.pbkdf2(e,t,r,a,i,((e,t)=>e?s(e):n(t)))}))))}(t.from(d(e),"utf8"),t.from(f(d(r)),"utf8"),2048,64,"sha512")))},r.mnemonicToEntropy=b,r.entropyToMnemonic=v,r.generateMnemonic=function(e,t,r){if((e=e||128)%32!=0)throw new TypeError(c);return v((t=t||i)(e/8),r)},r.validateMnemonic=function(e,t){try{b(e,t)}catch(e){return!1}return!0},r.setDefaultWordlist=function(e){const t=n.wordlists[e];if(!t)throw new Error('Could not find wordlist for language "'+e+'"');s=t},r.getDefaultWordlist=function(){if(!s)throw new Error("No Default Wordlist set");return Object.keys(n.wordlists).filter((e=>"JA"!==e&&"EN"!==e&&n.wordlists[e].every(((e,t)=>e===s[t]))))[0]};var k=e("./_wordlists");r.wordlists=k.wordlists}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"eth-keyring-controller>@metamask/bip39",file:"node_modules/@metamask/bip39/src/index.js"}],[964,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){t.exports=["的","一","是","在","不","了","有","和","人","这","中","大","为","上","个","国","我","以","要","他","时","来","用","们","生","到","作","地","于","出","就","分","对","成","会","可","主","发","年","动","同","工","也","能","下","过","子","说","产","种","面","而","方","后","多","定","行","学","法","所","民","得","经","十","三","之","进","着","等","部","度","家","电","力","里","如","水","化","高","自","二","理","起","小","物","现","实","加","量","都","两","体","制","机","当","使","点","从","业","本","去","把","性","好","应","开","它","合","还","因","由","其","些","然","前","外","天","政","四","日","那","社","义","事","平","形","相","全","表","间","样","与","关","各","重","新","线","内","数","正","心","反","你","明","看","原","又","么","利","比","或","但","质","气","第","向","道","命","此","变","条","只","没","结","解","问","意","建","月","公","无","系","军","很","情","者","最","立","代","想","已","通","并","提","直","题","党","程","展","五","果","料","象","员","革","位","入","常","文","总","次","品","式","活","设","及","管","特","件","长","求","老","头","基","资","边","流","路","级","少","图","山","统","接","知","较","将","组","见","计","别","她","手","角","期","根","论","运","农","指","几","九","区","强","放","决","西","被","干","做","必","战","先","回","则","任","取","据","处","队","南","给","色","光","门","即","保","治","北","造","百","规","热","领","七","海","口","东","导","器","压","志","世","金","增","争","济","阶","油","思","术","极","交","受","联","什","认","六","共","权","收","证","改","清","美","再","采","转","更","单","风","切","打","白","教","速","花","带","安","场","身","车","例","真","务","具","万","每","目","至","达","走","积","示","议","声","报","斗","完","类","八","离","华","名","确","才","科","张","信","马","节","话","米","整","空","元","况","今","集","温","传","土","许","步","群","广","石","记","需","段","研","界","拉","林","律","叫","且","究","观","越","织","装","影","算","低","持","音","众","书","布","复","容","儿","须","际","商","非","验","连","断","深","难","近","矿","千","周","委","素","技","备","半","办","青","省","列","习","响","约","支","般","史","感","劳","便","团","往","酸","历","市","克","何","除","消","构","府","称","太","准","精","值","号","率","族","维","划","选","标","写","存","候","毛","亲","快","效","斯","院","查","江","型","眼","王","按","格","养","易","置","派","层","片","始","却","专","状","育","厂","京","识","适","属","圆","包","火","住","调","满","县","局","照","参","红","细","引","听","该","铁","价","严","首","底","液","官","德","随","病","苏","失","尔","死","讲","配","女","黄","推","显","谈","罪","神","艺","呢","席","含","企","望","密","批","营","项","防","举","球","英","氧","势","告","李","台","落","木","帮","轮","破","亚","师","围","注","远","字","材","排","供","河","态","封","另","施","减","树","溶","怎","止","案","言","士","均","武","固","叶","鱼","波","视","仅","费","紧","爱","左","章","早","朝","害","续","轻","服","试","食","充","兵","源","判","护","司","足","某","练","差","致","板","田","降","黑","犯","负","击","范","继","兴","似","余","坚","曲","输","修","故","城","夫","够","送","笔","船","占","右","财","吃","富","春","职","觉","汉","画","功","巴","跟","虽","杂","飞","检","吸","助","升","阳","互","初","创","抗","考","投","坏","策","古","径","换","未","跑","留","钢","曾","端","责","站","简","述","钱","副","尽","帝","射","草","冲","承","独","令","限","阿","宣","环","双","请","超","微","让","控","州","良","轴","找","否","纪","益","依","优","顶","础","载","倒","房","突","坐","粉","敌","略","客","袁","冷","胜","绝","析","块","剂","测","丝","协","诉","念","陈","仍","罗","盐","友","洋","错","苦","夜","刑","移","频","逐","靠","混","母","短","皮","终","聚","汽","村","云","哪","既","距","卫","停","烈","央","察","烧","迅","境","若","印","洲","刻","括","激","孔","搞","甚","室","待","核","校","散","侵","吧","甲","游","久","菜","味","旧","模","湖","货","损","预","阻","毫","普","稳","乙","妈","植","息","扩","银","语","挥","酒","守","拿","序","纸","医","缺","雨","吗","针","刘","啊","急","唱","误","训","愿","审","附","获","茶","鲜","粮","斤","孩","脱","硫","肥","善","龙","演","父","渐","血","欢","械","掌","歌","沙","刚","攻","谓","盾","讨","晚","粒","乱","燃","矛","乎","杀","药","宁","鲁","贵","钟","煤","读","班","伯","香","介","迫","句","丰","培","握","兰","担","弦","蛋","沉","假","穿","执","答","乐","谁","顺","烟","缩","征","脸","喜","松","脚","困","异","免","背","星","福","买","染","井","概","慢","怕","磁","倍","祖","皇","促","静","补","评","翻","肉","践","尼","衣","宽","扬","棉","希","伤","操","垂","秋","宜","氢","套","督","振","架","亮","末","宪","庆","编","牛","触","映","雷","销","诗","座","居","抓","裂","胞","呼","娘","景","威","绿","晶","厚","盟","衡","鸡","孙","延","危","胶","屋","乡","临","陆","顾","掉","呀","灯","岁","措","束","耐","剧","玉","赵","跳","哥","季","课","凯","胡","额","款","绍","卷","齐","伟","蒸","殖","永","宗","苗","川","炉","岩","弱","零","杨","奏","沿","露","杆","探","滑","镇","饭","浓","航","怀","赶","库","夺","伊","灵","税","途","灭","赛","归","召","鼓","播","盘","裁","险","康","唯","录","菌","纯","借","糖","盖","横","符","私","努","堂","域","枪","润","幅","哈","竟","熟","虫","泽","脑","壤","碳","欧","遍","侧","寨","敢","彻","虑","斜","薄","庭","纳","弹","饲","伸","折","麦","湿","暗","荷","瓦","塞","床","筑","恶","户","访","塔","奇","透","梁","刀","旋","迹","卡","氯","遇","份","毒","泥","退","洗","摆","灰","彩","卖","耗","夏","择","忙","铜","献","硬","予","繁","圈","雪","函","亦","抽","篇","阵","阴","丁","尺","追","堆","雄","迎","泛","爸","楼","避","谋","吨","野","猪","旗","累","偏","典","馆","索","秦","脂","潮","爷","豆","忽","托","惊","塑","遗","愈","朱","替","纤","粗","倾","尚","痛","楚","谢","奋","购","磨","君","池","旁","碎","骨","监","捕","弟","暴","割","贯","殊","释","词","亡","壁","顿","宝","午","尘","闻","揭","炮","残","冬","桥","妇","警","综","招","吴","付","浮","遭","徐","您","摇","谷","赞","箱","隔","订","男","吹","园","纷","唐","败","宋","玻","巨","耕","坦","荣","闭","湾","键","凡","驻","锅","救","恩","剥","凝","碱","齿","截","炼","麻","纺","禁","废","盛","版","缓","净","睛","昌","婚","涉","筒","嘴","插","岸","朗","庄","街","藏","姑","贸","腐","奴","啦","惯","乘","伙","恢","匀","纱","扎","辩","耳","彪","臣","亿","璃","抵","脉","秀","萨","俄","网","舞","店","喷","纵","寸","汗","挂","洪","贺","闪","柬","爆","烯","津","稻","墙","软","勇","像","滚","厘","蒙","芳","肯","坡","柱","荡","腿","仪","旅","尾","轧","冰","贡","登","黎","削","钻","勒","逃","障","氨","郭","峰","币","港","伏","轨","亩","毕","擦","莫","刺","浪","秘","援","株","健","售","股","岛","甘","泡","睡","童","铸","汤","阀","休","汇","舍","牧","绕","炸","哲","磷","绩","朋","淡","尖","启","陷","柴","呈","徒","颜","泪","稍","忘","泵","蓝","拖","洞","授","镜","辛","壮","锋","贫","虚","弯","摩","泰","幼","廷","尊","窗","纲","弄","隶","疑","氏","宫","姐","震","瑞","怪","尤","琴","循","描","膜","违","夹","腰","缘","珠","穷","森","枝","竹","沟","催","绳","忆","邦","剩","幸","浆","栏","拥","牙","贮","礼","滤","钠","纹","罢","拍","咱","喊","袖","埃","勤","罚","焦","潜","伍","墨","欲","缝","姓","刊","饱","仿","奖","铝","鬼","丽","跨","默","挖","链","扫","喝","袋","炭","污","幕","诸","弧","励","梅","奶","洁","灾","舟","鉴","苯","讼","抱","毁","懂","寒","智","埔","寄","届","跃","渡","挑","丹","艰","贝","碰","拔","爹","戴","码","梦","芽","熔","赤","渔","哭","敬","颗","奔","铅","仲","虎","稀","妹","乏","珍","申","桌","遵","允","隆","螺","仓","魏","锐","晓","氮","兼","隐","碍","赫","拨","忠","肃","缸","牵","抢","博","巧","壳","兄","杜","讯","诚","碧","祥","柯","页","巡","矩","悲","灌","龄","伦","票","寻","桂","铺","圣","恐","恰","郑","趣","抬","荒","腾","贴","柔","滴","猛","阔","辆","妻","填","撤","储","签","闹","扰","紫","砂","递","戏","吊","陶","伐","喂","疗","瓶","婆","抚","臂","摸","忍","虾","蜡","邻","胸","巩","挤","偶","弃","槽","劲","乳","邓","吉","仁","烂","砖","租","乌","舰","伴","瓜","浅","丙","暂","燥","橡","柳","迷","暖","牌","秧","胆","详","簧","踏","瓷","谱","呆","宾","糊","洛","辉","愤","竞","隙","怒","粘","乃","绪","肩","籍","敏","涂","熙","皆","侦","悬","掘","享","纠","醒","狂","锁","淀","恨","牲","霸","爬","赏","逆","玩","陵","祝","秒","浙","貌","役","彼","悉","鸭","趋","凤","晨","畜","辈","秩","卵","署","梯","炎","滩","棋","驱","筛","峡","冒","啥","寿","译","浸","泉","帽","迟","硅","疆","贷","漏","稿","冠","嫩","胁","芯","牢","叛","蚀","奥","鸣","岭","羊","凭","串","塘","绘","酵","融","盆","锡","庙","筹","冻","辅","摄","袭","筋","拒","僚","旱","钾","鸟","漆","沈","眉","疏","添","棒","穗","硝","韩","逼","扭","侨","凉","挺","碗","栽","炒","杯","患","馏","劝","豪","辽","勃","鸿","旦","吏","拜","狗","埋","辊","掩","饮","搬","骂","辞","勾","扣","估","蒋","绒","雾","丈","朵","姆","拟","宇","辑","陕","雕","偿","蓄","崇","剪","倡","厅","咬","驶","薯","刷","斥","番","赋","奉","佛","浇","漫","曼","扇","钙","桃","扶","仔","返","俗","亏","腔","鞋","棱","覆","框","悄","叔","撞","骗","勘","旺","沸","孤","吐","孟","渠","屈","疾","妙","惜","仰","狠","胀","谐","抛","霉","桑","岗","嘛","衰","盗","渗","脏","赖","涌","甜","曹","阅","肌","哩","厉","烃","纬","毅","昨","伪","症","煮","叹","钉","搭","茎","笼","酷","偷","弓","锥","恒","杰","坑","鼻","翼","纶","叙","狱","逮","罐","络","棚","抑","膨","蔬","寺","骤","穆","冶","枯","册","尸","凸","绅","坯","牺","焰","轰","欣","晋","瘦","御","锭","锦","丧","旬","锻","垄","搜","扑","邀","亭","酯","迈","舒","脆","酶","闲","忧","酚","顽","羽","涨","卸","仗","陪","辟","惩","杭","姚","肚","捉","飘","漂","昆","欺","吾","郎","烷","汁","呵","饰","萧","雅","邮","迁","燕","撒","姻","赴","宴","烦","债","帐","斑","铃","旨","醇","董","饼","雏","姿","拌","傅","腹","妥","揉","贤","拆","歪","葡","胺","丢","浩","徽","昂","垫","挡","览","贪","慰","缴","汪","慌","冯","诺","姜","谊","凶","劣","诬","耀","昏","躺","盈","骑","乔","溪","丛","卢","抹","闷","咨","刮","驾","缆","悟","摘","铒","掷","颇","幻","柄","惠","惨","佳","仇","腊","窝","涤","剑","瞧","堡","泼","葱","罩","霍","捞","胎","苍","滨","俩","捅","湘","砍","霞","邵","萄","疯","淮","遂","熊","粪","烘","宿","档","戈","驳","嫂","裕","徙","箭","捐","肠","撑","晒","辨","殿","莲","摊","搅","酱","屏","疫","哀","蔡","堵","沫","皱","畅","叠","阁","莱","敲","辖","钩","痕","坝","巷","饿","祸","丘","玄","溜","曰","逻","彭","尝","卿","妨","艇","吞","韦","怨","矮","歇"]}}},{package:"eth-keyring-controller>@metamask/bip39",file:"node_modules/@metamask/bip39/src/wordlists/chinese_simplified.json"}],[965,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){t.exports=["的","一","是","在","不","了","有","和","人","這","中","大","為","上","個","國","我","以","要","他","時","來","用","們","生","到","作","地","於","出","就","分","對","成","會","可","主","發","年","動","同","工","也","能","下","過","子","說","產","種","面","而","方","後","多","定","行","學","法","所","民","得","經","十","三","之","進","著","等","部","度","家","電","力","裡","如","水","化","高","自","二","理","起","小","物","現","實","加","量","都","兩","體","制","機","當","使","點","從","業","本","去","把","性","好","應","開","它","合","還","因","由","其","些","然","前","外","天","政","四","日","那","社","義","事","平","形","相","全","表","間","樣","與","關","各","重","新","線","內","數","正","心","反","你","明","看","原","又","麼","利","比","或","但","質","氣","第","向","道","命","此","變","條","只","沒","結","解","問","意","建","月","公","無","系","軍","很","情","者","最","立","代","想","已","通","並","提","直","題","黨","程","展","五","果","料","象","員","革","位","入","常","文","總","次","品","式","活","設","及","管","特","件","長","求","老","頭","基","資","邊","流","路","級","少","圖","山","統","接","知","較","將","組","見","計","別","她","手","角","期","根","論","運","農","指","幾","九","區","強","放","決","西","被","幹","做","必","戰","先","回","則","任","取","據","處","隊","南","給","色","光","門","即","保","治","北","造","百","規","熱","領","七","海","口","東","導","器","壓","志","世","金","增","爭","濟","階","油","思","術","極","交","受","聯","什","認","六","共","權","收","證","改","清","美","再","採","轉","更","單","風","切","打","白","教","速","花","帶","安","場","身","車","例","真","務","具","萬","每","目","至","達","走","積","示","議","聲","報","鬥","完","類","八","離","華","名","確","才","科","張","信","馬","節","話","米","整","空","元","況","今","集","溫","傳","土","許","步","群","廣","石","記","需","段","研","界","拉","林","律","叫","且","究","觀","越","織","裝","影","算","低","持","音","眾","書","布","复","容","兒","須","際","商","非","驗","連","斷","深","難","近","礦","千","週","委","素","技","備","半","辦","青","省","列","習","響","約","支","般","史","感","勞","便","團","往","酸","歷","市","克","何","除","消","構","府","稱","太","準","精","值","號","率","族","維","劃","選","標","寫","存","候","毛","親","快","效","斯","院","查","江","型","眼","王","按","格","養","易","置","派","層","片","始","卻","專","狀","育","廠","京","識","適","屬","圓","包","火","住","調","滿","縣","局","照","參","紅","細","引","聽","該","鐵","價","嚴","首","底","液","官","德","隨","病","蘇","失","爾","死","講","配","女","黃","推","顯","談","罪","神","藝","呢","席","含","企","望","密","批","營","項","防","舉","球","英","氧","勢","告","李","台","落","木","幫","輪","破","亞","師","圍","注","遠","字","材","排","供","河","態","封","另","施","減","樹","溶","怎","止","案","言","士","均","武","固","葉","魚","波","視","僅","費","緊","愛","左","章","早","朝","害","續","輕","服","試","食","充","兵","源","判","護","司","足","某","練","差","致","板","田","降","黑","犯","負","擊","范","繼","興","似","餘","堅","曲","輸","修","故","城","夫","夠","送","筆","船","佔","右","財","吃","富","春","職","覺","漢","畫","功","巴","跟","雖","雜","飛","檢","吸","助","昇","陽","互","初","創","抗","考","投","壞","策","古","徑","換","未","跑","留","鋼","曾","端","責","站","簡","述","錢","副","盡","帝","射","草","衝","承","獨","令","限","阿","宣","環","雙","請","超","微","讓","控","州","良","軸","找","否","紀","益","依","優","頂","礎","載","倒","房","突","坐","粉","敵","略","客","袁","冷","勝","絕","析","塊","劑","測","絲","協","訴","念","陳","仍","羅","鹽","友","洋","錯","苦","夜","刑","移","頻","逐","靠","混","母","短","皮","終","聚","汽","村","雲","哪","既","距","衛","停","烈","央","察","燒","迅","境","若","印","洲","刻","括","激","孔","搞","甚","室","待","核","校","散","侵","吧","甲","遊","久","菜","味","舊","模","湖","貨","損","預","阻","毫","普","穩","乙","媽","植","息","擴","銀","語","揮","酒","守","拿","序","紙","醫","缺","雨","嗎","針","劉","啊","急","唱","誤","訓","願","審","附","獲","茶","鮮","糧","斤","孩","脫","硫","肥","善","龍","演","父","漸","血","歡","械","掌","歌","沙","剛","攻","謂","盾","討","晚","粒","亂","燃","矛","乎","殺","藥","寧","魯","貴","鐘","煤","讀","班","伯","香","介","迫","句","豐","培","握","蘭","擔","弦","蛋","沉","假","穿","執","答","樂","誰","順","煙","縮","徵","臉","喜","松","腳","困","異","免","背","星","福","買","染","井","概","慢","怕","磁","倍","祖","皇","促","靜","補","評","翻","肉","踐","尼","衣","寬","揚","棉","希","傷","操","垂","秋","宜","氫","套","督","振","架","亮","末","憲","慶","編","牛","觸","映","雷","銷","詩","座","居","抓","裂","胞","呼","娘","景","威","綠","晶","厚","盟","衡","雞","孫","延","危","膠","屋","鄉","臨","陸","顧","掉","呀","燈","歲","措","束","耐","劇","玉","趙","跳","哥","季","課","凱","胡","額","款","紹","卷","齊","偉","蒸","殖","永","宗","苗","川","爐","岩","弱","零","楊","奏","沿","露","桿","探","滑","鎮","飯","濃","航","懷","趕","庫","奪","伊","靈","稅","途","滅","賽","歸","召","鼓","播","盤","裁","險","康","唯","錄","菌","純","借","糖","蓋","橫","符","私","努","堂","域","槍","潤","幅","哈","竟","熟","蟲","澤","腦","壤","碳","歐","遍","側","寨","敢","徹","慮","斜","薄","庭","納","彈","飼","伸","折","麥","濕","暗","荷","瓦","塞","床","築","惡","戶","訪","塔","奇","透","梁","刀","旋","跡","卡","氯","遇","份","毒","泥","退","洗","擺","灰","彩","賣","耗","夏","擇","忙","銅","獻","硬","予","繁","圈","雪","函","亦","抽","篇","陣","陰","丁","尺","追","堆","雄","迎","泛","爸","樓","避","謀","噸","野","豬","旗","累","偏","典","館","索","秦","脂","潮","爺","豆","忽","托","驚","塑","遺","愈","朱","替","纖","粗","傾","尚","痛","楚","謝","奮","購","磨","君","池","旁","碎","骨","監","捕","弟","暴","割","貫","殊","釋","詞","亡","壁","頓","寶","午","塵","聞","揭","炮","殘","冬","橋","婦","警","綜","招","吳","付","浮","遭","徐","您","搖","谷","贊","箱","隔","訂","男","吹","園","紛","唐","敗","宋","玻","巨","耕","坦","榮","閉","灣","鍵","凡","駐","鍋","救","恩","剝","凝","鹼","齒","截","煉","麻","紡","禁","廢","盛","版","緩","淨","睛","昌","婚","涉","筒","嘴","插","岸","朗","莊","街","藏","姑","貿","腐","奴","啦","慣","乘","夥","恢","勻","紗","扎","辯","耳","彪","臣","億","璃","抵","脈","秀","薩","俄","網","舞","店","噴","縱","寸","汗","掛","洪","賀","閃","柬","爆","烯","津","稻","牆","軟","勇","像","滾","厘","蒙","芳","肯","坡","柱","盪","腿","儀","旅","尾","軋","冰","貢","登","黎","削","鑽","勒","逃","障","氨","郭","峰","幣","港","伏","軌","畝","畢","擦","莫","刺","浪","秘","援","株","健","售","股","島","甘","泡","睡","童","鑄","湯","閥","休","匯","舍","牧","繞","炸","哲","磷","績","朋","淡","尖","啟","陷","柴","呈","徒","顏","淚","稍","忘","泵","藍","拖","洞","授","鏡","辛","壯","鋒","貧","虛","彎","摩","泰","幼","廷","尊","窗","綱","弄","隸","疑","氏","宮","姐","震","瑞","怪","尤","琴","循","描","膜","違","夾","腰","緣","珠","窮","森","枝","竹","溝","催","繩","憶","邦","剩","幸","漿","欄","擁","牙","貯","禮","濾","鈉","紋","罷","拍","咱","喊","袖","埃","勤","罰","焦","潛","伍","墨","欲","縫","姓","刊","飽","仿","獎","鋁","鬼","麗","跨","默","挖","鏈","掃","喝","袋","炭","污","幕","諸","弧","勵","梅","奶","潔","災","舟","鑑","苯","訟","抱","毀","懂","寒","智","埔","寄","屆","躍","渡","挑","丹","艱","貝","碰","拔","爹","戴","碼","夢","芽","熔","赤","漁","哭","敬","顆","奔","鉛","仲","虎","稀","妹","乏","珍","申","桌","遵","允","隆","螺","倉","魏","銳","曉","氮","兼","隱","礙","赫","撥","忠","肅","缸","牽","搶","博","巧","殼","兄","杜","訊","誠","碧","祥","柯","頁","巡","矩","悲","灌","齡","倫","票","尋","桂","鋪","聖","恐","恰","鄭","趣","抬","荒","騰","貼","柔","滴","猛","闊","輛","妻","填","撤","儲","簽","鬧","擾","紫","砂","遞","戲","吊","陶","伐","餵","療","瓶","婆","撫","臂","摸","忍","蝦","蠟","鄰","胸","鞏","擠","偶","棄","槽","勁","乳","鄧","吉","仁","爛","磚","租","烏","艦","伴","瓜","淺","丙","暫","燥","橡","柳","迷","暖","牌","秧","膽","詳","簧","踏","瓷","譜","呆","賓","糊","洛","輝","憤","競","隙","怒","粘","乃","緒","肩","籍","敏","塗","熙","皆","偵","懸","掘","享","糾","醒","狂","鎖","淀","恨","牲","霸","爬","賞","逆","玩","陵","祝","秒","浙","貌","役","彼","悉","鴨","趨","鳳","晨","畜","輩","秩","卵","署","梯","炎","灘","棋","驅","篩","峽","冒","啥","壽","譯","浸","泉","帽","遲","矽","疆","貸","漏","稿","冠","嫩","脅","芯","牢","叛","蝕","奧","鳴","嶺","羊","憑","串","塘","繪","酵","融","盆","錫","廟","籌","凍","輔","攝","襲","筋","拒","僚","旱","鉀","鳥","漆","沈","眉","疏","添","棒","穗","硝","韓","逼","扭","僑","涼","挺","碗","栽","炒","杯","患","餾","勸","豪","遼","勃","鴻","旦","吏","拜","狗","埋","輥","掩","飲","搬","罵","辭","勾","扣","估","蔣","絨","霧","丈","朵","姆","擬","宇","輯","陝","雕","償","蓄","崇","剪","倡","廳","咬","駛","薯","刷","斥","番","賦","奉","佛","澆","漫","曼","扇","鈣","桃","扶","仔","返","俗","虧","腔","鞋","棱","覆","框","悄","叔","撞","騙","勘","旺","沸","孤","吐","孟","渠","屈","疾","妙","惜","仰","狠","脹","諧","拋","黴","桑","崗","嘛","衰","盜","滲","臟","賴","湧","甜","曹","閱","肌","哩","厲","烴","緯","毅","昨","偽","症","煮","嘆","釘","搭","莖","籠","酷","偷","弓","錐","恆","傑","坑","鼻","翼","綸","敘","獄","逮","罐","絡","棚","抑","膨","蔬","寺","驟","穆","冶","枯","冊","屍","凸","紳","坯","犧","焰","轟","欣","晉","瘦","禦","錠","錦","喪","旬","鍛","壟","搜","撲","邀","亭","酯","邁","舒","脆","酶","閒","憂","酚","頑","羽","漲","卸","仗","陪","闢","懲","杭","姚","肚","捉","飄","漂","昆","欺","吾","郎","烷","汁","呵","飾","蕭","雅","郵","遷","燕","撒","姻","赴","宴","煩","債","帳","斑","鈴","旨","醇","董","餅","雛","姿","拌","傅","腹","妥","揉","賢","拆","歪","葡","胺","丟","浩","徽","昂","墊","擋","覽","貪","慰","繳","汪","慌","馮","諾","姜","誼","兇","劣","誣","耀","昏","躺","盈","騎","喬","溪","叢","盧","抹","悶","諮","刮","駕","纜","悟","摘","鉺","擲","頗","幻","柄","惠","慘","佳","仇","臘","窩","滌","劍","瞧","堡","潑","蔥","罩","霍","撈","胎","蒼","濱","倆","捅","湘","砍","霞","邵","萄","瘋","淮","遂","熊","糞","烘","宿","檔","戈","駁","嫂","裕","徙","箭","捐","腸","撐","曬","辨","殿","蓮","攤","攪","醬","屏","疫","哀","蔡","堵","沫","皺","暢","疊","閣","萊","敲","轄","鉤","痕","壩","巷","餓","禍","丘","玄","溜","曰","邏","彭","嘗","卿","妨","艇","吞","韋","怨","矮","歇"]}}},{package:"eth-keyring-controller>@metamask/bip39",file:"node_modules/@metamask/bip39/src/wordlists/chinese_traditional.json"}],[966,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){t.exports=["abdikace","abeceda","adresa","agrese","akce","aktovka","alej","alkohol","amputace","ananas","andulka","anekdota","anketa","antika","anulovat","archa","arogance","asfalt","asistent","aspirace","astma","astronom","atlas","atletika","atol","autobus","azyl","babka","bachor","bacil","baculka","badatel","bageta","bagr","bahno","bakterie","balada","baletka","balkon","balonek","balvan","balza","bambus","bankomat","barbar","baret","barman","baroko","barva","baterka","batoh","bavlna","bazalka","bazilika","bazuka","bedna","beran","beseda","bestie","beton","bezinka","bezmoc","beztak","bicykl","bidlo","biftek","bikiny","bilance","biograf","biolog","bitva","bizon","blahobyt","blatouch","blecha","bledule","blesk","blikat","blizna","blokovat","bloudit","blud","bobek","bobr","bodlina","bodnout","bohatost","bojkot","bojovat","bokorys","bolest","borec","borovice","bota","boubel","bouchat","bouda","boule","bourat","boxer","bradavka","brambora","branka","bratr","brepta","briketa","brko","brloh","bronz","broskev","brunetka","brusinka","brzda","brzy","bublina","bubnovat","buchta","buditel","budka","budova","bufet","bujarost","bukvice","buldok","bulva","bunda","bunkr","burza","butik","buvol","buzola","bydlet","bylina","bytovka","bzukot","capart","carevna","cedr","cedule","cejch","cejn","cela","celer","celkem","celnice","cenina","cennost","cenovka","centrum","cenzor","cestopis","cetka","chalupa","chapadlo","charita","chata","chechtat","chemie","chichot","chirurg","chlad","chleba","chlubit","chmel","chmura","chobot","chochol","chodba","cholera","chomout","chopit","choroba","chov","chrapot","chrlit","chrt","chrup","chtivost","chudina","chutnat","chvat","chvilka","chvost","chyba","chystat","chytit","cibule","cigareta","cihelna","cihla","cinkot","cirkus","cisterna","citace","citrus","cizinec","cizost","clona","cokoliv","couvat","ctitel","ctnost","cudnost","cuketa","cukr","cupot","cvaknout","cval","cvik","cvrkot","cyklista","daleko","dareba","datel","datum","dcera","debata","dechovka","decibel","deficit","deflace","dekl","dekret","demokrat","deprese","derby","deska","detektiv","dikobraz","diktovat","dioda","diplom","disk","displej","divadlo","divoch","dlaha","dlouho","dluhopis","dnes","dobro","dobytek","docent","dochutit","dodnes","dohled","dohoda","dohra","dojem","dojnice","doklad","dokola","doktor","dokument","dolar","doleva","dolina","doma","dominant","domluvit","domov","donutit","dopad","dopis","doplnit","doposud","doprovod","dopustit","dorazit","dorost","dort","dosah","doslov","dostatek","dosud","dosyta","dotaz","dotek","dotknout","doufat","doutnat","dovozce","dozadu","doznat","dozorce","drahota","drak","dramatik","dravec","draze","drdol","drobnost","drogerie","drozd","drsnost","drtit","drzost","duben","duchovno","dudek","duha","duhovka","dusit","dusno","dutost","dvojice","dvorec","dynamit","ekolog","ekonomie","elektron","elipsa","email","emise","emoce","empatie","epizoda","epocha","epopej","epos","esej","esence","eskorta","eskymo","etiketa","euforie","evoluce","exekuce","exkurze","expedice","exploze","export","extrakt","facka","fajfka","fakulta","fanatik","fantazie","farmacie","favorit","fazole","federace","fejeton","fenka","fialka","figurant","filozof","filtr","finance","finta","fixace","fjord","flanel","flirt","flotila","fond","fosfor","fotbal","fotka","foton","frakce","freska","fronta","fukar","funkce","fyzika","galeje","garant","genetika","geolog","gilotina","glazura","glejt","golem","golfista","gotika","graf","gramofon","granule","grep","gril","grog","groteska","guma","hadice","hadr","hala","halenka","hanba","hanopis","harfa","harpuna","havran","hebkost","hejkal","hejno","hejtman","hektar","helma","hematom","herec","herna","heslo","hezky","historik","hladovka","hlasivky","hlava","hledat","hlen","hlodavec","hloh","hloupost","hltat","hlubina","hluchota","hmat","hmota","hmyz","hnis","hnojivo","hnout","hoblina","hoboj","hoch","hodiny","hodlat","hodnota","hodovat","hojnost","hokej","holinka","holka","holub","homole","honitba","honorace","horal","horda","horizont","horko","horlivec","hormon","hornina","horoskop","horstvo","hospoda","hostina","hotovost","houba","houf","houpat","houska","hovor","hradba","hranice","hravost","hrazda","hrbolek","hrdina","hrdlo","hrdost","hrnek","hrobka","hromada","hrot","hrouda","hrozen","hrstka","hrubost","hryzat","hubenost","hubnout","hudba","hukot","humr","husita","hustota","hvozd","hybnost","hydrant","hygiena","hymna","hysterik","idylka","ihned","ikona","iluze","imunita","infekce","inflace","inkaso","inovace","inspekce","internet","invalida","investor","inzerce","ironie","jablko","jachta","jahoda","jakmile","jakost","jalovec","jantar","jarmark","jaro","jasan","jasno","jatka","javor","jazyk","jedinec","jedle","jednatel","jehlan","jekot","jelen","jelito","jemnost","jenom","jepice","jeseter","jevit","jezdec","jezero","jinak","jindy","jinoch","jiskra","jistota","jitrnice","jizva","jmenovat","jogurt","jurta","kabaret","kabel","kabinet","kachna","kadet","kadidlo","kahan","kajak","kajuta","kakao","kaktus","kalamita","kalhoty","kalibr","kalnost","kamera","kamkoliv","kamna","kanibal","kanoe","kantor","kapalina","kapela","kapitola","kapka","kaple","kapota","kapr","kapusta","kapybara","karamel","karotka","karton","kasa","katalog","katedra","kauce","kauza","kavalec","kazajka","kazeta","kazivost","kdekoliv","kdesi","kedluben","kemp","keramika","kino","klacek","kladivo","klam","klapot","klasika","klaun","klec","klenba","klepat","klesnout","klid","klima","klisna","klobouk","klokan","klopa","kloub","klubovna","klusat","kluzkost","kmen","kmitat","kmotr","kniha","knot","koalice","koberec","kobka","kobliha","kobyla","kocour","kohout","kojenec","kokos","koktejl","kolaps","koleda","kolize","kolo","komando","kometa","komik","komnata","komora","kompas","komunita","konat","koncept","kondice","konec","konfese","kongres","konina","konkurs","kontakt","konzerva","kopanec","kopie","kopnout","koprovka","korbel","korektor","kormidlo","koroptev","korpus","koruna","koryto","korzet","kosatec","kostka","kotel","kotleta","kotoul","koukat","koupelna","kousek","kouzlo","kovboj","koza","kozoroh","krabice","krach","krajina","kralovat","krasopis","kravata","kredit","krejcar","kresba","kreveta","kriket","kritik","krize","krkavec","krmelec","krmivo","krocan","krok","kronika","kropit","kroupa","krovka","krtek","kruhadlo","krupice","krutost","krvinka","krychle","krypta","krystal","kryt","kudlanka","kufr","kujnost","kukla","kulajda","kulich","kulka","kulomet","kultura","kuna","kupodivu","kurt","kurzor","kutil","kvalita","kvasinka","kvestor","kynolog","kyselina","kytara","kytice","kytka","kytovec","kyvadlo","labrador","lachtan","ladnost","laik","lakomec","lamela","lampa","lanovka","lasice","laso","lastura","latinka","lavina","lebka","leckdy","leden","lednice","ledovka","ledvina","legenda","legie","legrace","lehce","lehkost","lehnout","lektvar","lenochod","lentilka","lepenka","lepidlo","letadlo","letec","letmo","letokruh","levhart","levitace","levobok","libra","lichotka","lidojed","lidskost","lihovina","lijavec","lilek","limetka","linie","linka","linoleum","listopad","litina","litovat","lobista","lodivod","logika","logoped","lokalita","loket","lomcovat","lopata","lopuch","lord","losos","lotr","loudal","louh","louka","louskat","lovec","lstivost","lucerna","lucifer","lump","lusk","lustrace","lvice","lyra","lyrika","lysina","madam","madlo","magistr","mahagon","majetek","majitel","majorita","makak","makovice","makrela","malba","malina","malovat","malvice","maminka","mandle","manko","marnost","masakr","maskot","masopust","matice","matrika","maturita","mazanec","mazivo","mazlit","mazurka","mdloba","mechanik","meditace","medovina","melasa","meloun","mentolka","metla","metoda","metr","mezera","migrace","mihnout","mihule","mikina","mikrofon","milenec","milimetr","milost","mimika","mincovna","minibar","minomet","minulost","miska","mistr","mixovat","mladost","mlha","mlhovina","mlok","mlsat","mluvit","mnich","mnohem","mobil","mocnost","modelka","modlitba","mohyla","mokro","molekula","momentka","monarcha","monokl","monstrum","montovat","monzun","mosaz","moskyt","most","motivace","motorka","motyka","moucha","moudrost","mozaika","mozek","mozol","mramor","mravenec","mrkev","mrtvola","mrzet","mrzutost","mstitel","mudrc","muflon","mulat","mumie","munice","muset","mutace","muzeum","muzikant","myslivec","mzda","nabourat","nachytat","nadace","nadbytek","nadhoz","nadobro","nadpis","nahlas","nahnat","nahodile","nahradit","naivita","najednou","najisto","najmout","naklonit","nakonec","nakrmit","nalevo","namazat","namluvit","nanometr","naoko","naopak","naostro","napadat","napevno","naplnit","napnout","naposled","naprosto","narodit","naruby","narychlo","nasadit","nasekat","naslepo","nastat","natolik","navenek","navrch","navzdory","nazvat","nebe","nechat","necky","nedaleko","nedbat","neduh","negace","nehet","nehoda","nejen","nejprve","neklid","nelibost","nemilost","nemoc","neochota","neonka","nepokoj","nerost","nerv","nesmysl","nesoulad","netvor","neuron","nevina","nezvykle","nicota","nijak","nikam","nikdy","nikl","nikterak","nitro","nocleh","nohavice","nominace","nora","norek","nositel","nosnost","nouze","noviny","novota","nozdra","nuda","nudle","nuget","nutit","nutnost","nutrie","nymfa","obal","obarvit","obava","obdiv","obec","obehnat","obejmout","obezita","obhajoba","obilnice","objasnit","objekt","obklopit","oblast","oblek","obliba","obloha","obluda","obnos","obohatit","obojek","obout","obrazec","obrna","obruba","obrys","obsah","obsluha","obstarat","obuv","obvaz","obvinit","obvod","obvykle","obyvatel","obzor","ocas","ocel","ocenit","ochladit","ochota","ochrana","ocitnout","odboj","odbyt","odchod","odcizit","odebrat","odeslat","odevzdat","odezva","odhadce","odhodit","odjet","odjinud","odkaz","odkoupit","odliv","odluka","odmlka","odolnost","odpad","odpis","odplout","odpor","odpustit","odpykat","odrazka","odsoudit","odstup","odsun","odtok","odtud","odvaha","odveta","odvolat","odvracet","odznak","ofina","ofsajd","ohlas","ohnisko","ohrada","ohrozit","ohryzek","okap","okenice","oklika","okno","okouzlit","okovy","okrasa","okres","okrsek","okruh","okupant","okurka","okusit","olejnina","olizovat","omak","omeleta","omezit","omladina","omlouvat","omluva","omyl","onehdy","opakovat","opasek","operace","opice","opilost","opisovat","opora","opozice","opravdu","oproti","orbital","orchestr","orgie","orlice","orloj","ortel","osada","oschnout","osika","osivo","oslava","oslepit","oslnit","oslovit","osnova","osoba","osolit","ospalec","osten","ostraha","ostuda","ostych","osvojit","oteplit","otisk","otop","otrhat","otrlost","otrok","otruby","otvor","ovanout","ovar","oves","ovlivnit","ovoce","oxid","ozdoba","pachatel","pacient","padouch","pahorek","pakt","palanda","palec","palivo","paluba","pamflet","pamlsek","panenka","panika","panna","panovat","panstvo","pantofle","paprika","parketa","parodie","parta","paruka","paryba","paseka","pasivita","pastelka","patent","patrona","pavouk","pazneht","pazourek","pecka","pedagog","pejsek","peklo","peloton","penalta","pendrek","penze","periskop","pero","pestrost","petarda","petice","petrolej","pevnina","pexeso","pianista","piha","pijavice","pikle","piknik","pilina","pilnost","pilulka","pinzeta","pipeta","pisatel","pistole","pitevna","pivnice","pivovar","placenta","plakat","plamen","planeta","plastika","platit","plavidlo","plaz","plech","plemeno","plenta","ples","pletivo","plevel","plivat","plnit","plno","plocha","plodina","plomba","plout","pluk","plyn","pobavit","pobyt","pochod","pocit","poctivec","podat","podcenit","podepsat","podhled","podivit","podklad","podmanit","podnik","podoba","podpora","podraz","podstata","podvod","podzim","poezie","pohanka","pohnutka","pohovor","pohroma","pohyb","pointa","pojistka","pojmout","pokazit","pokles","pokoj","pokrok","pokuta","pokyn","poledne","polibek","polknout","poloha","polynom","pomalu","pominout","pomlka","pomoc","pomsta","pomyslet","ponechat","ponorka","ponurost","popadat","popel","popisek","poplach","poprosit","popsat","popud","poradce","porce","porod","porucha","poryv","posadit","posed","posila","poskok","poslanec","posoudit","pospolu","postava","posudek","posyp","potah","potkan","potlesk","potomek","potrava","potupa","potvora","poukaz","pouto","pouzdro","povaha","povidla","povlak","povoz","povrch","povstat","povyk","povzdech","pozdrav","pozemek","poznatek","pozor","pozvat","pracovat","prahory","praktika","prales","praotec","praporek","prase","pravda","princip","prkno","probudit","procento","prodej","profese","prohra","projekt","prolomit","promile","pronikat","propad","prorok","prosba","proton","proutek","provaz","prskavka","prsten","prudkost","prut","prvek","prvohory","psanec","psovod","pstruh","ptactvo","puberta","puch","pudl","pukavec","puklina","pukrle","pult","pumpa","punc","pupen","pusa","pusinka","pustina","putovat","putyka","pyramida","pysk","pytel","racek","rachot","radiace","radnice","radon","raft","ragby","raketa","rakovina","rameno","rampouch","rande","rarach","rarita","rasovna","rastr","ratolest","razance","razidlo","reagovat","reakce","recept","redaktor","referent","reflex","rejnok","reklama","rekord","rekrut","rektor","reputace","revize","revma","revolver","rezerva","riskovat","riziko","robotika","rodokmen","rohovka","rokle","rokoko","romaneto","ropovod","ropucha","rorejs","rosol","rostlina","rotmistr","rotoped","rotunda","roubenka","roucho","roup","roura","rovina","rovnice","rozbor","rozchod","rozdat","rozeznat","rozhodce","rozinka","rozjezd","rozkaz","rozloha","rozmar","rozpad","rozruch","rozsah","roztok","rozum","rozvod","rubrika","ruchadlo","rukavice","rukopis","ryba","rybolov","rychlost","rydlo","rypadlo","rytina","ryzost","sadista","sahat","sako","samec","samizdat","samota","sanitka","sardinka","sasanka","satelit","sazba","sazenice","sbor","schovat","sebranka","secese","sedadlo","sediment","sedlo","sehnat","sejmout","sekera","sekta","sekunda","sekvoje","semeno","seno","servis","sesadit","seshora","seskok","seslat","sestra","sesuv","sesypat","setba","setina","setkat","setnout","setrvat","sever","seznam","shoda","shrnout","sifon","silnice","sirka","sirotek","sirup","situace","skafandr","skalisko","skanzen","skaut","skeptik","skica","skladba","sklenice","sklo","skluz","skoba","skokan","skoro","skripta","skrz","skupina","skvost","skvrna","slabika","sladidlo","slanina","slast","slavnost","sledovat","slepec","sleva","slezina","slib","slina","sliznice","slon","sloupek","slovo","sluch","sluha","slunce","slupka","slza","smaragd","smetana","smilstvo","smlouva","smog","smrad","smrk","smrtka","smutek","smysl","snad","snaha","snob","sobota","socha","sodovka","sokol","sopka","sotva","souboj","soucit","soudce","souhlas","soulad","soumrak","souprava","soused","soutok","souviset","spalovna","spasitel","spis","splav","spodek","spojenec","spolu","sponzor","spornost","spousta","sprcha","spustit","sranda","sraz","srdce","srna","srnec","srovnat","srpen","srst","srub","stanice","starosta","statika","stavba","stehno","stezka","stodola","stolek","stopa","storno","stoupat","strach","stres","strhnout","strom","struna","studna","stupnice","stvol","styk","subjekt","subtropy","suchar","sudost","sukno","sundat","sunout","surikata","surovina","svah","svalstvo","svetr","svatba","svazek","svisle","svitek","svoboda","svodidlo","svorka","svrab","sykavka","sykot","synek","synovec","sypat","sypkost","syrovost","sysel","sytost","tabletka","tabule","tahoun","tajemno","tajfun","tajga","tajit","tajnost","taktika","tamhle","tampon","tancovat","tanec","tanker","tapeta","tavenina","tazatel","technika","tehdy","tekutina","telefon","temnota","tendence","tenista","tenor","teplota","tepna","teprve","terapie","termoska","textil","ticho","tiskopis","titulek","tkadlec","tkanina","tlapka","tleskat","tlukot","tlupa","tmel","toaleta","topinka","topol","torzo","touha","toulec","tradice","traktor","tramp","trasa","traverza","trefit","trest","trezor","trhavina","trhlina","trochu","trojice","troska","trouba","trpce","trpitel","trpkost","trubec","truchlit","truhlice","trus","trvat","tudy","tuhnout","tuhost","tundra","turista","turnaj","tuzemsko","tvaroh","tvorba","tvrdost","tvrz","tygr","tykev","ubohost","uboze","ubrat","ubrousek","ubrus","ubytovna","ucho","uctivost","udivit","uhradit","ujednat","ujistit","ujmout","ukazatel","uklidnit","uklonit","ukotvit","ukrojit","ulice","ulita","ulovit","umyvadlo","unavit","uniforma","uniknout","upadnout","uplatnit","uplynout","upoutat","upravit","uran","urazit","usednout","usilovat","usmrtit","usnadnit","usnout","usoudit","ustlat","ustrnout","utahovat","utkat","utlumit","utonout","utopenec","utrousit","uvalit","uvolnit","uvozovka","uzdravit","uzel","uzenina","uzlina","uznat","vagon","valcha","valoun","vana","vandal","vanilka","varan","varhany","varovat","vcelku","vchod","vdova","vedro","vegetace","vejce","velbloud","veletrh","velitel","velmoc","velryba","venkov","veranda","verze","veselka","veskrze","vesnice","vespodu","vesta","veterina","veverka","vibrace","vichr","videohra","vidina","vidle","vila","vinice","viset","vitalita","vize","vizitka","vjezd","vklad","vkus","vlajka","vlak","vlasec","vlevo","vlhkost","vliv","vlnovka","vloupat","vnucovat","vnuk","voda","vodivost","vodoznak","vodstvo","vojensky","vojna","vojsko","volant","volba","volit","volno","voskovka","vozidlo","vozovna","vpravo","vrabec","vracet","vrah","vrata","vrba","vrcholek","vrhat","vrstva","vrtule","vsadit","vstoupit","vstup","vtip","vybavit","vybrat","vychovat","vydat","vydra","vyfotit","vyhledat","vyhnout","vyhodit","vyhradit","vyhubit","vyjasnit","vyjet","vyjmout","vyklopit","vykonat","vylekat","vymazat","vymezit","vymizet","vymyslet","vynechat","vynikat","vynutit","vypadat","vyplatit","vypravit","vypustit","vyrazit","vyrovnat","vyrvat","vyslovit","vysoko","vystavit","vysunout","vysypat","vytasit","vytesat","vytratit","vyvinout","vyvolat","vyvrhel","vyzdobit","vyznat","vzadu","vzbudit","vzchopit","vzdor","vzduch","vzdychat","vzestup","vzhledem","vzkaz","vzlykat","vznik","vzorek","vzpoura","vztah","vztek","xylofon","zabrat","zabydlet","zachovat","zadarmo","zadusit","zafoukat","zahltit","zahodit","zahrada","zahynout","zajatec","zajet","zajistit","zaklepat","zakoupit","zalepit","zamezit","zamotat","zamyslet","zanechat","zanikat","zaplatit","zapojit","zapsat","zarazit","zastavit","zasunout","zatajit","zatemnit","zatknout","zaujmout","zavalit","zavelet","zavinit","zavolat","zavrtat","zazvonit","zbavit","zbrusu","zbudovat","zbytek","zdaleka","zdarma","zdatnost","zdivo","zdobit","zdroj","zdvih","zdymadlo","zelenina","zeman","zemina","zeptat","zezadu","zezdola","zhatit","zhltnout","zhluboka","zhotovit","zhruba","zima","zimnice","zjemnit","zklamat","zkoumat","zkratka","zkumavka","zlato","zlehka","zloba","zlom","zlost","zlozvyk","zmapovat","zmar","zmatek","zmije","zmizet","zmocnit","zmodrat","zmrzlina","zmutovat","znak","znalost","znamenat","znovu","zobrazit","zotavit","zoubek","zoufale","zplodit","zpomalit","zprava","zprostit","zprudka","zprvu","zrada","zranit","zrcadlo","zrnitost","zrno","zrovna","zrychlit","zrzavost","zticha","ztratit","zubovina","zubr","zvednout","zvenku","zvesela","zvon","zvrat","zvukovod","zvyk"]}}},{package:"eth-keyring-controller>@metamask/bip39",file:"node_modules/@metamask/bip39/src/wordlists/czech.json"}],[967,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){t.exports=["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"]}}},{package:"eth-keyring-controller>@metamask/bip39",file:"node_modules/@metamask/bip39/src/wordlists/english.json"}],[968,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){t.exports=["abaisser","abandon","abdiquer","abeille","abolir","aborder","aboutir","aboyer","abrasif","abreuver","abriter","abroger","abrupt","absence","absolu","absurde","abusif","abyssal","académie","acajou","acarien","accabler","accepter","acclamer","accolade","accroche","accuser","acerbe","achat","acheter","aciduler","acier","acompte","acquérir","acronyme","acteur","actif","actuel","adepte","adéquat","adhésif","adjectif","adjuger","admettre","admirer","adopter","adorer","adoucir","adresse","adroit","adulte","adverbe","aérer","aéronef","affaire","affecter","affiche","affreux","affubler","agacer","agencer","agile","agiter","agrafer","agréable","agrume","aider","aiguille","ailier","aimable","aisance","ajouter","ajuster","alarmer","alchimie","alerte","algèbre","algue","aliéner","aliment","alléger","alliage","allouer","allumer","alourdir","alpaga","altesse","alvéole","amateur","ambigu","ambre","aménager","amertume","amidon","amiral","amorcer","amour","amovible","amphibie","ampleur","amusant","analyse","anaphore","anarchie","anatomie","ancien","anéantir","angle","angoisse","anguleux","animal","annexer","annonce","annuel","anodin","anomalie","anonyme","anormal","antenne","antidote","anxieux","apaiser","apéritif","aplanir","apologie","appareil","appeler","apporter","appuyer","aquarium","aqueduc","arbitre","arbuste","ardeur","ardoise","argent","arlequin","armature","armement","armoire","armure","arpenter","arracher","arriver","arroser","arsenic","artériel","article","aspect","asphalte","aspirer","assaut","asservir","assiette","associer","assurer","asticot","astre","astuce","atelier","atome","atrium","atroce","attaque","attentif","attirer","attraper","aubaine","auberge","audace","audible","augurer","aurore","automne","autruche","avaler","avancer","avarice","avenir","averse","aveugle","aviateur","avide","avion","aviser","avoine","avouer","avril","axial","axiome","badge","bafouer","bagage","baguette","baignade","balancer","balcon","baleine","balisage","bambin","bancaire","bandage","banlieue","bannière","banquier","barbier","baril","baron","barque","barrage","bassin","bastion","bataille","bateau","batterie","baudrier","bavarder","belette","bélier","belote","bénéfice","berceau","berger","berline","bermuda","besace","besogne","bétail","beurre","biberon","bicycle","bidule","bijou","bilan","bilingue","billard","binaire","biologie","biopsie","biotype","biscuit","bison","bistouri","bitume","bizarre","blafard","blague","blanchir","blessant","blinder","blond","bloquer","blouson","bobard","bobine","boire","boiser","bolide","bonbon","bondir","bonheur","bonifier","bonus","bordure","borne","botte","boucle","boueux","bougie","boulon","bouquin","bourse","boussole","boutique","boxeur","branche","brasier","brave","brebis","brèche","breuvage","bricoler","brigade","brillant","brioche","brique","brochure","broder","bronzer","brousse","broyeur","brume","brusque","brutal","bruyant","buffle","buisson","bulletin","bureau","burin","bustier","butiner","butoir","buvable","buvette","cabanon","cabine","cachette","cadeau","cadre","caféine","caillou","caisson","calculer","calepin","calibre","calmer","calomnie","calvaire","camarade","caméra","camion","campagne","canal","caneton","canon","cantine","canular","capable","caporal","caprice","capsule","capter","capuche","carabine","carbone","caresser","caribou","carnage","carotte","carreau","carton","cascade","casier","casque","cassure","causer","caution","cavalier","caverne","caviar","cédille","ceinture","céleste","cellule","cendrier","censurer","central","cercle","cérébral","cerise","cerner","cerveau","cesser","chagrin","chaise","chaleur","chambre","chance","chapitre","charbon","chasseur","chaton","chausson","chavirer","chemise","chenille","chéquier","chercher","cheval","chien","chiffre","chignon","chimère","chiot","chlorure","chocolat","choisir","chose","chouette","chrome","chute","cigare","cigogne","cimenter","cinéma","cintrer","circuler","cirer","cirque","citerne","citoyen","citron","civil","clairon","clameur","claquer","classe","clavier","client","cligner","climat","clivage","cloche","clonage","cloporte","cobalt","cobra","cocasse","cocotier","coder","codifier","coffre","cogner","cohésion","coiffer","coincer","colère","colibri","colline","colmater","colonel","combat","comédie","commande","compact","concert","conduire","confier","congeler","connoter","consonne","contact","convexe","copain","copie","corail","corbeau","cordage","corniche","corpus","correct","cortège","cosmique","costume","coton","coude","coupure","courage","couteau","couvrir","coyote","crabe","crainte","cravate","crayon","créature","créditer","crémeux","creuser","crevette","cribler","crier","cristal","critère","croire","croquer","crotale","crucial","cruel","crypter","cubique","cueillir","cuillère","cuisine","cuivre","culminer","cultiver","cumuler","cupide","curatif","curseur","cyanure","cycle","cylindre","cynique","daigner","damier","danger","danseur","dauphin","débattre","débiter","déborder","débrider","débutant","décaler","décembre","déchirer","décider","déclarer","décorer","décrire","décupler","dédale","déductif","déesse","défensif","défiler","défrayer","dégager","dégivrer","déglutir","dégrafer","déjeuner","délice","déloger","demander","demeurer","démolir","dénicher","dénouer","dentelle","dénuder","départ","dépenser","déphaser","déplacer","déposer","déranger","dérober","désastre","descente","désert","désigner","désobéir","dessiner","destrier","détacher","détester","détourer","détresse","devancer","devenir","deviner","devoir","diable","dialogue","diamant","dicter","différer","digérer","digital","digne","diluer","dimanche","diminuer","dioxyde","directif","diriger","discuter","disposer","dissiper","distance","divertir","diviser","docile","docteur","dogme","doigt","domaine","domicile","dompter","donateur","donjon","donner","dopamine","dortoir","dorure","dosage","doseur","dossier","dotation","douanier","double","douceur","douter","doyen","dragon","draper","dresser","dribbler","droiture","duperie","duplexe","durable","durcir","dynastie","éblouir","écarter","écharpe","échelle","éclairer","éclipse","éclore","écluse","école","économie","écorce","écouter","écraser","écrémer","écrivain","écrou","écume","écureuil","édifier","éduquer","effacer","effectif","effigie","effort","effrayer","effusion","égaliser","égarer","éjecter","élaborer","élargir","électron","élégant","éléphant","élève","éligible","élitisme","éloge","élucider","éluder","emballer","embellir","embryon","émeraude","émission","emmener","émotion","émouvoir","empereur","employer","emporter","emprise","émulsion","encadrer","enchère","enclave","encoche","endiguer","endosser","endroit","enduire","énergie","enfance","enfermer","enfouir","engager","engin","englober","énigme","enjamber","enjeu","enlever","ennemi","ennuyeux","enrichir","enrobage","enseigne","entasser","entendre","entier","entourer","entraver","énumérer","envahir","enviable","envoyer","enzyme","éolien","épaissir","épargne","épatant","épaule","épicerie","épidémie","épier","épilogue","épine","épisode","épitaphe","époque","épreuve","éprouver","épuisant","équerre","équipe","ériger","érosion","erreur","éruption","escalier","espadon","espèce","espiègle","espoir","esprit","esquiver","essayer","essence","essieu","essorer","estime","estomac","estrade","étagère","étaler","étanche","étatique","éteindre","étendoir","éternel","éthanol","éthique","ethnie","étirer","étoffer","étoile","étonnant","étourdir","étrange","étroit","étude","euphorie","évaluer","évasion","éventail","évidence","éviter","évolutif","évoquer","exact","exagérer","exaucer","exceller","excitant","exclusif","excuse","exécuter","exemple","exercer","exhaler","exhorter","exigence","exiler","exister","exotique","expédier","explorer","exposer","exprimer","exquis","extensif","extraire","exulter","fable","fabuleux","facette","facile","facture","faiblir","falaise","fameux","famille","farceur","farfelu","farine","farouche","fasciner","fatal","fatigue","faucon","fautif","faveur","favori","fébrile","féconder","fédérer","félin","femme","fémur","fendoir","féodal","fermer","féroce","ferveur","festival","feuille","feutre","février","fiasco","ficeler","fictif","fidèle","figure","filature","filetage","filière","filleul","filmer","filou","filtrer","financer","finir","fiole","firme","fissure","fixer","flairer","flamme","flasque","flatteur","fléau","flèche","fleur","flexion","flocon","flore","fluctuer","fluide","fluvial","folie","fonderie","fongible","fontaine","forcer","forgeron","formuler","fortune","fossile","foudre","fougère","fouiller","foulure","fourmi","fragile","fraise","franchir","frapper","frayeur","frégate","freiner","frelon","frémir","frénésie","frère","friable","friction","frisson","frivole","froid","fromage","frontal","frotter","fruit","fugitif","fuite","fureur","furieux","furtif","fusion","futur","gagner","galaxie","galerie","gambader","garantir","gardien","garnir","garrigue","gazelle","gazon","géant","gélatine","gélule","gendarme","général","génie","genou","gentil","géologie","géomètre","géranium","germe","gestuel","geyser","gibier","gicler","girafe","givre","glace","glaive","glisser","globe","gloire","glorieux","golfeur","gomme","gonfler","gorge","gorille","goudron","gouffre","goulot","goupille","gourmand","goutte","graduel","graffiti","graine","grand","grappin","gratuit","gravir","grenat","griffure","griller","grimper","grogner","gronder","grotte","groupe","gruger","grutier","gruyère","guépard","guerrier","guide","guimauve","guitare","gustatif","gymnaste","gyrostat","habitude","hachoir","halte","hameau","hangar","hanneton","haricot","harmonie","harpon","hasard","hélium","hématome","herbe","hérisson","hermine","héron","hésiter","heureux","hiberner","hibou","hilarant","histoire","hiver","homard","hommage","homogène","honneur","honorer","honteux","horde","horizon","horloge","hormone","horrible","houleux","housse","hublot","huileux","humain","humble","humide","humour","hurler","hydromel","hygiène","hymne","hypnose","idylle","ignorer","iguane","illicite","illusion","image","imbiber","imiter","immense","immobile","immuable","impact","impérial","implorer","imposer","imprimer","imputer","incarner","incendie","incident","incliner","incolore","indexer","indice","inductif","inédit","ineptie","inexact","infini","infliger","informer","infusion","ingérer","inhaler","inhiber","injecter","injure","innocent","inoculer","inonder","inscrire","insecte","insigne","insolite","inspirer","instinct","insulter","intact","intense","intime","intrigue","intuitif","inutile","invasion","inventer","inviter","invoquer","ironique","irradier","irréel","irriter","isoler","ivoire","ivresse","jaguar","jaillir","jambe","janvier","jardin","jauger","jaune","javelot","jetable","jeton","jeudi","jeunesse","joindre","joncher","jongler","joueur","jouissif","journal","jovial","joyau","joyeux","jubiler","jugement","junior","jupon","juriste","justice","juteux","juvénile","kayak","kimono","kiosque","label","labial","labourer","lacérer","lactose","lagune","laine","laisser","laitier","lambeau","lamelle","lampe","lanceur","langage","lanterne","lapin","largeur","larme","laurier","lavabo","lavoir","lecture","légal","léger","légume","lessive","lettre","levier","lexique","lézard","liasse","libérer","libre","licence","licorne","liège","lièvre","ligature","ligoter","ligue","limer","limite","limonade","limpide","linéaire","lingot","lionceau","liquide","lisière","lister","lithium","litige","littoral","livreur","logique","lointain","loisir","lombric","loterie","louer","lourd","loutre","louve","loyal","lubie","lucide","lucratif","lueur","lugubre","luisant","lumière","lunaire","lundi","luron","lutter","luxueux","machine","magasin","magenta","magique","maigre","maillon","maintien","mairie","maison","majorer","malaxer","maléfice","malheur","malice","mallette","mammouth","mandater","maniable","manquant","manteau","manuel","marathon","marbre","marchand","mardi","maritime","marqueur","marron","marteler","mascotte","massif","matériel","matière","matraque","maudire","maussade","mauve","maximal","méchant","méconnu","médaille","médecin","méditer","méduse","meilleur","mélange","mélodie","membre","mémoire","menacer","mener","menhir","mensonge","mentor","mercredi","mérite","merle","messager","mesure","métal","météore","méthode","métier","meuble","miauler","microbe","miette","mignon","migrer","milieu","million","mimique","mince","minéral","minimal","minorer","minute","miracle","miroiter","missile","mixte","mobile","moderne","moelleux","mondial","moniteur","monnaie","monotone","monstre","montagne","monument","moqueur","morceau","morsure","mortier","moteur","motif","mouche","moufle","moulin","mousson","mouton","mouvant","multiple","munition","muraille","murène","murmure","muscle","muséum","musicien","mutation","muter","mutuel","myriade","myrtille","mystère","mythique","nageur","nappe","narquois","narrer","natation","nation","nature","naufrage","nautique","navire","nébuleux","nectar","néfaste","négation","négliger","négocier","neige","nerveux","nettoyer","neurone","neutron","neveu","niche","nickel","nitrate","niveau","noble","nocif","nocturne","noirceur","noisette","nomade","nombreux","nommer","normatif","notable","notifier","notoire","nourrir","nouveau","novateur","novembre","novice","nuage","nuancer","nuire","nuisible","numéro","nuptial","nuque","nutritif","obéir","objectif","obliger","obscur","observer","obstacle","obtenir","obturer","occasion","occuper","océan","octobre","octroyer","octupler","oculaire","odeur","odorant","offenser","officier","offrir","ogive","oiseau","oisillon","olfactif","olivier","ombrage","omettre","onctueux","onduler","onéreux","onirique","opale","opaque","opérer","opinion","opportun","opprimer","opter","optique","orageux","orange","orbite","ordonner","oreille","organe","orgueil","orifice","ornement","orque","ortie","osciller","osmose","ossature","otarie","ouragan","ourson","outil","outrager","ouvrage","ovation","oxyde","oxygène","ozone","paisible","palace","palmarès","palourde","palper","panache","panda","pangolin","paniquer","panneau","panorama","pantalon","papaye","papier","papoter","papyrus","paradoxe","parcelle","paresse","parfumer","parler","parole","parrain","parsemer","partager","parure","parvenir","passion","pastèque","paternel","patience","patron","pavillon","pavoiser","payer","paysage","peigne","peintre","pelage","pélican","pelle","pelouse","peluche","pendule","pénétrer","pénible","pensif","pénurie","pépite","péplum","perdrix","perforer","période","permuter","perplexe","persil","perte","peser","pétale","petit","pétrir","peuple","pharaon","phobie","phoque","photon","phrase","physique","piano","pictural","pièce","pierre","pieuvre","pilote","pinceau","pipette","piquer","pirogue","piscine","piston","pivoter","pixel","pizza","placard","plafond","plaisir","planer","plaque","plastron","plateau","pleurer","plexus","pliage","plomb","plonger","pluie","plumage","pochette","poésie","poète","pointe","poirier","poisson","poivre","polaire","policier","pollen","polygone","pommade","pompier","ponctuel","pondérer","poney","portique","position","posséder","posture","potager","poteau","potion","pouce","poulain","poumon","pourpre","poussin","pouvoir","prairie","pratique","précieux","prédire","préfixe","prélude","prénom","présence","prétexte","prévoir","primitif","prince","prison","priver","problème","procéder","prodige","profond","progrès","proie","projeter","prologue","promener","propre","prospère","protéger","prouesse","proverbe","prudence","pruneau","psychose","public","puceron","puiser","pulpe","pulsar","punaise","punitif","pupitre","purifier","puzzle","pyramide","quasar","querelle","question","quiétude","quitter","quotient","racine","raconter","radieux","ragondin","raideur","raisin","ralentir","rallonge","ramasser","rapide","rasage","ratisser","ravager","ravin","rayonner","réactif","réagir","réaliser","réanimer","recevoir","réciter","réclamer","récolter","recruter","reculer","recycler","rédiger","redouter","refaire","réflexe","réformer","refrain","refuge","régalien","région","réglage","régulier","réitérer","rejeter","rejouer","relatif","relever","relief","remarque","remède","remise","remonter","remplir","remuer","renard","renfort","renifler","renoncer","rentrer","renvoi","replier","reporter","reprise","reptile","requin","réserve","résineux","résoudre","respect","rester","résultat","rétablir","retenir","réticule","retomber","retracer","réunion","réussir","revanche","revivre","révolte","révulsif","richesse","rideau","rieur","rigide","rigoler","rincer","riposter","risible","risque","rituel","rival","rivière","rocheux","romance","rompre","ronce","rondin","roseau","rosier","rotatif","rotor","rotule","rouge","rouille","rouleau","routine","royaume","ruban","rubis","ruche","ruelle","rugueux","ruiner","ruisseau","ruser","rustique","rythme","sabler","saboter","sabre","sacoche","safari","sagesse","saisir","salade","salive","salon","saluer","samedi","sanction","sanglier","sarcasme","sardine","saturer","saugrenu","saumon","sauter","sauvage","savant","savonner","scalpel","scandale","scélérat","scénario","sceptre","schéma","science","scinder","score","scrutin","sculpter","séance","sécable","sécher","secouer","sécréter","sédatif","séduire","seigneur","séjour","sélectif","semaine","sembler","semence","séminal","sénateur","sensible","sentence","séparer","séquence","serein","sergent","sérieux","serrure","sérum","service","sésame","sévir","sevrage","sextuple","sidéral","siècle","siéger","siffler","sigle","signal","silence","silicium","simple","sincère","sinistre","siphon","sirop","sismique","situer","skier","social","socle","sodium","soigneux","soldat","soleil","solitude","soluble","sombre","sommeil","somnoler","sonde","songeur","sonnette","sonore","sorcier","sortir","sosie","sottise","soucieux","soudure","souffle","soulever","soupape","source","soutirer","souvenir","spacieux","spatial","spécial","sphère","spiral","stable","station","sternum","stimulus","stipuler","strict","studieux","stupeur","styliste","sublime","substrat","subtil","subvenir","succès","sucre","suffixe","suggérer","suiveur","sulfate","superbe","supplier","surface","suricate","surmener","surprise","sursaut","survie","suspect","syllabe","symbole","symétrie","synapse","syntaxe","système","tabac","tablier","tactile","tailler","talent","talisman","talonner","tambour","tamiser","tangible","tapis","taquiner","tarder","tarif","tartine","tasse","tatami","tatouage","taupe","taureau","taxer","témoin","temporel","tenaille","tendre","teneur","tenir","tension","terminer","terne","terrible","tétine","texte","thème","théorie","thérapie","thorax","tibia","tiède","timide","tirelire","tiroir","tissu","titane","titre","tituber","toboggan","tolérant","tomate","tonique","tonneau","toponyme","torche","tordre","tornade","torpille","torrent","torse","tortue","totem","toucher","tournage","tousser","toxine","traction","trafic","tragique","trahir","train","trancher","travail","trèfle","tremper","trésor","treuil","triage","tribunal","tricoter","trilogie","triomphe","tripler","triturer","trivial","trombone","tronc","tropical","troupeau","tuile","tulipe","tumulte","tunnel","turbine","tuteur","tutoyer","tuyau","tympan","typhon","typique","tyran","ubuesque","ultime","ultrason","unanime","unifier","union","unique","unitaire","univers","uranium","urbain","urticant","usage","usine","usuel","usure","utile","utopie","vacarme","vaccin","vagabond","vague","vaillant","vaincre","vaisseau","valable","valise","vallon","valve","vampire","vanille","vapeur","varier","vaseux","vassal","vaste","vecteur","vedette","végétal","véhicule","veinard","véloce","vendredi","vénérer","venger","venimeux","ventouse","verdure","vérin","vernir","verrou","verser","vertu","veston","vétéran","vétuste","vexant","vexer","viaduc","viande","victoire","vidange","vidéo","vignette","vigueur","vilain","village","vinaigre","violon","vipère","virement","virtuose","virus","visage","viseur","vision","visqueux","visuel","vital","vitesse","viticole","vitrine","vivace","vivipare","vocation","voguer","voile","voisin","voiture","volaille","volcan","voltiger","volume","vorace","vortex","voter","vouloir","voyage","voyelle","wagon","xénon","yacht","zèbre","zénith","zeste","zoologie"]}}},{package:"eth-keyring-controller>@metamask/bip39",file:"node_modules/@metamask/bip39/src/wordlists/french.json"}],[969,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){t.exports=["abaco","abbaglio","abbinato","abete","abisso","abolire","abrasivo","abrogato","accadere","accenno","accusato","acetone","achille","acido","acqua","acre","acrilico","acrobata","acuto","adagio","addebito","addome","adeguato","aderire","adipe","adottare","adulare","affabile","affetto","affisso","affranto","aforisma","afoso","africano","agave","agente","agevole","aggancio","agire","agitare","agonismo","agricolo","agrumeto","aguzzo","alabarda","alato","albatro","alberato","albo","albume","alce","alcolico","alettone","alfa","algebra","aliante","alibi","alimento","allagato","allegro","allievo","allodola","allusivo","almeno","alogeno","alpaca","alpestre","altalena","alterno","alticcio","altrove","alunno","alveolo","alzare","amalgama","amanita","amarena","ambito","ambrato","ameba","america","ametista","amico","ammasso","ammenda","ammirare","ammonito","amore","ampio","ampliare","amuleto","anacardo","anagrafe","analista","anarchia","anatra","anca","ancella","ancora","andare","andrea","anello","angelo","angolare","angusto","anima","annegare","annidato","anno","annuncio","anonimo","anticipo","anzi","apatico","apertura","apode","apparire","appetito","appoggio","approdo","appunto","aprile","arabica","arachide","aragosta","araldica","arancio","aratura","arazzo","arbitro","archivio","ardito","arenile","argento","argine","arguto","aria","armonia","arnese","arredato","arringa","arrosto","arsenico","arso","artefice","arzillo","asciutto","ascolto","asepsi","asettico","asfalto","asino","asola","aspirato","aspro","assaggio","asse","assoluto","assurdo","asta","astenuto","astice","astratto","atavico","ateismo","atomico","atono","attesa","attivare","attorno","attrito","attuale","ausilio","austria","autista","autonomo","autunno","avanzato","avere","avvenire","avviso","avvolgere","azione","azoto","azzimo","azzurro","babele","baccano","bacino","baco","badessa","badilata","bagnato","baita","balcone","baldo","balena","ballata","balzano","bambino","bandire","baraonda","barbaro","barca","baritono","barlume","barocco","basilico","basso","batosta","battuto","baule","bava","bavosa","becco","beffa","belgio","belva","benda","benevole","benigno","benzina","bere","berlina","beta","bibita","bici","bidone","bifido","biga","bilancia","bimbo","binocolo","biologo","bipede","bipolare","birbante","birra","biscotto","bisesto","bisnonno","bisonte","bisturi","bizzarro","blando","blatta","bollito","bonifico","bordo","bosco","botanico","bottino","bozzolo","braccio","bradipo","brama","branca","bravura","bretella","brevetto","brezza","briglia","brillante","brindare","broccolo","brodo","bronzina","brullo","bruno","bubbone","buca","budino","buffone","buio","bulbo","buono","burlone","burrasca","bussola","busta","cadetto","caduco","calamaro","calcolo","calesse","calibro","calmo","caloria","cambusa","camerata","camicia","cammino","camola","campale","canapa","candela","cane","canino","canotto","cantina","capace","capello","capitolo","capogiro","cappero","capra","capsula","carapace","carcassa","cardo","carisma","carovana","carretto","cartolina","casaccio","cascata","caserma","caso","cassone","castello","casuale","catasta","catena","catrame","cauto","cavillo","cedibile","cedrata","cefalo","celebre","cellulare","cena","cenone","centesimo","ceramica","cercare","certo","cerume","cervello","cesoia","cespo","ceto","chela","chiaro","chicca","chiedere","chimera","china","chirurgo","chitarra","ciao","ciclismo","cifrare","cigno","cilindro","ciottolo","circa","cirrosi","citrico","cittadino","ciuffo","civetta","civile","classico","clinica","cloro","cocco","codardo","codice","coerente","cognome","collare","colmato","colore","colposo","coltivato","colza","coma","cometa","commando","comodo","computer","comune","conciso","condurre","conferma","congelare","coniuge","connesso","conoscere","consumo","continuo","convegno","coperto","copione","coppia","copricapo","corazza","cordata","coricato","cornice","corolla","corpo","corredo","corsia","cortese","cosmico","costante","cottura","covato","cratere","cravatta","creato","credere","cremoso","crescita","creta","criceto","crinale","crisi","critico","croce","cronaca","crostata","cruciale","crusca","cucire","cuculo","cugino","cullato","cupola","curatore","cursore","curvo","cuscino","custode","dado","daino","dalmata","damerino","daniela","dannoso","danzare","datato","davanti","davvero","debutto","decennio","deciso","declino","decollo","decreto","dedicato","definito","deforme","degno","delegare","delfino","delirio","delta","demenza","denotato","dentro","deposito","derapata","derivare","deroga","descritto","deserto","desiderio","desumere","detersivo","devoto","diametro","dicembre","diedro","difeso","diffuso","digerire","digitale","diluvio","dinamico","dinnanzi","dipinto","diploma","dipolo","diradare","dire","dirotto","dirupo","disagio","discreto","disfare","disgelo","disposto","distanza","disumano","dito","divano","divelto","dividere","divorato","doblone","docente","doganale","dogma","dolce","domato","domenica","dominare","dondolo","dono","dormire","dote","dottore","dovuto","dozzina","drago","druido","dubbio","dubitare","ducale","duna","duomo","duplice","duraturo","ebano","eccesso","ecco","eclissi","economia","edera","edicola","edile","editoria","educare","egemonia","egli","egoismo","egregio","elaborato","elargire","elegante","elencato","eletto","elevare","elfico","elica","elmo","elsa","eluso","emanato","emblema","emesso","emiro","emotivo","emozione","empirico","emulo","endemico","enduro","energia","enfasi","enoteca","entrare","enzima","epatite","epilogo","episodio","epocale","eppure","equatore","erario","erba","erboso","erede","eremita","erigere","ermetico","eroe","erosivo","errante","esagono","esame","esanime","esaudire","esca","esempio","esercito","esibito","esigente","esistere","esito","esofago","esortato","esoso","espanso","espresso","essenza","esso","esteso","estimare","estonia","estroso","esultare","etilico","etnico","etrusco","etto","euclideo","europa","evaso","evidenza","evitato","evoluto","evviva","fabbrica","faccenda","fachiro","falco","famiglia","fanale","fanfara","fango","fantasma","fare","farfalla","farinoso","farmaco","fascia","fastoso","fasullo","faticare","fato","favoloso","febbre","fecola","fede","fegato","felpa","feltro","femmina","fendere","fenomeno","fermento","ferro","fertile","fessura","festivo","fetta","feudo","fiaba","fiducia","fifa","figurato","filo","finanza","finestra","finire","fiore","fiscale","fisico","fiume","flacone","flamenco","flebo","flemma","florido","fluente","fluoro","fobico","focaccia","focoso","foderato","foglio","folata","folclore","folgore","fondente","fonetico","fonia","fontana","forbito","forchetta","foresta","formica","fornaio","foro","fortezza","forzare","fosfato","fosso","fracasso","frana","frassino","fratello","freccetta","frenata","fresco","frigo","frollino","fronde","frugale","frutta","fucilata","fucsia","fuggente","fulmine","fulvo","fumante","fumetto","fumoso","fune","funzione","fuoco","furbo","furgone","furore","fuso","futile","gabbiano","gaffe","galateo","gallina","galoppo","gambero","gamma","garanzia","garbo","garofano","garzone","gasdotto","gasolio","gastrico","gatto","gaudio","gazebo","gazzella","geco","gelatina","gelso","gemello","gemmato","gene","genitore","gennaio","genotipo","gergo","ghepardo","ghiaccio","ghisa","giallo","gilda","ginepro","giocare","gioiello","giorno","giove","girato","girone","gittata","giudizio","giurato","giusto","globulo","glutine","gnomo","gobba","golf","gomito","gommone","gonfio","gonna","governo","gracile","grado","grafico","grammo","grande","grattare","gravoso","grazia","greca","gregge","grifone","grigio","grinza","grotta","gruppo","guadagno","guaio","guanto","guardare","gufo","guidare","ibernato","icona","identico","idillio","idolo","idra","idrico","idrogeno","igiene","ignaro","ignorato","ilare","illeso","illogico","illudere","imballo","imbevuto","imbocco","imbuto","immane","immerso","immolato","impacco","impeto","impiego","importo","impronta","inalare","inarcare","inattivo","incanto","incendio","inchino","incisivo","incluso","incontro","incrocio","incubo","indagine","india","indole","inedito","infatti","infilare","inflitto","ingaggio","ingegno","inglese","ingordo","ingrosso","innesco","inodore","inoltrare","inondato","insano","insetto","insieme","insonnia","insulina","intasato","intero","intonaco","intuito","inumidire","invalido","invece","invito","iperbole","ipnotico","ipotesi","ippica","iride","irlanda","ironico","irrigato","irrorare","isolato","isotopo","isterico","istituto","istrice","italia","iterare","labbro","labirinto","lacca","lacerato","lacrima","lacuna","laddove","lago","lampo","lancetta","lanterna","lardoso","larga","laringe","lastra","latenza","latino","lattuga","lavagna","lavoro","legale","leggero","lembo","lentezza","lenza","leone","lepre","lesivo","lessato","lesto","letterale","leva","levigato","libero","lido","lievito","lilla","limatura","limitare","limpido","lineare","lingua","liquido","lira","lirica","lisca","lite","litigio","livrea","locanda","lode","logica","lombare","londra","longevo","loquace","lorenzo","loto","lotteria","luce","lucidato","lumaca","luminoso","lungo","lupo","luppolo","lusinga","lusso","lutto","macabro","macchina","macero","macinato","madama","magico","maglia","magnete","magro","maiolica","malafede","malgrado","malinteso","malsano","malto","malumore","mana","mancia","mandorla","mangiare","manifesto","mannaro","manovra","mansarda","mantide","manubrio","mappa","maratona","marcire","maretta","marmo","marsupio","maschera","massaia","mastino","materasso","matricola","mattone","maturo","mazurca","meandro","meccanico","mecenate","medesimo","meditare","mega","melassa","melis","melodia","meninge","meno","mensola","mercurio","merenda","merlo","meschino","mese","messere","mestolo","metallo","metodo","mettere","miagolare","mica","micelio","michele","microbo","midollo","miele","migliore","milano","milite","mimosa","minerale","mini","minore","mirino","mirtillo","miscela","missiva","misto","misurare","mitezza","mitigare","mitra","mittente","mnemonico","modello","modifica","modulo","mogano","mogio","mole","molosso","monastero","monco","mondina","monetario","monile","monotono","monsone","montato","monviso","mora","mordere","morsicato","mostro","motivato","motosega","motto","movenza","movimento","mozzo","mucca","mucosa","muffa","mughetto","mugnaio","mulatto","mulinello","multiplo","mummia","munto","muovere","murale","musa","muscolo","musica","mutevole","muto","nababbo","nafta","nanometro","narciso","narice","narrato","nascere","nastrare","naturale","nautica","naviglio","nebulosa","necrosi","negativo","negozio","nemmeno","neofita","neretto","nervo","nessuno","nettuno","neutrale","neve","nevrotico","nicchia","ninfa","nitido","nobile","nocivo","nodo","nome","nomina","nordico","normale","norvegese","nostrano","notare","notizia","notturno","novella","nucleo","nulla","numero","nuovo","nutrire","nuvola","nuziale","oasi","obbedire","obbligo","obelisco","oblio","obolo","obsoleto","occasione","occhio","occidente","occorrere","occultare","ocra","oculato","odierno","odorare","offerta","offrire","offuscato","oggetto","oggi","ognuno","olandese","olfatto","oliato","oliva","ologramma","oltre","omaggio","ombelico","ombra","omega","omissione","ondoso","onere","onice","onnivoro","onorevole","onta","operato","opinione","opposto","oracolo","orafo","ordine","orecchino","orefice","orfano","organico","origine","orizzonte","orma","ormeggio","ornativo","orologio","orrendo","orribile","ortensia","ortica","orzata","orzo","osare","oscurare","osmosi","ospedale","ospite","ossa","ossidare","ostacolo","oste","otite","otre","ottagono","ottimo","ottobre","ovale","ovest","ovino","oviparo","ovocito","ovunque","ovviare","ozio","pacchetto","pace","pacifico","padella","padrone","paese","paga","pagina","palazzina","palesare","pallido","palo","palude","pandoro","pannello","paolo","paonazzo","paprica","parabola","parcella","parere","pargolo","pari","parlato","parola","partire","parvenza","parziale","passivo","pasticca","patacca","patologia","pattume","pavone","peccato","pedalare","pedonale","peggio","peloso","penare","pendice","penisola","pennuto","penombra","pensare","pentola","pepe","pepita","perbene","percorso","perdonato","perforare","pergamena","periodo","permesso","perno","perplesso","persuaso","pertugio","pervaso","pesatore","pesista","peso","pestifero","petalo","pettine","petulante","pezzo","piacere","pianta","piattino","piccino","picozza","piega","pietra","piffero","pigiama","pigolio","pigro","pila","pilifero","pillola","pilota","pimpante","pineta","pinna","pinolo","pioggia","piombo","piramide","piretico","pirite","pirolisi","pitone","pizzico","placebo","planare","plasma","platano","plenario","pochezza","poderoso","podismo","poesia","poggiare","polenta","poligono","pollice","polmonite","polpetta","polso","poltrona","polvere","pomice","pomodoro","ponte","popoloso","porfido","poroso","porpora","porre","portata","posa","positivo","possesso","postulato","potassio","potere","pranzo","prassi","pratica","precluso","predica","prefisso","pregiato","prelievo","premere","prenotare","preparato","presenza","pretesto","prevalso","prima","principe","privato","problema","procura","produrre","profumo","progetto","prolunga","promessa","pronome","proposta","proroga","proteso","prova","prudente","prugna","prurito","psiche","pubblico","pudica","pugilato","pugno","pulce","pulito","pulsante","puntare","pupazzo","pupilla","puro","quadro","qualcosa","quasi","querela","quota","raccolto","raddoppio","radicale","radunato","raffica","ragazzo","ragione","ragno","ramarro","ramingo","ramo","randagio","rantolare","rapato","rapina","rappreso","rasatura","raschiato","rasente","rassegna","rastrello","rata","ravveduto","reale","recepire","recinto","recluta","recondito","recupero","reddito","redimere","regalato","registro","regola","regresso","relazione","remare","remoto","renna","replica","reprimere","reputare","resa","residente","responso","restauro","rete","retina","retorica","rettifica","revocato","riassunto","ribadire","ribelle","ribrezzo","ricarica","ricco","ricevere","riciclato","ricordo","ricreduto","ridicolo","ridurre","rifasare","riflesso","riforma","rifugio","rigare","rigettato","righello","rilassato","rilevato","rimanere","rimbalzo","rimedio","rimorchio","rinascita","rincaro","rinforzo","rinnovo","rinomato","rinsavito","rintocco","rinuncia","rinvenire","riparato","ripetuto","ripieno","riportare","ripresa","ripulire","risata","rischio","riserva","risibile","riso","rispetto","ristoro","risultato","risvolto","ritardo","ritegno","ritmico","ritrovo","riunione","riva","riverso","rivincita","rivolto","rizoma","roba","robotico","robusto","roccia","roco","rodaggio","rodere","roditore","rogito","rollio","romantico","rompere","ronzio","rosolare","rospo","rotante","rotondo","rotula","rovescio","rubizzo","rubrica","ruga","rullino","rumine","rumoroso","ruolo","rupe","russare","rustico","sabato","sabbiare","sabotato","sagoma","salasso","saldatura","salgemma","salivare","salmone","salone","saltare","saluto","salvo","sapere","sapido","saporito","saraceno","sarcasmo","sarto","sassoso","satellite","satira","satollo","saturno","savana","savio","saziato","sbadiglio","sbalzo","sbancato","sbarra","sbattere","sbavare","sbendare","sbirciare","sbloccato","sbocciato","sbrinare","sbruffone","sbuffare","scabroso","scadenza","scala","scambiare","scandalo","scapola","scarso","scatenare","scavato","scelto","scenico","scettro","scheda","schiena","sciarpa","scienza","scindere","scippo","sciroppo","scivolo","sclerare","scodella","scolpito","scomparto","sconforto","scoprire","scorta","scossone","scozzese","scriba","scrollare","scrutinio","scuderia","scultore","scuola","scuro","scusare","sdebitare","sdoganare","seccatura","secondo","sedano","seggiola","segnalato","segregato","seguito","selciato","selettivo","sella","selvaggio","semaforo","sembrare","seme","seminato","sempre","senso","sentire","sepolto","sequenza","serata","serbato","sereno","serio","serpente","serraglio","servire","sestina","setola","settimana","sfacelo","sfaldare","sfamato","sfarzoso","sfaticato","sfera","sfida","sfilato","sfinge","sfocato","sfoderare","sfogo","sfoltire","sforzato","sfratto","sfruttato","sfuggito","sfumare","sfuso","sgabello","sgarbato","sgonfiare","sgorbio","sgrassato","sguardo","sibilo","siccome","sierra","sigla","signore","silenzio","sillaba","simbolo","simpatico","simulato","sinfonia","singolo","sinistro","sino","sintesi","sinusoide","sipario","sisma","sistole","situato","slitta","slogatura","sloveno","smarrito","smemorato","smentito","smeraldo","smilzo","smontare","smottato","smussato","snellire","snervato","snodo","sobbalzo","sobrio","soccorso","sociale","sodale","soffitto","sogno","soldato","solenne","solido","sollazzo","solo","solubile","solvente","somatico","somma","sonda","sonetto","sonnifero","sopire","soppeso","sopra","sorgere","sorpasso","sorriso","sorso","sorteggio","sorvolato","sospiro","sosta","sottile","spada","spalla","spargere","spatola","spavento","spazzola","specie","spedire","spegnere","spelatura","speranza","spessore","spettrale","spezzato","spia","spigoloso","spillato","spinoso","spirale","splendido","sportivo","sposo","spranga","sprecare","spronato","spruzzo","spuntino","squillo","sradicare","srotolato","stabile","stacco","staffa","stagnare","stampato","stantio","starnuto","stasera","statuto","stelo","steppa","sterzo","stiletto","stima","stirpe","stivale","stizzoso","stonato","storico","strappo","stregato","stridulo","strozzare","strutto","stuccare","stufo","stupendo","subentro","succoso","sudore","suggerito","sugo","sultano","suonare","superbo","supporto","surgelato","surrogato","sussurro","sutura","svagare","svedese","sveglio","svelare","svenuto","svezia","sviluppo","svista","svizzera","svolta","svuotare","tabacco","tabulato","tacciare","taciturno","tale","talismano","tampone","tannino","tara","tardivo","targato","tariffa","tarpare","tartaruga","tasto","tattico","taverna","tavolata","tazza","teca","tecnico","telefono","temerario","tempo","temuto","tendone","tenero","tensione","tentacolo","teorema","terme","terrazzo","terzetto","tesi","tesserato","testato","tetro","tettoia","tifare","tigella","timbro","tinto","tipico","tipografo","tiraggio","tiro","titanio","titolo","titubante","tizio","tizzone","toccare","tollerare","tolto","tombola","tomo","tonfo","tonsilla","topazio","topologia","toppa","torba","tornare","torrone","tortora","toscano","tossire","tostatura","totano","trabocco","trachea","trafila","tragedia","tralcio","tramonto","transito","trapano","trarre","trasloco","trattato","trave","treccia","tremolio","trespolo","tributo","tricheco","trifoglio","trillo","trincea","trio","tristezza","triturato","trivella","tromba","trono","troppo","trottola","trovare","truccato","tubatura","tuffato","tulipano","tumulto","tunisia","turbare","turchino","tuta","tutela","ubicato","uccello","uccisore","udire","uditivo","uffa","ufficio","uguale","ulisse","ultimato","umano","umile","umorismo","uncinetto","ungere","ungherese","unicorno","unificato","unisono","unitario","unte","uovo","upupa","uragano","urgenza","urlo","usanza","usato","uscito","usignolo","usuraio","utensile","utilizzo","utopia","vacante","vaccinato","vagabondo","vagliato","valanga","valgo","valico","valletta","valoroso","valutare","valvola","vampata","vangare","vanitoso","vano","vantaggio","vanvera","vapore","varano","varcato","variante","vasca","vedetta","vedova","veduto","vegetale","veicolo","velcro","velina","velluto","veloce","venato","vendemmia","vento","verace","verbale","vergogna","verifica","vero","verruca","verticale","vescica","vessillo","vestale","veterano","vetrina","vetusto","viandante","vibrante","vicenda","vichingo","vicinanza","vidimare","vigilia","vigneto","vigore","vile","villano","vimini","vincitore","viola","vipera","virgola","virologo","virulento","viscoso","visione","vispo","vissuto","visura","vita","vitello","vittima","vivanda","vivido","viziare","voce","voga","volatile","volere","volpe","voragine","vulcano","zampogna","zanna","zappato","zattera","zavorra","zefiro","zelante","zelo","zenzero","zerbino","zibetto","zinco","zircone","zitto","zolla","zotico","zucchero","zufolo","zulu","zuppa"]}}},{package:"eth-keyring-controller>@metamask/bip39",file:"node_modules/@metamask/bip39/src/wordlists/italian.json"}],[97,{lodash:2735},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var a=e("lodash");var o={version:11,migrate(e){const t=(0,a.cloneDeep)(e);t.meta.version=11;try{const e=function(e){const t=e;return delete t.TOSHash,delete t.isDisclaimerConfirmed,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #11${e.stack}`)}return Promise.resolve(t)}};r.default=o}}},{package:"$root$",file:"app/scripts/migrations/011.js"}],[970,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){t.exports=["あいこくしん","あいさつ","あいだ","あおぞら","あかちゃん","あきる","あけがた","あける","あこがれる","あさい","あさひ","あしあと","あじわう","あずかる","あずき","あそぶ","あたえる","あたためる","あたりまえ","あたる","あつい","あつかう","あっしゅく","あつまり","あつめる","あてな","あてはまる","あひる","あぶら","あぶる","あふれる","あまい","あまど","あまやかす","あまり","あみもの","あめりか","あやまる","あゆむ","あらいぐま","あらし","あらすじ","あらためる","あらゆる","あらわす","ありがとう","あわせる","あわてる","あんい","あんがい","あんこ","あんぜん","あんてい","あんない","あんまり","いいだす","いおん","いがい","いがく","いきおい","いきなり","いきもの","いきる","いくじ","いくぶん","いけばな","いけん","いこう","いこく","いこつ","いさましい","いさん","いしき","いじゅう","いじょう","いじわる","いずみ","いずれ","いせい","いせえび","いせかい","いせき","いぜん","いそうろう","いそがしい","いだい","いだく","いたずら","いたみ","いたりあ","いちおう","いちじ","いちど","いちば","いちぶ","いちりゅう","いつか","いっしゅん","いっせい","いっそう","いったん","いっち","いってい","いっぽう","いてざ","いてん","いどう","いとこ","いない","いなか","いねむり","いのち","いのる","いはつ","いばる","いはん","いびき","いひん","いふく","いへん","いほう","いみん","いもうと","いもたれ","いもり","いやがる","いやす","いよかん","いよく","いらい","いらすと","いりぐち","いりょう","いれい","いれもの","いれる","いろえんぴつ","いわい","いわう","いわかん","いわば","いわゆる","いんげんまめ","いんさつ","いんしょう","いんよう","うえき","うえる","うおざ","うがい","うかぶ","うかべる","うきわ","うくらいな","うくれれ","うけたまわる","うけつけ","うけとる","うけもつ","うける","うごかす","うごく","うこん","うさぎ","うしなう","うしろがみ","うすい","うすぎ","うすぐらい","うすめる","うせつ","うちあわせ","うちがわ","うちき","うちゅう","うっかり","うつくしい","うったえる","うつる","うどん","うなぎ","うなじ","うなずく","うなる","うねる","うのう","うぶげ","うぶごえ","うまれる","うめる","うもう","うやまう","うよく","うらがえす","うらぐち","うらない","うりあげ","うりきれ","うるさい","うれしい","うれゆき","うれる","うろこ","うわき","うわさ","うんこう","うんちん","うんてん","うんどう","えいえん","えいが","えいきょう","えいご","えいせい","えいぶん","えいよう","えいわ","えおり","えがお","えがく","えきたい","えくせる","えしゃく","えすて","えつらん","えのぐ","えほうまき","えほん","えまき","えもじ","えもの","えらい","えらぶ","えりあ","えんえん","えんかい","えんぎ","えんげき","えんしゅう","えんぜつ","えんそく","えんちょう","えんとつ","おいかける","おいこす","おいしい","おいつく","おうえん","おうさま","おうじ","おうせつ","おうたい","おうふく","おうべい","おうよう","おえる","おおい","おおう","おおどおり","おおや","おおよそ","おかえり","おかず","おがむ","おかわり","おぎなう","おきる","おくさま","おくじょう","おくりがな","おくる","おくれる","おこす","おこなう","おこる","おさえる","おさない","おさめる","おしいれ","おしえる","おじぎ","おじさん","おしゃれ","おそらく","おそわる","おたがい","おたく","おだやか","おちつく","おっと","おつり","おでかけ","おとしもの","おとなしい","おどり","おどろかす","おばさん","おまいり","おめでとう","おもいで","おもう","おもたい","おもちゃ","おやつ","おやゆび","およぼす","おらんだ","おろす","おんがく","おんけい","おんしゃ","おんせん","おんだん","おんちゅう","おんどけい","かあつ","かいが","がいき","がいけん","がいこう","かいさつ","かいしゃ","かいすいよく","かいぜん","かいぞうど","かいつう","かいてん","かいとう","かいふく","がいへき","かいほう","かいよう","がいらい","かいわ","かえる","かおり","かかえる","かがく","かがし","かがみ","かくご","かくとく","かざる","がぞう","かたい","かたち","がちょう","がっきゅう","がっこう","がっさん","がっしょう","かなざわし","かのう","がはく","かぶか","かほう","かほご","かまう","かまぼこ","かめれおん","かゆい","かようび","からい","かるい","かろう","かわく","かわら","がんか","かんけい","かんこう","かんしゃ","かんそう","かんたん","かんち","がんばる","きあい","きあつ","きいろ","ぎいん","きうい","きうん","きえる","きおう","きおく","きおち","きおん","きかい","きかく","きかんしゃ","ききて","きくばり","きくらげ","きけんせい","きこう","きこえる","きこく","きさい","きさく","きさま","きさらぎ","ぎじかがく","ぎしき","ぎじたいけん","ぎじにってい","ぎじゅつしゃ","きすう","きせい","きせき","きせつ","きそう","きぞく","きぞん","きたえる","きちょう","きつえん","ぎっちり","きつつき","きつね","きてい","きどう","きどく","きない","きなが","きなこ","きぬごし","きねん","きのう","きのした","きはく","きびしい","きひん","きふく","きぶん","きぼう","きほん","きまる","きみつ","きむずかしい","きめる","きもだめし","きもち","きもの","きゃく","きやく","ぎゅうにく","きよう","きょうりゅう","きらい","きらく","きりん","きれい","きれつ","きろく","ぎろん","きわめる","ぎんいろ","きんかくじ","きんじょ","きんようび","ぐあい","くいず","くうかん","くうき","くうぐん","くうこう","ぐうせい","くうそう","ぐうたら","くうふく","くうぼ","くかん","くきょう","くげん","ぐこう","くさい","くさき","くさばな","くさる","くしゃみ","くしょう","くすのき","くすりゆび","くせげ","くせん","ぐたいてき","くださる","くたびれる","くちこみ","くちさき","くつした","ぐっすり","くつろぐ","くとうてん","くどく","くなん","くねくね","くのう","くふう","くみあわせ","くみたてる","くめる","くやくしょ","くらす","くらべる","くるま","くれる","くろう","くわしい","ぐんかん","ぐんしょく","ぐんたい","ぐんて","けあな","けいかく","けいけん","けいこ","けいさつ","げいじゅつ","けいたい","げいのうじん","けいれき","けいろ","けおとす","けおりもの","げきか","げきげん","げきだん","げきちん","げきとつ","げきは","げきやく","げこう","げこくじょう","げざい","けさき","げざん","けしき","けしごむ","けしょう","げすと","けたば","けちゃっぷ","けちらす","けつあつ","けつい","けつえき","けっこん","けつじょ","けっせき","けってい","けつまつ","げつようび","げつれい","けつろん","げどく","けとばす","けとる","けなげ","けなす","けなみ","けぬき","げねつ","けねん","けはい","げひん","けぶかい","げぼく","けまり","けみかる","けむし","けむり","けもの","けらい","けろけろ","けわしい","けんい","けんえつ","けんお","けんか","げんき","けんげん","けんこう","けんさく","けんしゅう","けんすう","げんそう","けんちく","けんてい","けんとう","けんない","けんにん","げんぶつ","けんま","けんみん","けんめい","けんらん","けんり","こあくま","こいぬ","こいびと","ごうい","こうえん","こうおん","こうかん","ごうきゅう","ごうけい","こうこう","こうさい","こうじ","こうすい","ごうせい","こうそく","こうたい","こうちゃ","こうつう","こうてい","こうどう","こうない","こうはい","ごうほう","ごうまん","こうもく","こうりつ","こえる","こおり","ごかい","ごがつ","ごかん","こくご","こくさい","こくとう","こくない","こくはく","こぐま","こけい","こける","ここのか","こころ","こさめ","こしつ","こすう","こせい","こせき","こぜん","こそだて","こたい","こたえる","こたつ","こちょう","こっか","こつこつ","こつばん","こつぶ","こてい","こてん","ことがら","ことし","ことば","ことり","こなごな","こねこね","このまま","このみ","このよ","ごはん","こひつじ","こふう","こふん","こぼれる","ごまあぶら","こまかい","ごますり","こまつな","こまる","こむぎこ","こもじ","こもち","こもの","こもん","こやく","こやま","こゆう","こゆび","こよい","こよう","こりる","これくしょん","ころっけ","こわもて","こわれる","こんいん","こんかい","こんき","こんしゅう","こんすい","こんだて","こんとん","こんなん","こんびに","こんぽん","こんまけ","こんや","こんれい","こんわく","ざいえき","さいかい","さいきん","ざいげん","ざいこ","さいしょ","さいせい","ざいたく","ざいちゅう","さいてき","ざいりょう","さうな","さかいし","さがす","さかな","さかみち","さがる","さぎょう","さくし","さくひん","さくら","さこく","さこつ","さずかる","ざせき","さたん","さつえい","ざつおん","ざっか","ざつがく","さっきょく","ざっし","さつじん","ざっそう","さつたば","さつまいも","さてい","さといも","さとう","さとおや","さとし","さとる","さのう","さばく","さびしい","さべつ","さほう","さほど","さます","さみしい","さみだれ","さむけ","さめる","さやえんどう","さゆう","さよう","さよく","さらだ","ざるそば","さわやか","さわる","さんいん","さんか","さんきゃく","さんこう","さんさい","ざんしょ","さんすう","さんせい","さんそ","さんち","さんま","さんみ","さんらん","しあい","しあげ","しあさって","しあわせ","しいく","しいん","しうち","しえい","しおけ","しかい","しかく","じかん","しごと","しすう","じだい","したうけ","したぎ","したて","したみ","しちょう","しちりん","しっかり","しつじ","しつもん","してい","してき","してつ","じてん","じどう","しなぎれ","しなもの","しなん","しねま","しねん","しのぐ","しのぶ","しはい","しばかり","しはつ","しはらい","しはん","しひょう","しふく","じぶん","しへい","しほう","しほん","しまう","しまる","しみん","しむける","じむしょ","しめい","しめる","しもん","しゃいん","しゃうん","しゃおん","じゃがいも","しやくしょ","しゃくほう","しゃけん","しゃこ","しゃざい","しゃしん","しゃせん","しゃそう","しゃたい","しゃちょう","しゃっきん","じゃま","しゃりん","しゃれい","じゆう","じゅうしょ","しゅくはく","じゅしん","しゅっせき","しゅみ","しゅらば","じゅんばん","しょうかい","しょくたく","しょっけん","しょどう","しょもつ","しらせる","しらべる","しんか","しんこう","じんじゃ","しんせいじ","しんちく","しんりん","すあげ","すあし","すあな","ずあん","すいえい","すいか","すいとう","ずいぶん","すいようび","すうがく","すうじつ","すうせん","すおどり","すきま","すくう","すくない","すける","すごい","すこし","ずさん","すずしい","すすむ","すすめる","すっかり","ずっしり","ずっと","すてき","すてる","すねる","すのこ","すはだ","すばらしい","ずひょう","ずぶぬれ","すぶり","すふれ","すべて","すべる","ずほう","すぼん","すまい","すめし","すもう","すやき","すらすら","するめ","すれちがう","すろっと","すわる","すんぜん","すんぽう","せあぶら","せいかつ","せいげん","せいじ","せいよう","せおう","せかいかん","せきにん","せきむ","せきゆ","せきらんうん","せけん","せこう","せすじ","せたい","せたけ","せっかく","せっきゃく","ぜっく","せっけん","せっこつ","せっさたくま","せつぞく","せつだん","せつでん","せっぱん","せつび","せつぶん","せつめい","せつりつ","せなか","せのび","せはば","せびろ","せぼね","せまい","せまる","せめる","せもたれ","せりふ","ぜんあく","せんい","せんえい","せんか","せんきょ","せんく","せんげん","ぜんご","せんさい","せんしゅ","せんすい","せんせい","せんぞ","せんたく","せんちょう","せんてい","せんとう","せんぬき","せんねん","せんぱい","ぜんぶ","ぜんぽう","せんむ","せんめんじょ","せんもん","せんやく","せんゆう","せんよう","ぜんら","ぜんりゃく","せんれい","せんろ","そあく","そいとげる","そいね","そうがんきょう","そうき","そうご","そうしん","そうだん","そうなん","そうび","そうめん","そうり","そえもの","そえん","そがい","そげき","そこう","そこそこ","そざい","そしな","そせい","そせん","そそぐ","そだてる","そつう","そつえん","そっかん","そつぎょう","そっけつ","そっこう","そっせん","そっと","そとがわ","そとづら","そなえる","そなた","そふぼ","そぼく","そぼろ","そまつ","そまる","そむく","そむりえ","そめる","そもそも","そよかぜ","そらまめ","そろう","そんかい","そんけい","そんざい","そんしつ","そんぞく","そんちょう","ぞんび","ぞんぶん","そんみん","たあい","たいいん","たいうん","たいえき","たいおう","だいがく","たいき","たいぐう","たいけん","たいこ","たいざい","だいじょうぶ","だいすき","たいせつ","たいそう","だいたい","たいちょう","たいてい","だいどころ","たいない","たいねつ","たいのう","たいはん","だいひょう","たいふう","たいへん","たいほ","たいまつばな","たいみんぐ","たいむ","たいめん","たいやき","たいよう","たいら","たいりょく","たいる","たいわん","たうえ","たえる","たおす","たおる","たおれる","たかい","たかね","たきび","たくさん","たこく","たこやき","たさい","たしざん","だじゃれ","たすける","たずさわる","たそがれ","たたかう","たたく","ただしい","たたみ","たちばな","だっかい","だっきゃく","だっこ","だっしゅつ","だったい","たてる","たとえる","たなばた","たにん","たぬき","たのしみ","たはつ","たぶん","たべる","たぼう","たまご","たまる","だむる","ためいき","ためす","ためる","たもつ","たやすい","たよる","たらす","たりきほんがん","たりょう","たりる","たると","たれる","たれんと","たろっと","たわむれる","だんあつ","たんい","たんおん","たんか","たんき","たんけん","たんご","たんさん","たんじょうび","だんせい","たんそく","たんたい","だんち","たんてい","たんとう","だんな","たんにん","だんねつ","たんのう","たんぴん","だんぼう","たんまつ","たんめい","だんれつ","だんろ","だんわ","ちあい","ちあん","ちいき","ちいさい","ちえん","ちかい","ちから","ちきゅう","ちきん","ちけいず","ちけん","ちこく","ちさい","ちしき","ちしりょう","ちせい","ちそう","ちたい","ちたん","ちちおや","ちつじょ","ちてき","ちてん","ちぬき","ちぬり","ちのう","ちひょう","ちへいせん","ちほう","ちまた","ちみつ","ちみどろ","ちめいど","ちゃんこなべ","ちゅうい","ちゆりょく","ちょうし","ちょさくけん","ちらし","ちらみ","ちりがみ","ちりょう","ちるど","ちわわ","ちんたい","ちんもく","ついか","ついたち","つうか","つうじょう","つうはん","つうわ","つかう","つかれる","つくね","つくる","つけね","つける","つごう","つたえる","つづく","つつじ","つつむ","つとめる","つながる","つなみ","つねづね","つのる","つぶす","つまらない","つまる","つみき","つめたい","つもり","つもる","つよい","つるぼ","つるみく","つわもの","つわり","てあし","てあて","てあみ","ていおん","ていか","ていき","ていけい","ていこく","ていさつ","ていし","ていせい","ていたい","ていど","ていねい","ていひょう","ていへん","ていぼう","てうち","ておくれ","てきとう","てくび","でこぼこ","てさぎょう","てさげ","てすり","てそう","てちがい","てちょう","てつがく","てつづき","でっぱ","てつぼう","てつや","でぬかえ","てぬき","てぬぐい","てのひら","てはい","てぶくろ","てふだ","てほどき","てほん","てまえ","てまきずし","てみじか","てみやげ","てらす","てれび","てわけ","てわたし","でんあつ","てんいん","てんかい","てんき","てんぐ","てんけん","てんごく","てんさい","てんし","てんすう","でんち","てんてき","てんとう","てんない","てんぷら","てんぼうだい","てんめつ","てんらんかい","でんりょく","でんわ","どあい","といれ","どうかん","とうきゅう","どうぐ","とうし","とうむぎ","とおい","とおか","とおく","とおす","とおる","とかい","とかす","ときおり","ときどき","とくい","とくしゅう","とくてん","とくに","とくべつ","とけい","とける","とこや","とさか","としょかん","とそう","とたん","とちゅう","とっきゅう","とっくん","とつぜん","とつにゅう","とどける","ととのえる","とない","となえる","となり","とのさま","とばす","どぶがわ","とほう","とまる","とめる","ともだち","ともる","どようび","とらえる","とんかつ","どんぶり","ないかく","ないこう","ないしょ","ないす","ないせん","ないそう","なおす","ながい","なくす","なげる","なこうど","なさけ","なたでここ","なっとう","なつやすみ","ななおし","なにごと","なにもの","なにわ","なのか","なふだ","なまいき","なまえ","なまみ","なみだ","なめらか","なめる","なやむ","ならう","ならび","ならぶ","なれる","なわとび","なわばり","にあう","にいがた","にうけ","におい","にかい","にがて","にきび","にくしみ","にくまん","にげる","にさんかたんそ","にしき","にせもの","にちじょう","にちようび","にっか","にっき","にっけい","にっこう","にっさん","にっしょく","にっすう","にっせき","にってい","になう","にほん","にまめ","にもつ","にやり","にゅういん","にりんしゃ","にわとり","にんい","にんか","にんき","にんげん","にんしき","にんずう","にんそう","にんたい","にんち","にんてい","にんにく","にんぷ","にんまり","にんむ","にんめい","にんよう","ぬいくぎ","ぬかす","ぬぐいとる","ぬぐう","ぬくもり","ぬすむ","ぬまえび","ぬめり","ぬらす","ぬんちゃく","ねあげ","ねいき","ねいる","ねいろ","ねぐせ","ねくたい","ねくら","ねこぜ","ねこむ","ねさげ","ねすごす","ねそべる","ねだん","ねつい","ねっしん","ねつぞう","ねったいぎょ","ねぶそく","ねふだ","ねぼう","ねほりはほり","ねまき","ねまわし","ねみみ","ねむい","ねむたい","ねもと","ねらう","ねわざ","ねんいり","ねんおし","ねんかん","ねんきん","ねんぐ","ねんざ","ねんし","ねんちゃく","ねんど","ねんぴ","ねんぶつ","ねんまつ","ねんりょう","ねんれい","のいず","のおづま","のがす","のきなみ","のこぎり","のこす","のこる","のせる","のぞく","のぞむ","のたまう","のちほど","のっく","のばす","のはら","のべる","のぼる","のみもの","のやま","のらいぬ","のらねこ","のりもの","のりゆき","のれん","のんき","ばあい","はあく","ばあさん","ばいか","ばいく","はいけん","はいご","はいしん","はいすい","はいせん","はいそう","はいち","ばいばい","はいれつ","はえる","はおる","はかい","ばかり","はかる","はくしゅ","はけん","はこぶ","はさみ","はさん","はしご","ばしょ","はしる","はせる","ぱそこん","はそん","はたん","はちみつ","はつおん","はっかく","はづき","はっきり","はっくつ","はっけん","はっこう","はっさん","はっしん","はったつ","はっちゅう","はってん","はっぴょう","はっぽう","はなす","はなび","はにかむ","はぶらし","はみがき","はむかう","はめつ","はやい","はやし","はらう","はろうぃん","はわい","はんい","はんえい","はんおん","はんかく","はんきょう","ばんぐみ","はんこ","はんしゃ","はんすう","はんだん","ぱんち","ぱんつ","はんてい","はんとし","はんのう","はんぱ","はんぶん","はんぺん","はんぼうき","はんめい","はんらん","はんろん","ひいき","ひうん","ひえる","ひかく","ひかり","ひかる","ひかん","ひくい","ひけつ","ひこうき","ひこく","ひさい","ひさしぶり","ひさん","びじゅつかん","ひしょ","ひそか","ひそむ","ひたむき","ひだり","ひたる","ひつぎ","ひっこし","ひっし","ひつじゅひん","ひっす","ひつぜん","ぴったり","ぴっちり","ひつよう","ひてい","ひとごみ","ひなまつり","ひなん","ひねる","ひはん","ひびく","ひひょう","ひほう","ひまわり","ひまん","ひみつ","ひめい","ひめじし","ひやけ","ひやす","ひよう","びょうき","ひらがな","ひらく","ひりつ","ひりょう","ひるま","ひるやすみ","ひれい","ひろい","ひろう","ひろき","ひろゆき","ひんかく","ひんけつ","ひんこん","ひんしゅ","ひんそう","ぴんち","ひんぱん","びんぼう","ふあん","ふいうち","ふうけい","ふうせん","ぷうたろう","ふうとう","ふうふ","ふえる","ふおん","ふかい","ふきん","ふくざつ","ふくぶくろ","ふこう","ふさい","ふしぎ","ふじみ","ふすま","ふせい","ふせぐ","ふそく","ぶたにく","ふたん","ふちょう","ふつう","ふつか","ふっかつ","ふっき","ふっこく","ぶどう","ふとる","ふとん","ふのう","ふはい","ふひょう","ふへん","ふまん","ふみん","ふめつ","ふめん","ふよう","ふりこ","ふりる","ふるい","ふんいき","ぶんがく","ぶんぐ","ふんしつ","ぶんせき","ふんそう","ぶんぽう","へいあん","へいおん","へいがい","へいき","へいげん","へいこう","へいさ","へいしゃ","へいせつ","へいそ","へいたく","へいてん","へいねつ","へいわ","へきが","へこむ","べにいろ","べにしょうが","へらす","へんかん","べんきょう","べんごし","へんさい","へんたい","べんり","ほあん","ほいく","ぼうぎょ","ほうこく","ほうそう","ほうほう","ほうもん","ほうりつ","ほえる","ほおん","ほかん","ほきょう","ぼきん","ほくろ","ほけつ","ほけん","ほこう","ほこる","ほしい","ほしつ","ほしゅ","ほしょう","ほせい","ほそい","ほそく","ほたて","ほたる","ぽちぶくろ","ほっきょく","ほっさ","ほったん","ほとんど","ほめる","ほんい","ほんき","ほんけ","ほんしつ","ほんやく","まいにち","まかい","まかせる","まがる","まける","まこと","まさつ","まじめ","ますく","まぜる","まつり","まとめ","まなぶ","まぬけ","まねく","まほう","まもる","まゆげ","まよう","まろやか","まわす","まわり","まわる","まんが","まんきつ","まんぞく","まんなか","みいら","みうち","みえる","みがく","みかた","みかん","みけん","みこん","みじかい","みすい","みすえる","みせる","みっか","みつかる","みつける","みてい","みとめる","みなと","みなみかさい","みねらる","みのう","みのがす","みほん","みもと","みやげ","みらい","みりょく","みわく","みんか","みんぞく","むいか","むえき","むえん","むかい","むかう","むかえ","むかし","むぎちゃ","むける","むげん","むさぼる","むしあつい","むしば","むじゅん","むしろ","むすう","むすこ","むすぶ","むすめ","むせる","むせん","むちゅう","むなしい","むのう","むやみ","むよう","むらさき","むりょう","むろん","めいあん","めいうん","めいえん","めいかく","めいきょく","めいさい","めいし","めいそう","めいぶつ","めいれい","めいわく","めぐまれる","めざす","めした","めずらしい","めだつ","めまい","めやす","めんきょ","めんせき","めんどう","もうしあげる","もうどうけん","もえる","もくし","もくてき","もくようび","もちろん","もどる","もらう","もんく","もんだい","やおや","やける","やさい","やさしい","やすい","やすたろう","やすみ","やせる","やそう","やたい","やちん","やっと","やっぱり","やぶる","やめる","ややこしい","やよい","やわらかい","ゆうき","ゆうびんきょく","ゆうべ","ゆうめい","ゆけつ","ゆしゅつ","ゆせん","ゆそう","ゆたか","ゆちゃく","ゆでる","ゆにゅう","ゆびわ","ゆらい","ゆれる","ようい","ようか","ようきゅう","ようじ","ようす","ようちえん","よかぜ","よかん","よきん","よくせい","よくぼう","よけい","よごれる","よさん","よしゅう","よそう","よそく","よっか","よてい","よどがわく","よねつ","よやく","よゆう","よろこぶ","よろしい","らいう","らくがき","らくご","らくさつ","らくだ","らしんばん","らせん","らぞく","らたい","らっか","られつ","りえき","りかい","りきさく","りきせつ","りくぐん","りくつ","りけん","りこう","りせい","りそう","りそく","りてん","りねん","りゆう","りゅうがく","りよう","りょうり","りょかん","りょくちゃ","りょこう","りりく","りれき","りろん","りんご","るいけい","るいさい","るいじ","るいせき","るすばん","るりがわら","れいかん","れいぎ","れいせい","れいぞうこ","れいとう","れいぼう","れきし","れきだい","れんあい","れんけい","れんこん","れんさい","れんしゅう","れんぞく","れんらく","ろうか","ろうご","ろうじん","ろうそく","ろくが","ろこつ","ろじうら","ろしゅつ","ろせん","ろてん","ろめん","ろれつ","ろんぎ","ろんぱ","ろんぶん","ろんり","わかす","わかめ","わかやま","わかれる","わしつ","わじまし","わすれもの","わらう","われる"]}}},{package:"eth-keyring-controller>@metamask/bip39",file:"node_modules/@metamask/bip39/src/wordlists/japanese.json"}],[971,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){t.exports=["가격","가끔","가난","가능","가득","가르침","가뭄","가방","가상","가슴","가운데","가을","가이드","가입","가장","가정","가족","가죽","각오","각자","간격","간부","간섭","간장","간접","간판","갈등","갈비","갈색","갈증","감각","감기","감소","감수성","감자","감정","갑자기","강남","강당","강도","강력히","강변","강북","강사","강수량","강아지","강원도","강의","강제","강조","같이","개구리","개나리","개방","개별","개선","개성","개인","객관적","거실","거액","거울","거짓","거품","걱정","건강","건물","건설","건조","건축","걸음","검사","검토","게시판","게임","겨울","견해","결과","결국","결론","결석","결승","결심","결정","결혼","경계","경고","경기","경력","경복궁","경비","경상도","경영","경우","경쟁","경제","경주","경찰","경치","경향","경험","계곡","계단","계란","계산","계속","계약","계절","계층","계획","고객","고구려","고궁","고급","고등학생","고무신","고민","고양이","고장","고전","고집","고춧가루","고통","고향","곡식","골목","골짜기","골프","공간","공개","공격","공군","공급","공기","공동","공무원","공부","공사","공식","공업","공연","공원","공장","공짜","공책","공통","공포","공항","공휴일","과목","과일","과장","과정","과학","관객","관계","관광","관념","관람","관련","관리","관습","관심","관점","관찰","광경","광고","광장","광주","괴로움","굉장히","교과서","교문","교복","교실","교양","교육","교장","교직","교통","교환","교훈","구경","구름","구멍","구별","구분","구석","구성","구속","구역","구입","구청","구체적","국가","국기","국내","국립","국물","국민","국수","국어","국왕","국적","국제","국회","군대","군사","군인","궁극적","권리","권위","권투","귀국","귀신","규정","규칙","균형","그날","그냥","그늘","그러나","그룹","그릇","그림","그제서야","그토록","극복","극히","근거","근교","근래","근로","근무","근본","근원","근육","근처","글씨","글자","금강산","금고","금년","금메달","금액","금연","금요일","금지","긍정적","기간","기관","기념","기능","기독교","기둥","기록","기름","기법","기본","기분","기쁨","기숙사","기술","기억","기업","기온","기운","기원","기적","기준","기침","기혼","기획","긴급","긴장","길이","김밥","김치","김포공항","깍두기","깜빡","깨달음","깨소금","껍질","꼭대기","꽃잎","나들이","나란히","나머지","나물","나침반","나흘","낙엽","난방","날개","날씨","날짜","남녀","남대문","남매","남산","남자","남편","남학생","낭비","낱말","내년","내용","내일","냄비","냄새","냇물","냉동","냉면","냉방","냉장고","넥타이","넷째","노동","노란색","노력","노인","녹음","녹차","녹화","논리","논문","논쟁","놀이","농구","농담","농민","농부","농업","농장","농촌","높이","눈동자","눈물","눈썹","뉴욕","느낌","늑대","능동적","능력","다방","다양성","다음","다이어트","다행","단계","단골","단독","단맛","단순","단어","단위","단점","단체","단추","단편","단풍","달걀","달러","달력","달리","닭고기","담당","담배","담요","담임","답변","답장","당근","당분간","당연히","당장","대규모","대낮","대단히","대답","대도시","대략","대량","대륙","대문","대부분","대신","대응","대장","대전","대접","대중","대책","대출","대충","대통령","대학","대한민국","대합실","대형","덩어리","데이트","도대체","도덕","도둑","도망","도서관","도심","도움","도입","도자기","도저히","도전","도중","도착","독감","독립","독서","독일","독창적","동화책","뒷모습","뒷산","딸아이","마누라","마늘","마당","마라톤","마련","마무리","마사지","마약","마요네즈","마을","마음","마이크","마중","마지막","마찬가지","마찰","마흔","막걸리","막내","막상","만남","만두","만세","만약","만일","만점","만족","만화","많이","말기","말씀","말투","맘대로","망원경","매년","매달","매력","매번","매스컴","매일","매장","맥주","먹이","먼저","먼지","멀리","메일","며느리","며칠","면담","멸치","명단","명령","명예","명의","명절","명칭","명함","모금","모니터","모델","모든","모범","모습","모양","모임","모조리","모집","모퉁이","목걸이","목록","목사","목소리","목숨","목적","목표","몰래","몸매","몸무게","몸살","몸속","몸짓","몸통","몹시","무관심","무궁화","무더위","무덤","무릎","무슨","무엇","무역","무용","무조건","무지개","무척","문구","문득","문법","문서","문제","문학","문화","물가","물건","물결","물고기","물론","물리학","물음","물질","물체","미국","미디어","미사일","미술","미역","미용실","미움","미인","미팅","미혼","민간","민족","민주","믿음","밀가루","밀리미터","밑바닥","바가지","바구니","바나나","바늘","바닥","바닷가","바람","바이러스","바탕","박물관","박사","박수","반대","반드시","반말","반발","반성","반응","반장","반죽","반지","반찬","받침","발가락","발걸음","발견","발달","발레","발목","발바닥","발생","발음","발자국","발전","발톱","발표","밤하늘","밥그릇","밥맛","밥상","밥솥","방금","방면","방문","방바닥","방법","방송","방식","방안","방울","방지","방학","방해","방향","배경","배꼽","배달","배드민턴","백두산","백색","백성","백인","백제","백화점","버릇","버섯","버튼","번개","번역","번지","번호","벌금","벌레","벌써","범위","범인","범죄","법률","법원","법적","법칙","베이징","벨트","변경","변동","변명","변신","변호사","변화","별도","별명","별일","병실","병아리","병원","보관","보너스","보라색","보람","보름","보상","보안","보자기","보장","보전","보존","보통","보편적","보험","복도","복사","복숭아","복습","볶음","본격적","본래","본부","본사","본성","본인","본질","볼펜","봉사","봉지","봉투","부근","부끄러움","부담","부동산","부문","부분","부산","부상","부엌","부인","부작용","부장","부정","부족","부지런히","부친","부탁","부품","부회장","북부","북한","분노","분량","분리","분명","분석","분야","분위기","분필","분홍색","불고기","불과","불교","불꽃","불만","불법","불빛","불안","불이익","불행","브랜드","비극","비난","비닐","비둘기","비디오","비로소","비만","비명","비밀","비바람","비빔밥","비상","비용","비율","비중","비타민","비판","빌딩","빗물","빗방울","빗줄기","빛깔","빨간색","빨래","빨리","사건","사계절","사나이","사냥","사람","사랑","사립","사모님","사물","사방","사상","사생활","사설","사슴","사실","사업","사용","사월","사장","사전","사진","사촌","사춘기","사탕","사투리","사흘","산길","산부인과","산업","산책","살림","살인","살짝","삼계탕","삼국","삼십","삼월","삼촌","상관","상금","상대","상류","상반기","상상","상식","상업","상인","상자","상점","상처","상추","상태","상표","상품","상황","새벽","색깔","색연필","생각","생명","생물","생방송","생산","생선","생신","생일","생활","서랍","서른","서명","서민","서비스","서양","서울","서적","서점","서쪽","서클","석사","석유","선거","선물","선배","선생","선수","선원","선장","선전","선택","선풍기","설거지","설날","설렁탕","설명","설문","설사","설악산","설치","설탕","섭씨","성공","성당","성명","성별","성인","성장","성적","성질","성함","세금","세미나","세상","세월","세종대왕","세탁","센터","센티미터","셋째","소규모","소극적","소금","소나기","소년","소득","소망","소문","소설","소속","소아과","소용","소원","소음","소중히","소지품","소질","소풍","소형","속담","속도","속옷","손가락","손길","손녀","손님","손등","손목","손뼉","손실","손질","손톱","손해","솔직히","솜씨","송아지","송이","송편","쇠고기","쇼핑","수건","수년","수단","수돗물","수동적","수면","수명","수박","수상","수석","수술","수시로","수업","수염","수영","수입","수준","수집","수출","수컷","수필","수학","수험생","수화기","숙녀","숙소","숙제","순간","순서","순수","순식간","순위","숟가락","술병","술집","숫자","스님","스물","스스로","스승","스웨터","스위치","스케이트","스튜디오","스트레스","스포츠","슬쩍","슬픔","습관","습기","승객","승리","승부","승용차","승진","시각","시간","시골","시금치","시나리오","시댁","시리즈","시멘트","시민","시부모","시선","시설","시스템","시아버지","시어머니","시월","시인","시일","시작","시장","시절","시점","시중","시즌","시집","시청","시합","시험","식구","식기","식당","식량","식료품","식물","식빵","식사","식생활","식초","식탁","식품","신고","신규","신념","신문","신발","신비","신사","신세","신용","신제품","신청","신체","신화","실감","실내","실력","실례","실망","실수","실습","실시","실장","실정","실질적","실천","실체","실컷","실태","실패","실험","실현","심리","심부름","심사","심장","심정","심판","쌍둥이","씨름","씨앗","아가씨","아나운서","아드님","아들","아쉬움","아스팔트","아시아","아울러","아저씨","아줌마","아직","아침","아파트","아프리카","아픔","아홉","아흔","악기","악몽","악수","안개","안경","안과","안내","안녕","안동","안방","안부","안주","알루미늄","알코올","암시","암컷","압력","앞날","앞문","애인","애정","액수","앨범","야간","야단","야옹","약간","약국","약속","약수","약점","약품","약혼녀","양념","양력","양말","양배추","양주","양파","어둠","어려움","어른","어젯밤","어쨌든","어쩌다가","어쩐지","언니","언덕","언론","언어","얼굴","얼른","얼음","얼핏","엄마","업무","업종","업체","엉덩이","엉망","엉터리","엊그제","에너지","에어컨","엔진","여건","여고생","여관","여군","여권","여대생","여덟","여동생","여든","여론","여름","여섯","여성","여왕","여인","여전히","여직원","여학생","여행","역사","역시","역할","연결","연구","연극","연기","연락","연설","연세","연속","연습","연애","연예인","연인","연장","연주","연출","연필","연합","연휴","열기","열매","열쇠","열심히","열정","열차","열흘","염려","엽서","영국","영남","영상","영양","영역","영웅","영원히","영하","영향","영혼","영화","옆구리","옆방","옆집","예감","예금","예방","예산","예상","예선","예술","예습","예식장","예약","예전","예절","예정","예컨대","옛날","오늘","오락","오랫동안","오렌지","오로지","오른발","오븐","오십","오염","오월","오전","오직","오징어","오페라","오피스텔","오히려","옥상","옥수수","온갖","온라인","온몸","온종일","온통","올가을","올림픽","올해","옷차림","와이셔츠","와인","완성","완전","왕비","왕자","왜냐하면","왠지","외갓집","외국","외로움","외삼촌","외출","외침","외할머니","왼발","왼손","왼쪽","요금","요일","요즘","요청","용기","용서","용어","우산","우선","우승","우연히","우정","우체국","우편","운동","운명","운반","운전","운행","울산","울음","움직임","웃어른","웃음","워낙","원고","원래","원서","원숭이","원인","원장","원피스","월급","월드컵","월세","월요일","웨이터","위반","위법","위성","위원","위험","위협","윗사람","유난히","유럽","유명","유물","유산","유적","유치원","유학","유행","유형","육군","육상","육십","육체","은행","음력","음료","음반","음성","음식","음악","음주","의견","의논","의문","의복","의식","의심","의외로","의욕","의원","의학","이것","이곳","이념","이놈","이달","이대로","이동","이렇게","이력서","이론적","이름","이민","이발소","이별","이불","이빨","이상","이성","이슬","이야기","이용","이웃","이월","이윽고","이익","이전","이중","이튿날","이틀","이혼","인간","인격","인공","인구","인근","인기","인도","인류","인물","인생","인쇄","인연","인원","인재","인종","인천","인체","인터넷","인하","인형","일곱","일기","일단","일대","일등","일반","일본","일부","일상","일생","일손","일요일","일월","일정","일종","일주일","일찍","일체","일치","일행","일회용","임금","임무","입대","입력","입맛","입사","입술","입시","입원","입장","입학","자가용","자격","자극","자동","자랑","자부심","자식","자신","자연","자원","자율","자전거","자정","자존심","자판","작가","작년","작성","작업","작용","작은딸","작품","잔디","잔뜩","잔치","잘못","잠깐","잠수함","잠시","잠옷","잠자리","잡지","장관","장군","장기간","장래","장례","장르","장마","장면","장모","장미","장비","장사","장소","장식","장애인","장인","장점","장차","장학금","재능","재빨리","재산","재생","재작년","재정","재채기","재판","재학","재활용","저것","저고리","저곳","저녁","저런","저렇게","저번","저울","저절로","저축","적극","적당히","적성","적용","적응","전개","전공","전기","전달","전라도","전망","전문","전반","전부","전세","전시","전용","전자","전쟁","전주","전철","전체","전통","전혀","전후","절대","절망","절반","절약","절차","점검","점수","점심","점원","점점","점차","접근","접시","접촉","젓가락","정거장","정도","정류장","정리","정말","정면","정문","정반대","정보","정부","정비","정상","정성","정오","정원","정장","정지","정치","정확히","제공","제과점","제대로","제목","제발","제법","제삿날","제안","제일","제작","제주도","제출","제품","제한","조각","조건","조금","조깅","조명","조미료","조상","조선","조용히","조절","조정","조직","존댓말","존재","졸업","졸음","종교","종로","종류","종소리","종업원","종종","종합","좌석","죄인","주관적","주름","주말","주머니","주먹","주문","주민","주방","주변","주식","주인","주일","주장","주전자","주택","준비","줄거리","줄기","줄무늬","중간","중계방송","중국","중년","중단","중독","중반","중부","중세","중소기업","중순","중앙","중요","중학교","즉석","즉시","즐거움","증가","증거","증권","증상","증세","지각","지갑","지경","지극히","지금","지급","지능","지름길","지리산","지방","지붕","지식","지역","지우개","지원","지적","지점","지진","지출","직선","직업","직원","직장","진급","진동","진로","진료","진리","진짜","진찰","진출","진통","진행","질문","질병","질서","짐작","집단","집안","집중","짜증","찌꺼기","차남","차라리","차량","차림","차별","차선","차츰","착각","찬물","찬성","참가","참기름","참새","참석","참여","참외","참조","찻잔","창가","창고","창구","창문","창밖","창작","창조","채널","채점","책가방","책방","책상","책임","챔피언","처벌","처음","천국","천둥","천장","천재","천천히","철도","철저히","철학","첫날","첫째","청년","청바지","청소","청춘","체계","체력","체온","체육","체중","체험","초등학생","초반","초밥","초상화","초순","초여름","초원","초저녁","초점","초청","초콜릿","촛불","총각","총리","총장","촬영","최근","최상","최선","최신","최악","최종","추석","추억","추진","추천","추측","축구","축소","축제","축하","출근","출발","출산","출신","출연","출입","출장","출판","충격","충고","충돌","충분히","충청도","취업","취직","취향","치약","친구","친척","칠십","칠월","칠판","침대","침묵","침실","칫솔","칭찬","카메라","카운터","칼국수","캐릭터","캠퍼스","캠페인","커튼","컨디션","컬러","컴퓨터","코끼리","코미디","콘서트","콜라","콤플렉스","콩나물","쾌감","쿠데타","크림","큰길","큰딸","큰소리","큰아들","큰어머니","큰일","큰절","클래식","클럽","킬로","타입","타자기","탁구","탁자","탄생","태권도","태양","태풍","택시","탤런트","터널","터미널","테니스","테스트","테이블","텔레비전","토론","토마토","토요일","통계","통과","통로","통신","통역","통일","통장","통제","통증","통합","통화","퇴근","퇴원","퇴직금","튀김","트럭","특급","특별","특성","특수","특징","특히","튼튼히","티셔츠","파란색","파일","파출소","판결","판단","판매","판사","팔십","팔월","팝송","패션","팩스","팩시밀리","팬티","퍼센트","페인트","편견","편의","편지","편히","평가","평균","평생","평소","평양","평일","평화","포스터","포인트","포장","포함","표면","표정","표준","표현","품목","품질","풍경","풍속","풍습","프랑스","프린터","플라스틱","피곤","피망","피아노","필름","필수","필요","필자","필통","핑계","하느님","하늘","하드웨어","하룻밤","하반기","하숙집","하순","하여튼","하지만","하천","하품","하필","학과","학교","학급","학기","학년","학력","학번","학부모","학비","학생","학술","학습","학용품","학원","학위","학자","학점","한계","한글","한꺼번에","한낮","한눈","한동안","한때","한라산","한마디","한문","한번","한복","한식","한여름","한쪽","할머니","할아버지","할인","함께","함부로","합격","합리적","항공","항구","항상","항의","해결","해군","해답","해당","해물","해석","해설","해수욕장","해안","핵심","핸드백","햄버거","햇볕","햇살","행동","행복","행사","행운","행위","향기","향상","향수","허락","허용","헬기","현관","현금","현대","현상","현실","현장","현재","현지","혈액","협력","형부","형사","형수","형식","형제","형태","형편","혜택","호기심","호남","호랑이","호박","호텔","호흡","혹시","홀로","홈페이지","홍보","홍수","홍차","화면","화분","화살","화요일","화장","화학","확보","확인","확장","확정","환갑","환경","환영","환율","환자","활기","활동","활발히","활용","활짝","회견","회관","회복","회색","회원","회장","회전","횟수","횡단보도","효율적","후반","후춧가루","훈련","훨씬","휴식","휴일","흉내","흐름","흑백","흑인","흔적","흔히","흥미","흥분","희곡","희망","희생","흰색","힘껏"]}}},{package:"eth-keyring-controller>@metamask/bip39",file:"node_modules/@metamask/bip39/src/wordlists/korean.json"}],[972,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){t.exports=["abacate","abaixo","abalar","abater","abduzir","abelha","aberto","abismo","abotoar","abranger","abreviar","abrigar","abrupto","absinto","absoluto","absurdo","abutre","acabado","acalmar","acampar","acanhar","acaso","aceitar","acelerar","acenar","acervo","acessar","acetona","achatar","acidez","acima","acionado","acirrar","aclamar","aclive","acolhida","acomodar","acoplar","acordar","acumular","acusador","adaptar","adega","adentro","adepto","adequar","aderente","adesivo","adeus","adiante","aditivo","adjetivo","adjunto","admirar","adorar","adquirir","adubo","adverso","advogado","aeronave","afastar","aferir","afetivo","afinador","afivelar","aflito","afluente","afrontar","agachar","agarrar","agasalho","agenciar","agilizar","agiota","agitado","agora","agradar","agreste","agrupar","aguardar","agulha","ajoelhar","ajudar","ajustar","alameda","alarme","alastrar","alavanca","albergue","albino","alcatra","aldeia","alecrim","alegria","alertar","alface","alfinete","algum","alheio","aliar","alicate","alienar","alinhar","aliviar","almofada","alocar","alpiste","alterar","altitude","alucinar","alugar","aluno","alusivo","alvo","amaciar","amador","amarelo","amassar","ambas","ambiente","ameixa","amenizar","amido","amistoso","amizade","amolador","amontoar","amoroso","amostra","amparar","ampliar","ampola","anagrama","analisar","anarquia","anatomia","andaime","anel","anexo","angular","animar","anjo","anomalia","anotado","ansioso","anterior","anuidade","anunciar","anzol","apagador","apalpar","apanhado","apego","apelido","apertada","apesar","apetite","apito","aplauso","aplicada","apoio","apontar","aposta","aprendiz","aprovar","aquecer","arame","aranha","arara","arcada","ardente","areia","arejar","arenito","aresta","argiloso","argola","arma","arquivo","arraial","arrebate","arriscar","arroba","arrumar","arsenal","arterial","artigo","arvoredo","asfaltar","asilado","aspirar","assador","assinar","assoalho","assunto","astral","atacado","atadura","atalho","atarefar","atear","atender","aterro","ateu","atingir","atirador","ativo","atoleiro","atracar","atrevido","atriz","atual","atum","auditor","aumentar","aura","aurora","autismo","autoria","autuar","avaliar","avante","avaria","avental","avesso","aviador","avisar","avulso","axila","azarar","azedo","azeite","azulejo","babar","babosa","bacalhau","bacharel","bacia","bagagem","baiano","bailar","baioneta","bairro","baixista","bajular","baleia","baliza","balsa","banal","bandeira","banho","banir","banquete","barato","barbado","baronesa","barraca","barulho","baseado","bastante","batata","batedor","batida","batom","batucar","baunilha","beber","beijo","beirada","beisebol","beldade","beleza","belga","beliscar","bendito","bengala","benzer","berimbau","berlinda","berro","besouro","bexiga","bezerro","bico","bicudo","bienal","bifocal","bifurcar","bigorna","bilhete","bimestre","bimotor","biologia","biombo","biosfera","bipolar","birrento","biscoito","bisneto","bispo","bissexto","bitola","bizarro","blindado","bloco","bloquear","boato","bobagem","bocado","bocejo","bochecha","boicotar","bolada","boletim","bolha","bolo","bombeiro","bonde","boneco","bonita","borbulha","borda","boreal","borracha","bovino","boxeador","branco","brasa","braveza","breu","briga","brilho","brincar","broa","brochura","bronzear","broto","bruxo","bucha","budismo","bufar","bule","buraco","busca","busto","buzina","cabana","cabelo","cabide","cabo","cabrito","cacau","cacetada","cachorro","cacique","cadastro","cadeado","cafezal","caiaque","caipira","caixote","cajado","caju","calafrio","calcular","caldeira","calibrar","calmante","calota","camada","cambista","camisa","camomila","campanha","camuflar","canavial","cancelar","caneta","canguru","canhoto","canivete","canoa","cansado","cantar","canudo","capacho","capela","capinar","capotar","capricho","captador","capuz","caracol","carbono","cardeal","careca","carimbar","carneiro","carpete","carreira","cartaz","carvalho","casaco","casca","casebre","castelo","casulo","catarata","cativar","caule","causador","cautelar","cavalo","caverna","cebola","cedilha","cegonha","celebrar","celular","cenoura","censo","centeio","cercar","cerrado","certeiro","cerveja","cetim","cevada","chacota","chaleira","chamado","chapada","charme","chatice","chave","chefe","chegada","cheiro","cheque","chicote","chifre","chinelo","chocalho","chover","chumbo","chutar","chuva","cicatriz","ciclone","cidade","cidreira","ciente","cigana","cimento","cinto","cinza","ciranda","circuito","cirurgia","citar","clareza","clero","clicar","clone","clube","coado","coagir","cobaia","cobertor","cobrar","cocada","coelho","coentro","coeso","cogumelo","coibir","coifa","coiote","colar","coleira","colher","colidir","colmeia","colono","coluna","comando","combinar","comentar","comitiva","comover","complexo","comum","concha","condor","conectar","confuso","congelar","conhecer","conjugar","consumir","contrato","convite","cooperar","copeiro","copiador","copo","coquetel","coragem","cordial","corneta","coronha","corporal","correio","cortejo","coruja","corvo","cosseno","costela","cotonete","couro","couve","covil","cozinha","cratera","cravo","creche","credor","creme","crer","crespo","criada","criminal","crioulo","crise","criticar","crosta","crua","cruzeiro","cubano","cueca","cuidado","cujo","culatra","culminar","culpar","cultura","cumprir","cunhado","cupido","curativo","curral","cursar","curto","cuspir","custear","cutelo","damasco","datar","debater","debitar","deboche","debulhar","decalque","decimal","declive","decote","decretar","dedal","dedicado","deduzir","defesa","defumar","degelo","degrau","degustar","deitado","deixar","delator","delegado","delinear","delonga","demanda","demitir","demolido","dentista","depenado","depilar","depois","depressa","depurar","deriva","derramar","desafio","desbotar","descanso","desenho","desfiado","desgaste","desigual","deslize","desmamar","desova","despesa","destaque","desviar","detalhar","detentor","detonar","detrito","deusa","dever","devido","devotado","dezena","diagrama","dialeto","didata","difuso","digitar","dilatado","diluente","diminuir","dinastia","dinheiro","diocese","direto","discreta","disfarce","disparo","disquete","dissipar","distante","ditador","diurno","diverso","divisor","divulgar","dizer","dobrador","dolorido","domador","dominado","donativo","donzela","dormente","dorsal","dosagem","dourado","doutor","drenagem","drible","drogaria","duelar","duende","dueto","duplo","duquesa","durante","duvidoso","eclodir","ecoar","ecologia","edificar","edital","educado","efeito","efetivar","ejetar","elaborar","eleger","eleitor","elenco","elevador","eliminar","elogiar","embargo","embolado","embrulho","embutido","emenda","emergir","emissor","empatia","empenho","empinado","empolgar","emprego","empurrar","emulador","encaixe","encenado","enchente","encontro","endeusar","endossar","enfaixar","enfeite","enfim","engajado","engenho","englobar","engomado","engraxar","enguia","enjoar","enlatar","enquanto","enraizar","enrolado","enrugar","ensaio","enseada","ensino","ensopado","entanto","enteado","entidade","entortar","entrada","entulho","envergar","enviado","envolver","enxame","enxerto","enxofre","enxuto","epiderme","equipar","ereto","erguido","errata","erva","ervilha","esbanjar","esbelto","escama","escola","escrita","escuta","esfinge","esfolar","esfregar","esfumado","esgrima","esmalte","espanto","espelho","espiga","esponja","espreita","espumar","esquerda","estaca","esteira","esticar","estofado","estrela","estudo","esvaziar","etanol","etiqueta","euforia","europeu","evacuar","evaporar","evasivo","eventual","evidente","evoluir","exagero","exalar","examinar","exato","exausto","excesso","excitar","exclamar","executar","exemplo","exibir","exigente","exonerar","expandir","expelir","expirar","explanar","exposto","expresso","expulsar","externo","extinto","extrato","fabricar","fabuloso","faceta","facial","fada","fadiga","faixa","falar","falta","familiar","fandango","fanfarra","fantoche","fardado","farelo","farinha","farofa","farpa","fartura","fatia","fator","favorita","faxina","fazenda","fechado","feijoada","feirante","felino","feminino","fenda","feno","fera","feriado","ferrugem","ferver","festejar","fetal","feudal","fiapo","fibrose","ficar","ficheiro","figurado","fileira","filho","filme","filtrar","firmeza","fisgada","fissura","fita","fivela","fixador","fixo","flacidez","flamingo","flanela","flechada","flora","flutuar","fluxo","focal","focinho","fofocar","fogo","foguete","foice","folgado","folheto","forjar","formiga","forno","forte","fosco","fossa","fragata","fralda","frango","frasco","fraterno","freira","frente","fretar","frieza","friso","fritura","fronha","frustrar","fruteira","fugir","fulano","fuligem","fundar","fungo","funil","furador","furioso","futebol","gabarito","gabinete","gado","gaiato","gaiola","gaivota","galega","galho","galinha","galocha","ganhar","garagem","garfo","gargalo","garimpo","garoupa","garrafa","gasoduto","gasto","gata","gatilho","gaveta","gazela","gelado","geleia","gelo","gemada","gemer","gemido","generoso","gengiva","genial","genoma","genro","geologia","gerador","germinar","gesso","gestor","ginasta","gincana","gingado","girafa","girino","glacial","glicose","global","glorioso","goela","goiaba","golfe","golpear","gordura","gorjeta","gorro","gostoso","goteira","governar","gracejo","gradual","grafite","gralha","grampo","granada","gratuito","graveto","graxa","grego","grelhar","greve","grilo","grisalho","gritaria","grosso","grotesco","grudado","grunhido","gruta","guache","guarani","guaxinim","guerrear","guiar","guincho","guisado","gula","guloso","guru","habitar","harmonia","haste","haver","hectare","herdar","heresia","hesitar","hiato","hibernar","hidratar","hiena","hino","hipismo","hipnose","hipoteca","hoje","holofote","homem","honesto","honrado","hormonal","hospedar","humorado","iate","ideia","idoso","ignorado","igreja","iguana","ileso","ilha","iludido","iluminar","ilustrar","imagem","imediato","imenso","imersivo","iminente","imitador","imortal","impacto","impedir","implante","impor","imprensa","impune","imunizar","inalador","inapto","inativo","incenso","inchar","incidir","incluir","incolor","indeciso","indireto","indutor","ineficaz","inerente","infantil","infestar","infinito","inflamar","informal","infrator","ingerir","inibido","inicial","inimigo","injetar","inocente","inodoro","inovador","inox","inquieto","inscrito","inseto","insistir","inspetor","instalar","insulto","intacto","integral","intimar","intocado","intriga","invasor","inverno","invicto","invocar","iogurte","iraniano","ironizar","irreal","irritado","isca","isento","isolado","isqueiro","italiano","janeiro","jangada","janta","jararaca","jardim","jarro","jasmim","jato","javali","jazida","jejum","joaninha","joelhada","jogador","joia","jornal","jorrar","jovem","juba","judeu","judoca","juiz","julgador","julho","jurado","jurista","juro","justa","labareda","laboral","lacre","lactante","ladrilho","lagarta","lagoa","laje","lamber","lamentar","laminar","lampejo","lanche","lapidar","lapso","laranja","lareira","largura","lasanha","lastro","lateral","latido","lavanda","lavoura","lavrador","laxante","lazer","lealdade","lebre","legado","legendar","legista","leigo","leiloar","leitura","lembrete","leme","lenhador","lentilha","leoa","lesma","leste","letivo","letreiro","levar","leveza","levitar","liberal","libido","liderar","ligar","ligeiro","limitar","limoeiro","limpador","linda","linear","linhagem","liquidez","listagem","lisura","litoral","livro","lixa","lixeira","locador","locutor","lojista","lombo","lona","longe","lontra","lorde","lotado","loteria","loucura","lousa","louvar","luar","lucidez","lucro","luneta","lustre","lutador","luva","macaco","macete","machado","macio","madeira","madrinha","magnata","magreza","maior","mais","malandro","malha","malote","maluco","mamilo","mamoeiro","mamute","manada","mancha","mandato","manequim","manhoso","manivela","manobrar","mansa","manter","manusear","mapeado","maquinar","marcador","maresia","marfim","margem","marinho","marmita","maroto","marquise","marreco","martelo","marujo","mascote","masmorra","massagem","mastigar","matagal","materno","matinal","matutar","maxilar","medalha","medida","medusa","megafone","meiga","melancia","melhor","membro","memorial","menino","menos","mensagem","mental","merecer","mergulho","mesada","mesclar","mesmo","mesquita","mestre","metade","meteoro","metragem","mexer","mexicano","micro","migalha","migrar","milagre","milenar","milhar","mimado","minerar","minhoca","ministro","minoria","miolo","mirante","mirtilo","misturar","mocidade","moderno","modular","moeda","moer","moinho","moita","moldura","moleza","molho","molinete","molusco","montanha","moqueca","morango","morcego","mordomo","morena","mosaico","mosquete","mostarda","motel","motim","moto","motriz","muda","muito","mulata","mulher","multar","mundial","munido","muralha","murcho","muscular","museu","musical","nacional","nadador","naja","namoro","narina","narrado","nascer","nativa","natureza","navalha","navegar","navio","neblina","nebuloso","negativa","negociar","negrito","nervoso","neta","neural","nevasca","nevoeiro","ninar","ninho","nitidez","nivelar","nobreza","noite","noiva","nomear","nominal","nordeste","nortear","notar","noticiar","noturno","novelo","novilho","novo","nublado","nudez","numeral","nupcial","nutrir","nuvem","obcecado","obedecer","objetivo","obrigado","obscuro","obstetra","obter","obturar","ocidente","ocioso","ocorrer","oculista","ocupado","ofegante","ofensiva","oferenda","oficina","ofuscado","ogiva","olaria","oleoso","olhar","oliveira","ombro","omelete","omisso","omitir","ondulado","oneroso","ontem","opcional","operador","oponente","oportuno","oposto","orar","orbitar","ordem","ordinal","orfanato","orgasmo","orgulho","oriental","origem","oriundo","orla","ortodoxo","orvalho","oscilar","ossada","osso","ostentar","otimismo","ousadia","outono","outubro","ouvido","ovelha","ovular","oxidar","oxigenar","pacato","paciente","pacote","pactuar","padaria","padrinho","pagar","pagode","painel","pairar","paisagem","palavra","palestra","palheta","palito","palmada","palpitar","pancada","panela","panfleto","panqueca","pantanal","papagaio","papelada","papiro","parafina","parcial","pardal","parede","partida","pasmo","passado","pastel","patamar","patente","patinar","patrono","paulada","pausar","peculiar","pedalar","pedestre","pediatra","pedra","pegada","peitoral","peixe","pele","pelicano","penca","pendurar","peneira","penhasco","pensador","pente","perceber","perfeito","pergunta","perito","permitir","perna","perplexo","persiana","pertence","peruca","pescado","pesquisa","pessoa","petiscar","piada","picado","piedade","pigmento","pilastra","pilhado","pilotar","pimenta","pincel","pinguim","pinha","pinote","pintar","pioneiro","pipoca","piquete","piranha","pires","pirueta","piscar","pistola","pitanga","pivete","planta","plaqueta","platina","plebeu","plumagem","pluvial","pneu","poda","poeira","poetisa","polegada","policiar","poluente","polvilho","pomar","pomba","ponderar","pontaria","populoso","porta","possuir","postal","pote","poupar","pouso","povoar","praia","prancha","prato","praxe","prece","predador","prefeito","premiar","prensar","preparar","presilha","pretexto","prevenir","prezar","primata","princesa","prisma","privado","processo","produto","profeta","proibido","projeto","prometer","propagar","prosa","protetor","provador","publicar","pudim","pular","pulmonar","pulseira","punhal","punir","pupilo","pureza","puxador","quadra","quantia","quarto","quase","quebrar","queda","queijo","quente","querido","quimono","quina","quiosque","rabanada","rabisco","rachar","racionar","radial","raiar","rainha","raio","raiva","rajada","ralado","ramal","ranger","ranhura","rapadura","rapel","rapidez","raposa","raquete","raridade","rasante","rascunho","rasgar","raspador","rasteira","rasurar","ratazana","ratoeira","realeza","reanimar","reaver","rebaixar","rebelde","rebolar","recado","recente","recheio","recibo","recordar","recrutar","recuar","rede","redimir","redonda","reduzida","reenvio","refinar","refletir","refogar","refresco","refugiar","regalia","regime","regra","reinado","reitor","rejeitar","relativo","remador","remendo","remorso","renovado","reparo","repelir","repleto","repolho","represa","repudiar","requerer","resenha","resfriar","resgatar","residir","resolver","respeito","ressaca","restante","resumir","retalho","reter","retirar","retomada","retratar","revelar","revisor","revolta","riacho","rica","rigidez","rigoroso","rimar","ringue","risada","risco","risonho","robalo","rochedo","rodada","rodeio","rodovia","roedor","roleta","romano","roncar","rosado","roseira","rosto","rota","roteiro","rotina","rotular","rouco","roupa","roxo","rubro","rugido","rugoso","ruivo","rumo","rupestre","russo","sabor","saciar","sacola","sacudir","sadio","safira","saga","sagrada","saibro","salada","saleiro","salgado","saliva","salpicar","salsicha","saltar","salvador","sambar","samurai","sanar","sanfona","sangue","sanidade","sapato","sarda","sargento","sarjeta","saturar","saudade","saxofone","sazonal","secar","secular","seda","sedento","sediado","sedoso","sedutor","segmento","segredo","segundo","seiva","seleto","selvagem","semanal","semente","senador","senhor","sensual","sentado","separado","sereia","seringa","serra","servo","setembro","setor","sigilo","silhueta","silicone","simetria","simpatia","simular","sinal","sincero","singular","sinopse","sintonia","sirene","siri","situado","soberano","sobra","socorro","sogro","soja","solda","soletrar","solteiro","sombrio","sonata","sondar","sonegar","sonhador","sono","soprano","soquete","sorrir","sorteio","sossego","sotaque","soterrar","sovado","sozinho","suavizar","subida","submerso","subsolo","subtrair","sucata","sucesso","suco","sudeste","sufixo","sugador","sugerir","sujeito","sulfato","sumir","suor","superior","suplicar","suposto","suprimir","surdina","surfista","surpresa","surreal","surtir","suspiro","sustento","tabela","tablete","tabuada","tacho","tagarela","talher","talo","talvez","tamanho","tamborim","tampa","tangente","tanto","tapar","tapioca","tardio","tarefa","tarja","tarraxa","tatuagem","taurino","taxativo","taxista","teatral","tecer","tecido","teclado","tedioso","teia","teimar","telefone","telhado","tempero","tenente","tensor","tentar","termal","terno","terreno","tese","tesoura","testado","teto","textura","texugo","tiara","tigela","tijolo","timbrar","timidez","tingido","tinteiro","tiragem","titular","toalha","tocha","tolerar","tolice","tomada","tomilho","tonel","tontura","topete","tora","torcido","torneio","torque","torrada","torto","tostar","touca","toupeira","toxina","trabalho","tracejar","tradutor","trafegar","trajeto","trama","trancar","trapo","traseiro","tratador","travar","treino","tremer","trepidar","trevo","triagem","tribo","triciclo","tridente","trilogia","trindade","triplo","triturar","triunfal","trocar","trombeta","trova","trunfo","truque","tubular","tucano","tudo","tulipa","tupi","turbo","turma","turquesa","tutelar","tutorial","uivar","umbigo","unha","unidade","uniforme","urologia","urso","urtiga","urubu","usado","usina","usufruir","vacina","vadiar","vagaroso","vaidoso","vala","valente","validade","valores","vantagem","vaqueiro","varanda","vareta","varrer","vascular","vasilha","vassoura","vazar","vazio","veado","vedar","vegetar","veicular","veleiro","velhice","veludo","vencedor","vendaval","venerar","ventre","verbal","verdade","vereador","vergonha","vermelho","verniz","versar","vertente","vespa","vestido","vetorial","viaduto","viagem","viajar","viatura","vibrador","videira","vidraria","viela","viga","vigente","vigiar","vigorar","vilarejo","vinco","vinheta","vinil","violeta","virada","virtude","visitar","visto","vitral","viveiro","vizinho","voador","voar","vogal","volante","voleibol","voltagem","volumoso","vontade","vulto","vuvuzela","xadrez","xarope","xeque","xeretar","xerife","xingar","zangado","zarpar","zebu","zelador","zombar","zoologia","zumbido"]}}},{package:"eth-keyring-controller>@metamask/bip39",file:"node_modules/@metamask/bip39/src/wordlists/portuguese.json"}],[973,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){t.exports=["ábaco","abdomen","abeja","abierto","abogado","abono","aborto","abrazo","abrir","abuelo","abuso","acabar","academia","acceso","acción","aceite","acelga","acento","aceptar","ácido","aclarar","acné","acoger","acoso","activo","acto","actriz","actuar","acudir","acuerdo","acusar","adicto","admitir","adoptar","adorno","aduana","adulto","aéreo","afectar","afición","afinar","afirmar","ágil","agitar","agonía","agosto","agotar","agregar","agrio","agua","agudo","águila","aguja","ahogo","ahorro","aire","aislar","ajedrez","ajeno","ajuste","alacrán","alambre","alarma","alba","álbum","alcalde","aldea","alegre","alejar","alerta","aleta","alfiler","alga","algodón","aliado","aliento","alivio","alma","almeja","almíbar","altar","alteza","altivo","alto","altura","alumno","alzar","amable","amante","amapola","amargo","amasar","ámbar","ámbito","ameno","amigo","amistad","amor","amparo","amplio","ancho","anciano","ancla","andar","andén","anemia","ángulo","anillo","ánimo","anís","anotar","antena","antiguo","antojo","anual","anular","anuncio","añadir","añejo","año","apagar","aparato","apetito","apio","aplicar","apodo","aporte","apoyo","aprender","aprobar","apuesta","apuro","arado","araña","arar","árbitro","árbol","arbusto","archivo","arco","arder","ardilla","arduo","área","árido","aries","armonía","arnés","aroma","arpa","arpón","arreglo","arroz","arruga","arte","artista","asa","asado","asalto","ascenso","asegurar","aseo","asesor","asiento","asilo","asistir","asno","asombro","áspero","astilla","astro","astuto","asumir","asunto","atajo","ataque","atar","atento","ateo","ático","atleta","átomo","atraer","atroz","atún","audaz","audio","auge","aula","aumento","ausente","autor","aval","avance","avaro","ave","avellana","avena","avestruz","avión","aviso","ayer","ayuda","ayuno","azafrán","azar","azote","azúcar","azufre","azul","baba","babor","bache","bahía","baile","bajar","balanza","balcón","balde","bambú","banco","banda","baño","barba","barco","barniz","barro","báscula","bastón","basura","batalla","batería","batir","batuta","baúl","bazar","bebé","bebida","bello","besar","beso","bestia","bicho","bien","bingo","blanco","bloque","blusa","boa","bobina","bobo","boca","bocina","boda","bodega","boina","bola","bolero","bolsa","bomba","bondad","bonito","bono","bonsái","borde","borrar","bosque","bote","botín","bóveda","bozal","bravo","brazo","brecha","breve","brillo","brinco","brisa","broca","broma","bronce","brote","bruja","brusco","bruto","buceo","bucle","bueno","buey","bufanda","bufón","búho","buitre","bulto","burbuja","burla","burro","buscar","butaca","buzón","caballo","cabeza","cabina","cabra","cacao","cadáver","cadena","caer","café","caída","caimán","caja","cajón","cal","calamar","calcio","caldo","calidad","calle","calma","calor","calvo","cama","cambio","camello","camino","campo","cáncer","candil","canela","canguro","canica","canto","caña","cañón","caoba","caos","capaz","capitán","capote","captar","capucha","cara","carbón","cárcel","careta","carga","cariño","carne","carpeta","carro","carta","casa","casco","casero","caspa","castor","catorce","catre","caudal","causa","cazo","cebolla","ceder","cedro","celda","célebre","celoso","célula","cemento","ceniza","centro","cerca","cerdo","cereza","cero","cerrar","certeza","césped","cetro","chacal","chaleco","champú","chancla","chapa","charla","chico","chiste","chivo","choque","choza","chuleta","chupar","ciclón","ciego","cielo","cien","cierto","cifra","cigarro","cima","cinco","cine","cinta","ciprés","circo","ciruela","cisne","cita","ciudad","clamor","clan","claro","clase","clave","cliente","clima","clínica","cobre","cocción","cochino","cocina","coco","código","codo","cofre","coger","cohete","cojín","cojo","cola","colcha","colegio","colgar","colina","collar","colmo","columna","combate","comer","comida","cómodo","compra","conde","conejo","conga","conocer","consejo","contar","copa","copia","corazón","corbata","corcho","cordón","corona","correr","coser","cosmos","costa","cráneo","cráter","crear","crecer","creído","crema","cría","crimen","cripta","crisis","cromo","crónica","croqueta","crudo","cruz","cuadro","cuarto","cuatro","cubo","cubrir","cuchara","cuello","cuento","cuerda","cuesta","cueva","cuidar","culebra","culpa","culto","cumbre","cumplir","cuna","cuneta","cuota","cupón","cúpula","curar","curioso","curso","curva","cutis","dama","danza","dar","dardo","dátil","deber","débil","década","decir","dedo","defensa","definir","dejar","delfín","delgado","delito","demora","denso","dental","deporte","derecho","derrota","desayuno","deseo","desfile","desnudo","destino","desvío","detalle","detener","deuda","día","diablo","diadema","diamante","diana","diario","dibujo","dictar","diente","dieta","diez","difícil","digno","dilema","diluir","dinero","directo","dirigir","disco","diseño","disfraz","diva","divino","doble","doce","dolor","domingo","don","donar","dorado","dormir","dorso","dos","dosis","dragón","droga","ducha","duda","duelo","dueño","dulce","dúo","duque","durar","dureza","duro","ébano","ebrio","echar","eco","ecuador","edad","edición","edificio","editor","educar","efecto","eficaz","eje","ejemplo","elefante","elegir","elemento","elevar","elipse","élite","elixir","elogio","eludir","embudo","emitir","emoción","empate","empeño","empleo","empresa","enano","encargo","enchufe","encía","enemigo","enero","enfado","enfermo","engaño","enigma","enlace","enorme","enredo","ensayo","enseñar","entero","entrar","envase","envío","época","equipo","erizo","escala","escena","escolar","escribir","escudo","esencia","esfera","esfuerzo","espada","espejo","espía","esposa","espuma","esquí","estar","este","estilo","estufa","etapa","eterno","ética","etnia","evadir","evaluar","evento","evitar","exacto","examen","exceso","excusa","exento","exigir","exilio","existir","éxito","experto","explicar","exponer","extremo","fábrica","fábula","fachada","fácil","factor","faena","faja","falda","fallo","falso","faltar","fama","familia","famoso","faraón","farmacia","farol","farsa","fase","fatiga","fauna","favor","fax","febrero","fecha","feliz","feo","feria","feroz","fértil","fervor","festín","fiable","fianza","fiar","fibra","ficción","ficha","fideo","fiebre","fiel","fiera","fiesta","figura","fijar","fijo","fila","filete","filial","filtro","fin","finca","fingir","finito","firma","flaco","flauta","flecha","flor","flota","fluir","flujo","flúor","fobia","foca","fogata","fogón","folio","folleto","fondo","forma","forro","fortuna","forzar","fosa","foto","fracaso","frágil","franja","frase","fraude","freír","freno","fresa","frío","frito","fruta","fuego","fuente","fuerza","fuga","fumar","función","funda","furgón","furia","fusil","fútbol","futuro","gacela","gafas","gaita","gajo","gala","galería","gallo","gamba","ganar","gancho","ganga","ganso","garaje","garza","gasolina","gastar","gato","gavilán","gemelo","gemir","gen","género","genio","gente","geranio","gerente","germen","gesto","gigante","gimnasio","girar","giro","glaciar","globo","gloria","gol","golfo","goloso","golpe","goma","gordo","gorila","gorra","gota","goteo","gozar","grada","gráfico","grano","grasa","gratis","grave","grieta","grillo","gripe","gris","grito","grosor","grúa","grueso","grumo","grupo","guante","guapo","guardia","guerra","guía","guiño","guion","guiso","guitarra","gusano","gustar","haber","hábil","hablar","hacer","hacha","hada","hallar","hamaca","harina","haz","hazaña","hebilla","hebra","hecho","helado","helio","hembra","herir","hermano","héroe","hervir","hielo","hierro","hígado","higiene","hijo","himno","historia","hocico","hogar","hoguera","hoja","hombre","hongo","honor","honra","hora","hormiga","horno","hostil","hoyo","hueco","huelga","huerta","hueso","huevo","huida","huir","humano","húmedo","humilde","humo","hundir","huracán","hurto","icono","ideal","idioma","ídolo","iglesia","iglú","igual","ilegal","ilusión","imagen","imán","imitar","impar","imperio","imponer","impulso","incapaz","índice","inerte","infiel","informe","ingenio","inicio","inmenso","inmune","innato","insecto","instante","interés","íntimo","intuir","inútil","invierno","ira","iris","ironía","isla","islote","jabalí","jabón","jamón","jarabe","jardín","jarra","jaula","jazmín","jefe","jeringa","jinete","jornada","joroba","joven","joya","juerga","jueves","juez","jugador","jugo","juguete","juicio","junco","jungla","junio","juntar","júpiter","jurar","justo","juvenil","juzgar","kilo","koala","labio","lacio","lacra","lado","ladrón","lagarto","lágrima","laguna","laico","lamer","lámina","lámpara","lana","lancha","langosta","lanza","lápiz","largo","larva","lástima","lata","látex","latir","laurel","lavar","lazo","leal","lección","leche","lector","leer","legión","legumbre","lejano","lengua","lento","leña","león","leopardo","lesión","letal","letra","leve","leyenda","libertad","libro","licor","líder","lidiar","lienzo","liga","ligero","lima","límite","limón","limpio","lince","lindo","línea","lingote","lino","linterna","líquido","liso","lista","litera","litio","litro","llaga","llama","llanto","llave","llegar","llenar","llevar","llorar","llover","lluvia","lobo","loción","loco","locura","lógica","logro","lombriz","lomo","lonja","lote","lucha","lucir","lugar","lujo","luna","lunes","lupa","lustro","luto","luz","maceta","macho","madera","madre","maduro","maestro","mafia","magia","mago","maíz","maldad","maleta","malla","malo","mamá","mambo","mamut","manco","mando","manejar","manga","maniquí","manjar","mano","manso","manta","mañana","mapa","máquina","mar","marco","marea","marfil","margen","marido","mármol","marrón","martes","marzo","masa","máscara","masivo","matar","materia","matiz","matriz","máximo","mayor","mazorca","mecha","medalla","medio","médula","mejilla","mejor","melena","melón","memoria","menor","mensaje","mente","menú","mercado","merengue","mérito","mes","mesón","meta","meter","método","metro","mezcla","miedo","miel","miembro","miga","mil","milagro","militar","millón","mimo","mina","minero","mínimo","minuto","miope","mirar","misa","miseria","misil","mismo","mitad","mito","mochila","moción","moda","modelo","moho","mojar","molde","moler","molino","momento","momia","monarca","moneda","monja","monto","moño","morada","morder","moreno","morir","morro","morsa","mortal","mosca","mostrar","motivo","mover","móvil","mozo","mucho","mudar","mueble","muela","muerte","muestra","mugre","mujer","mula","muleta","multa","mundo","muñeca","mural","muro","músculo","museo","musgo","música","muslo","nácar","nación","nadar","naipe","naranja","nariz","narrar","nasal","natal","nativo","natural","náusea","naval","nave","navidad","necio","néctar","negar","negocio","negro","neón","nervio","neto","neutro","nevar","nevera","nicho","nido","niebla","nieto","niñez","niño","nítido","nivel","nobleza","noche","nómina","noria","norma","norte","nota","noticia","novato","novela","novio","nube","nuca","núcleo","nudillo","nudo","nuera","nueve","nuez","nulo","número","nutria","oasis","obeso","obispo","objeto","obra","obrero","observar","obtener","obvio","oca","ocaso","océano","ochenta","ocho","ocio","ocre","octavo","octubre","oculto","ocupar","ocurrir","odiar","odio","odisea","oeste","ofensa","oferta","oficio","ofrecer","ogro","oído","oír","ojo","ola","oleada","olfato","olivo","olla","olmo","olor","olvido","ombligo","onda","onza","opaco","opción","ópera","opinar","oponer","optar","óptica","opuesto","oración","orador","oral","órbita","orca","orden","oreja","órgano","orgía","orgullo","oriente","origen","orilla","oro","orquesta","oruga","osadía","oscuro","osezno","oso","ostra","otoño","otro","oveja","óvulo","óxido","oxígeno","oyente","ozono","pacto","padre","paella","página","pago","país","pájaro","palabra","palco","paleta","pálido","palma","paloma","palpar","pan","panal","pánico","pantera","pañuelo","papá","papel","papilla","paquete","parar","parcela","pared","parir","paro","párpado","parque","párrafo","parte","pasar","paseo","pasión","paso","pasta","pata","patio","patria","pausa","pauta","pavo","payaso","peatón","pecado","pecera","pecho","pedal","pedir","pegar","peine","pelar","peldaño","pelea","peligro","pellejo","pelo","peluca","pena","pensar","peñón","peón","peor","pepino","pequeño","pera","percha","perder","pereza","perfil","perico","perla","permiso","perro","persona","pesa","pesca","pésimo","pestaña","pétalo","petróleo","pez","pezuña","picar","pichón","pie","piedra","pierna","pieza","pijama","pilar","piloto","pimienta","pino","pintor","pinza","piña","piojo","pipa","pirata","pisar","piscina","piso","pista","pitón","pizca","placa","plan","plata","playa","plaza","pleito","pleno","plomo","pluma","plural","pobre","poco","poder","podio","poema","poesía","poeta","polen","policía","pollo","polvo","pomada","pomelo","pomo","pompa","poner","porción","portal","posada","poseer","posible","poste","potencia","potro","pozo","prado","precoz","pregunta","premio","prensa","preso","previo","primo","príncipe","prisión","privar","proa","probar","proceso","producto","proeza","profesor","programa","prole","promesa","pronto","propio","próximo","prueba","público","puchero","pudor","pueblo","puerta","puesto","pulga","pulir","pulmón","pulpo","pulso","puma","punto","puñal","puño","pupa","pupila","puré","quedar","queja","quemar","querer","queso","quieto","química","quince","quitar","rábano","rabia","rabo","ración","radical","raíz","rama","rampa","rancho","rango","rapaz","rápido","rapto","rasgo","raspa","rato","rayo","raza","razón","reacción","realidad","rebaño","rebote","recaer","receta","rechazo","recoger","recreo","recto","recurso","red","redondo","reducir","reflejo","reforma","refrán","refugio","regalo","regir","regla","regreso","rehén","reino","reír","reja","relato","relevo","relieve","relleno","reloj","remar","remedio","remo","rencor","rendir","renta","reparto","repetir","reposo","reptil","res","rescate","resina","respeto","resto","resumen","retiro","retorno","retrato","reunir","revés","revista","rey","rezar","rico","riego","rienda","riesgo","rifa","rígido","rigor","rincón","riñón","río","riqueza","risa","ritmo","rito","rizo","roble","roce","rociar","rodar","rodeo","rodilla","roer","rojizo","rojo","romero","romper","ron","ronco","ronda","ropa","ropero","rosa","rosca","rostro","rotar","rubí","rubor","rudo","rueda","rugir","ruido","ruina","ruleta","rulo","rumbo","rumor","ruptura","ruta","rutina","sábado","saber","sabio","sable","sacar","sagaz","sagrado","sala","saldo","salero","salir","salmón","salón","salsa","salto","salud","salvar","samba","sanción","sandía","sanear","sangre","sanidad","sano","santo","sapo","saque","sardina","sartén","sastre","satán","sauna","saxofón","sección","seco","secreto","secta","sed","seguir","seis","sello","selva","semana","semilla","senda","sensor","señal","señor","separar","sepia","sequía","ser","serie","sermón","servir","sesenta","sesión","seta","setenta","severo","sexo","sexto","sidra","siesta","siete","siglo","signo","sílaba","silbar","silencio","silla","símbolo","simio","sirena","sistema","sitio","situar","sobre","socio","sodio","sol","solapa","soldado","soledad","sólido","soltar","solución","sombra","sondeo","sonido","sonoro","sonrisa","sopa","soplar","soporte","sordo","sorpresa","sorteo","sostén","sótano","suave","subir","suceso","sudor","suegra","suelo","sueño","suerte","sufrir","sujeto","sultán","sumar","superar","suplir","suponer","supremo","sur","surco","sureño","surgir","susto","sutil","tabaco","tabique","tabla","tabú","taco","tacto","tajo","talar","talco","talento","talla","talón","tamaño","tambor","tango","tanque","tapa","tapete","tapia","tapón","taquilla","tarde","tarea","tarifa","tarjeta","tarot","tarro","tarta","tatuaje","tauro","taza","tazón","teatro","techo","tecla","técnica","tejado","tejer","tejido","tela","teléfono","tema","temor","templo","tenaz","tender","tener","tenis","tenso","teoría","terapia","terco","término","ternura","terror","tesis","tesoro","testigo","tetera","texto","tez","tibio","tiburón","tiempo","tienda","tierra","tieso","tigre","tijera","tilde","timbre","tímido","timo","tinta","tío","típico","tipo","tira","tirón","titán","títere","título","tiza","toalla","tobillo","tocar","tocino","todo","toga","toldo","tomar","tono","tonto","topar","tope","toque","tórax","torero","tormenta","torneo","toro","torpedo","torre","torso","tortuga","tos","tosco","toser","tóxico","trabajo","tractor","traer","tráfico","trago","traje","tramo","trance","trato","trauma","trazar","trébol","tregua","treinta","tren","trepar","tres","tribu","trigo","tripa","triste","triunfo","trofeo","trompa","tronco","tropa","trote","trozo","truco","trueno","trufa","tubería","tubo","tuerto","tumba","tumor","túnel","túnica","turbina","turismo","turno","tutor","ubicar","úlcera","umbral","unidad","unir","universo","uno","untar","uña","urbano","urbe","urgente","urna","usar","usuario","útil","utopía","uva","vaca","vacío","vacuna","vagar","vago","vaina","vajilla","vale","válido","valle","valor","válvula","vampiro","vara","variar","varón","vaso","vecino","vector","vehículo","veinte","vejez","vela","velero","veloz","vena","vencer","venda","veneno","vengar","venir","venta","venus","ver","verano","verbo","verde","vereda","verja","verso","verter","vía","viaje","vibrar","vicio","víctima","vida","vídeo","vidrio","viejo","viernes","vigor","vil","villa","vinagre","vino","viñedo","violín","viral","virgo","virtud","visor","víspera","vista","vitamina","viudo","vivaz","vivero","vivir","vivo","volcán","volumen","volver","voraz","votar","voto","voz","vuelo","vulgar","yacer","yate","yegua","yema","yerno","yeso","yodo","yoga","yogur","zafiro","zanja","zapato","zarza","zona","zorro","zumo","zurdo"]}}},{package:"eth-keyring-controller>@metamask/bip39",file:"node_modules/@metamask/bip39/src/wordlists/spanish.json"}],[974,{buffer:1731},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){(function(e){(function(){Object.defineProperty(r,"__esModule",{value:!0}),r.generateSalt=r.serializeBufferForStorage=r.serializeBufferFromStorage=r.keyFromPassword=r.exportKey=r.importKey=r.decryptWithKey=r.decryptWithDetail=r.decrypt=r.encryptWithKey=r.encryptWithDetail=r.encrypt=void 0;const t="AES-GCM",a="utf-8";async function o(e,t,r,a=u()){const o=r||await c(e,a),n=await i(o,t);return n.salt=a,JSON.stringify(n)}async function i(r,o){const i=JSON.stringify(o),n=e.from(i,a),s=global.crypto.getRandomValues(new Uint8Array(16)),l=await global.crypto.subtle.encrypt({name:t,iv:s},r,n),c=new Uint8Array(l),u=e.from(s).toString("base64");return{data:e.from(c).toString("base64"),iv:u}}async function n(e,t,r){const a=JSON.parse(t),{salt:o}=a,i=r||await c(e,o);return await s(i,a)}async function s(r,o){const i=e.from(o.data,"base64"),n=e.from(o.iv,"base64");let s;try{const o=await crypto.subtle.decrypt({name:t,iv:n},r,i),l=new Uint8Array(o),c=e.from(l).toString(a);s=JSON.parse(c)}catch(e){throw new Error("Incorrect password")}return s}async function l(e){const t=await window.crypto.subtle.exportKey("jwk",e);return JSON.stringify(t)}async function c(r,o,i=!1){const n=e.from(r,a),s=e.from(o,"base64"),l=await global.crypto.subtle.importKey("raw",n,{name:"PBKDF2"},!1,["deriveBits","deriveKey"]);return await global.crypto.subtle.deriveKey({name:"PBKDF2",salt:s,iterations:1e4,hash:"SHA-256"},l,{name:t,length:256},i,["encrypt","decrypt"])}function u(e=32){const t=new Uint8Array(e);global.crypto.getRandomValues(t);return btoa(String.fromCharCode.apply(null,t))}r.encrypt=o,r.encryptWithDetail=async function(e,t,r=u()){const a=await c(e,r,!0),i=await l(a);return{vault:await o(e,t,a,r),exportedKeyString:i}},r.encryptWithKey=i,r.decrypt=n,r.decryptWithDetail=async function(e,t){const r=JSON.parse(t),{salt:a}=r,o=await c(e,a,!0);return{exportedKeyString:await l(o),vault:await n(e,t,o),salt:a}},r.decryptWithKey=s,r.importKey=async function(e){return await window.crypto.subtle.importKey("jwk",JSON.parse(e),t,!0,["encrypt","decrypt"])},r.exportKey=l,r.keyFromPassword=c,r.serializeBufferFromStorage=function(e){const t="0x"===e.slice(0,2)?e.slice(2):e,r=new Uint8Array(t.length/2);for(let e=0;e<t.length;e+=2){const a=t.substr(e,2);r[e/2]=parseInt(a,16)}return r},r.serializeBufferForStorage=function(e){let t="0x";return e.forEach((e=>{t+=function(e){let t=e.toString(16);for(;t.length<2;)t=`0${t}`;return t}(e)})),t},r.generateSalt=u}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@metamask/rpc-methods>@metamask/browser-passworder",file:"node_modules/@metamask/browser-passworder/dist/index.js"}],[98,{lodash:2735},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var a=e("lodash");var o={version:12,migrate(e){const t=(0,a.cloneDeep)(e);t.meta.version=12;try{const e=function(e){const t=e;return t.NoticeController.noticesList.forEach((e=>{e.read&&(e.body="")})),t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #12${e.stack}`)}return Promise.resolve(t)}};r.default=o}}},{package:"$root$",file:"app/scripts/migrations/012.js"}],[981,{"@metamask/bip39":963,"@metamask/eth-sig-util":1028,buffer:1731,"eth-simple-keyring":1986,"ethereumjs-wallet":983},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){(function(r){(function(){const{hdkey:a}=e("ethereumjs-wallet"),o=e("eth-simple-keyring"),i=e("@metamask/bip39"),{normalize:n}=e("@metamask/eth-sig-util"),s="HD Key Tree";class l extends o{constructor(e={}){super(),this.type=s,this.deserialize(e)}generateRandomMnemonic(){this._initFromMnemonic(i.generateMnemonic())}serialize(){const e="string"==typeof this.mnemonic?r.from(this.mnemonic,"utf8"):this.mnemonic;return Promise.resolve({mnemonic:Array.from(e.values()),numberOfAccounts:this.wallets.length,hdPath:this.hdPath})}deserialize(e={}){if(e.numberOfAccounts&&!e.mnemonic)throw new Error("Eth-Hd-Keyring: Deserialize method cannot be called with an opts value for numberOfAccounts and no menmonic");if(this.root)throw new Error("Eth-Hd-Keyring: Secret recovery phrase already provided");return this.opts=e,this.wallets=[],this.mnemonic=null,this.root=null,this.hdPath=e.hdPath||"m/44'/60'/0'/0",e.mnemonic&&this._initFromMnemonic(e.mnemonic),e.numberOfAccounts?this.addAccounts(e.numberOfAccounts):Promise.resolve([])}addAccounts(e=1){if(!this.root)throw new Error("Eth-Hd-Keyring: No secret recovery phrase provided");const t=this.wallets.length,r=[];for(let a=t;a<e+t;a++){const e=this.root.deriveChild(a).getWallet();r.push(e),this.wallets.push(e)}const a=r.map((e=>n(e.getAddress().toString("hex"))));return Promise.resolve(a)}getAccounts(){return Promise.resolve(this.wallets.map((e=>n(e.getAddress().toString("hex")))))}_initFromMnemonic(e){if(this.root)throw new Error("Eth-Hd-Keyring: Secret recovery phrase already provided");if(!i.validateMnemonic(e))throw new Error("Eth-Hd-Keyring: Invalid secret recovery phrase provided");"string"==typeof e?this.mnemonic=r.from(e,"utf8"):Array.isArray(e)?this.mnemonic=r.from(e):this.mnemonic=e;const t=i.mnemonicToSeedSync(this.mnemonic);this.hdWallet=a.fromMasterSeed(t),this.root=this.hdWallet.derivePath(this.hdPath)}}l.type=s,t.exports=l}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"eth-keyring-controller>@metamask/eth-hd-keyring",file:"node_modules/@metamask/eth-hd-keyring/index.js"}],[982,{"./index":983,"ethereum-cryptography/hdkey":2006},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0});var a=e("./index"),o=e("ethereum-cryptography/hdkey"),i=function(){function e(e){this._hdkey=e}return e.fromMasterSeed=function(t){return new e(o.HDKey.fromMasterSeed(t))},e.fromExtendedKey=function(t){return new e(o.HDKey.fromExtendedKey(t))},e.prototype.privateExtendedKey=function(){if(!this._hdkey.privateExtendedKey)throw new Error("This is a public key only wallet");return this._hdkey.privateExtendedKey},e.prototype.publicExtendedKey=function(){return this._hdkey.publicExtendedKey},e.prototype.derivePath=function(t){return new e(this._hdkey.derive(t))},e.prototype.deriveChild=function(t){return new e(this._hdkey.deriveChild(t))},e.prototype.getWallet=function(){return this._hdkey._privateKey?a.default.fromPrivateKey(this._hdkey._privateKey):a.default.fromPublicKey(this._hdkey._publicKey,!0)},e}();r.default=i}}},{package:"eth-keyring-controller>@metamask/eth-hd-keyring>ethereumjs-wallet",file:"node_modules/@metamask/eth-hd-keyring/node_modules/ethereumjs-wallet/dist/hdkey.js"}],[983,{"./hdkey":982,"./thirdparty":984,bs58check:1740,buffer:1731,crypto:1853,"ethereumjs-util":2036,randombytes:2880,"scrypt-js":3076,"uuid/v4":987},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){(function(t){(function(){var a=this&&this.__assign||function(){return a=Object.assign||function(e){for(var t,r=1,a=arguments.length;r<a;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},a.apply(this,arguments)},o=this&&this.__awaiter||function(e,t,r,a){return new(r||(r=Promise))((function(o,i){function n(e){try{l(a.next(e))}catch(e){i(e)}}function s(e){try{l(a.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?o(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(n,s)}l((a=a.apply(e,t||[])).next())}))},i=this&&this.__generator||function(e,t){var r,a,o,i,n={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(r)throw new TypeError("Generator is already executing.");for(;n;)try{if(r=1,a&&(o=2&i[0]?a.return:i[0]?a.throw||((o=a.return)&&o.call(a),0):a.next)&&!(o=o.call(a,i[1])).done)return o;switch(a=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return n.label++,{value:i[1],done:!1};case 5:n.label++,a=i[1],i=[0];continue;case 7:i=n.ops.pop(),n.trys.pop();continue;default:if(!(o=n.trys,(o=o.length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){n=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){n.label=i[1];break}if(6===i[0]&&n.label<o[1]){n.label=o[1],o=i;break}if(o&&n.label<o[2]){n.label=o[2],n.ops.push(i);break}o[2]&&n.ops.pop(),n.trys.pop();continue}i=t.call(e,n)}catch(e){i=[6,e],a=0}finally{r=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}};Object.defineProperty(r,"__esModule",{value:!0});var n=e("crypto"),s=e("ethereumjs-util"),l=e("scrypt-js"),c=e("./hdkey");Object.defineProperty(r,"hdkey",{enumerable:!0,get:function(){return c.default}});var u=e("./thirdparty");Object.defineProperty(r,"thirdparty",{enumerable:!0,get:function(){return u.default}});var d=e("bs58check"),p=e("randombytes"),m=e("uuid/v4");function h(e,t,r){if(t.toLowerCase().startsWith("0x")&&(t=t.slice(2)),!t&&!r)return t;if(r%2)throw new Error("Invalid length argument, must be an even number");if("number"==typeof r&&t.length!==r)throw new Error("Invalid "+e+", string must be "+r+" hex characters");if(!/^([0-9a-f]{2})+$/i.test(t))throw new Error("Invalid "+e+", string must be "+("number"==typeof r?r:"empty or a non-zero even number of")+" hex characters");return t}function g(e,r,a){if(!t.isBuffer(r))throw new Error("Invalid "+e+", must be a string ("+("number"==typeof a?""+2*a:"empty or a non-zero even number of")+" hex characters) or buffer"+("number"==typeof a?" ("+a+" bytes)":""));if("number"==typeof a&&r.length!==a)throw new Error("Invalid "+e+", buffer must be "+a+" bytes");return r}var f=function(){function e(e,t){if(void 0===t&&(t=undefined),this.privateKey=e,this.publicKey=t,e&&t)throw new Error("Cannot supply both a private and a public key to the constructor");if(e&&!s.isValidPrivate(e))throw new Error("Private key does not satisfy the curve requirements (ie. it is invalid)");if(t&&!s.isValidPublic(t))throw new Error("Invalid public key")}return e.generate=function(t){if(void 0===t&&(t=!1),!t)return new e(p(32));for(var r=new s.BN("088f924eeceeda7fe92e1f5b0fffffffffffffff",16);;){var a=p(32);if(new s.BN(s.privateToAddress(a)).lte(r))return new e(a)}},e.generateVanityAddress=function(t){for(t instanceof RegExp||(t=new RegExp(t));;){var r=p(32),a=s.privateToAddress(r);if(t.test(a.toString("hex")))return new e(r)}},e.fromPublicKey=function(t,r){return void 0===r&&(r=!1),r&&(t=s.importPublic(t)),new e(undefined,t)},e.fromExtendedPublicKey=function(t){if("xpub"!==t.slice(0,4))throw new Error("Not an extended public key");var r=d.decode(t).slice(45);return e.fromPublicKey(r,!0)},e.fromPrivateKey=function(t){return new e(t)},e.fromExtendedPrivateKey=function(t){if("xprv"!==t.slice(0,4))throw new Error("Not an extended private key");var r=d.decode(t);if(0!==r[45])throw new Error("Invalid extended private key");return e.fromPrivateKey(r.slice(46))},e.fromV1=function(r,a){return o(this,void 0,void 0,(function(){var o,c,u,d,p;return i(this,(function(i){switch(i.label){case 0:if("1"!==(o="object"==typeof r?r:JSON.parse(r)).Version)throw new Error("Not a V1 Wallet");if("scrypt"!==o.Crypto.KeyHeader.Kdf)throw new Error("Unsupported key derivation scheme");return c=o.Crypto.KeyHeader.KdfParams,[4,l.scrypt(t.from(a),t.from(o.Crypto.Salt,"hex"),c.N,c.R,c.P,c.DkLen)];case 1:if(u=i.sent(),d=t.from(o.Crypto.CipherText,"hex"),s.keccak256(t.concat([u.slice(16,32),d])).toString("hex")!==o.Crypto.MAC)throw new Error("Key derivation failed - possibly wrong passphrase");return p=n.createDecipheriv("aes-128-cbc",s.keccak256(u.slice(0,16)).slice(0,16),t.from(o.Crypto.IV,"hex")),[2,new e(b(p,d))]}}))}))},e.fromV3=function(r,a,c){return void 0===c&&(c=!1),o(this,void 0,void 0,(function(){var o,u,d,p,m;return i(this,(function(i){switch(i.label){case 0:if(3!==(o="object"==typeof r?r:JSON.parse(c?r.toLowerCase():r)).version)throw new Error("Not a V3 wallet");return"scrypt"!==o.crypto.kdf?[3,2]:(d=o.crypto.kdfparams,[4,l.scrypt(t.from(a),t.from(d.salt,"hex"),d.n,d.r,d.p,d.dklen)]);case 1:return u=i.sent(),[3,3];case 2:if("pbkdf2"!==o.crypto.kdf)throw new Error("Unsupported key derivation scheme");if("hmac-sha256"!==(d=o.crypto.kdfparams).prf)throw new Error("Unsupported parameters to PBKDF2");u=n.pbkdf2Sync(t.from(a),t.from(d.salt,"hex"),d.c,d.dklen,"sha256"),i.label=3;case 3:if(p=t.from(o.crypto.ciphertext,"hex"),s.keccak256(t.concat([t.from(u.slice(16,32)),p])).toString("hex")!==o.crypto.mac)throw new Error("Key derivation failed - possibly wrong passphrase");return m=n.createDecipheriv(o.crypto.cipher,u.slice(0,16),t.from(o.crypto.cipherparams.iv,"hex")),[2,new e(b(m,p))]}}))}))},e.fromEthSale=function(r,a){var o="object"==typeof r?r:JSON.parse(r),i=t.from(o.encseed,"hex"),l=n.pbkdf2Sync(a,a,2e3,32,"sha256").slice(0,16),c=b(n.createDecipheriv("aes-128-cbc",l,i.slice(0,16)),i.slice(16)),u=new e(s.keccak256(c));if(u.getAddress().toString("hex")!==o.ethaddr)throw new Error("Decoded key mismatch - possibly wrong passphrase");return u},Object.defineProperty(e.prototype,"pubKey",{get:function(){return v(this.publicKey)||(this.publicKey=s.privateToPublic(this.privateKey)),this.publicKey},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"privKey",{get:function(){if(!v(this.privateKey))throw new Error("This is a public key only wallet");return this.privateKey},enumerable:!1,configurable:!0}),e.prototype.getPrivateKey=function(){return this.privKey},e.prototype.getPrivateKeyString=function(){return s.bufferToHex(this.privKey)},e.prototype.getPublicKey=function(){return this.pubKey},e.prototype.getPublicKeyString=function(){return s.bufferToHex(this.getPublicKey())},e.prototype.getAddress=function(){return s.publicToAddress(this.pubKey)},e.prototype.getAddressString=function(){return s.bufferToHex(this.getAddress())},e.prototype.getChecksumAddressString=function(){return s.toChecksumAddress(this.getAddressString())},e.prototype.toV3=function(e,r){return o(this,void 0,void 0,(function(){var o,c,u,d,f,k;return i(this,(function(i){switch(i.label){case 0:if(!v(this.privateKey))throw new Error("This is a public key only wallet");switch(y=r,w={cipher:"aes-128-ctr",kdf:"scrypt",salt:p(32),iv:p(16),uuid:p(16),dklen:32,c:262144,n:262144,r:8,p:1},o=y?("string"==typeof y.salt&&(y.salt=t.from(h("salt",y.salt),"hex")),"string"==typeof y.iv&&(y.iv=t.from(h("iv",y.iv,32),"hex")),"string"==typeof y.uuid&&(y.uuid=t.from(h("uuid",y.uuid,32),"hex")),y.salt&&g("salt",y.salt),y.iv&&g("iv",y.iv,16),y.uuid&&g("uuid",y.uuid,16),a(a({},w),y)):w,o.kdf){case"pbkdf2":return[3,1];case"scrypt":return[3,2]}return[3,4];case 1:return c=function(e){return{dklen:e.dklen,salt:e.salt,c:e.c,prf:"hmac-sha256"}}(o),u=n.pbkdf2Sync(t.from(e),c.salt,c.c,c.dklen,"sha256"),[3,5];case 2:return c=function(e){return{dklen:e.dklen,salt:e.salt,n:e.n,r:e.r,p:e.p}}(o),[4,l.scrypt(t.from(e),c.salt,c.n,c.r,c.p,c.dklen)];case 3:return u=i.sent(),[3,5];case 4:throw new Error("Unsupported kdf");case 5:if(!(d=n.createCipheriv(o.cipher,u.slice(0,16),o.iv)))throw new Error("Unsupported cipher");return f=b(d,this.privKey),k=s.keccak256(t.concat([t.from(u.slice(16,32)),t.from(f)])),[2,{version:3,id:m({random:o.uuid}),address:this.getAddress().toString("hex"),crypto:{ciphertext:f.toString("hex"),cipherparams:{iv:o.iv.toString("hex")},cipher:o.cipher,kdf:o.kdf,kdfparams:a(a({},c),{salt:c.salt.toString("hex")}),mac:k.toString("hex")}}]}var y,w}))}))},e.prototype.getV3Filename=function(e){return["UTC--",(e?new Date(e):new Date).toJSON().replace(/:/g,"-"),"--",this.getAddress().toString("hex")].join("")},e.prototype.toV3String=function(e,t){return o(this,void 0,void 0,(function(){var r,a;return i(this,(function(o){switch(o.label){case 0:return a=(r=JSON).stringify,[4,this.toV3(e,t)];case 1:return[2,a.apply(r,[o.sent()])]}}))}))},e}();function b(e,r){return t.concat([e.update(r),e.final()])}function v(e){return e!==undefined&&null!==e}r.default=f}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"eth-keyring-controller>@metamask/eth-hd-keyring>ethereumjs-wallet",file:"node_modules/@metamask/eth-hd-keyring/node_modules/ethereumjs-wallet/dist/index.js"}],[984,{"./index":983,"aes-js":1458,buffer:1731,crypto:1853,"ethereumjs-util":2036,"scrypt-js":3076,utf8:3166},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){(function(t){(function(){var a=this&&this.__awaiter||function(e,t,r,a){return new(r||(r=Promise))((function(o,i){function n(e){try{l(a.next(e))}catch(e){i(e)}}function s(e){try{l(a.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?o(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(n,s)}l((a=a.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var r,a,o,i,n={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(r)throw new TypeError("Generator is already executing.");for(;n;)try{if(r=1,a&&(o=2&i[0]?a.return:i[0]?a.throw||((o=a.return)&&o.call(a),0):a.next)&&!(o=o.call(a,i[1])).done)return o;switch(a=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return n.label++,{value:i[1],done:!1};case 5:n.label++,a=i[1],i=[0];continue;case 7:i=n.ops.pop(),n.trys.pop();continue;default:if(!(o=n.trys,(o=o.length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){n=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){n.label=i[1];break}if(6===i[0]&&n.label<o[1]){n.label=o[1],o=i;break}if(o&&n.label<o[2]){n.label=o[2],n.ops.push(i);break}o[2]&&n.ops.pop(),n.trys.pop();continue}i=t.call(e,n)}catch(e){i=[6,e],a=0}finally{r=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}};Object.defineProperty(r,"__esModule",{value:!0}),r.fromQuorumWallet=r.fromKryptoKit=r.fromEtherCamp=r.fromEtherWallet=void 0;var i=e("crypto"),n=e("ethereumjs-util"),s=e("scrypt-js"),l=e("./index"),c=e("utf8"),u=e("aes-js");var d={count:1,keysize:16,ivsize:16,digest:"md5"};function p(e,r,a){var o=function(e){return e?{count:e.count||d.count,keysize:e.keysize||d.keysize,ivsize:e.ivsize||d.ivsize,digest:e.digest||d.digest}:d}(a);function n(t){var a=i.createHash(o.digest);a.update(t),a.update(e),a.update(r),t=a.digest();for(var n=1,s=o.count;n<s;n++)(a=i.createHash(o.digest)).update(t),t=a.digest();return t}for(var s=[],l=0;t.concat(s).length<o.keysize+o.ivsize;)s[l]=n(0===l?t.alloc(0):s[l-1]),l++;var c=t.concat(s);return{key:c.slice(0,o.keysize),iv:c.slice(o.keysize,o.keysize+o.ivsize)}}function m(e,r){var a,o="object"==typeof e?e:JSON.parse(e);if(o.locked){if("string"!=typeof r)throw new Error("Password required");if(r.length<7)throw new Error("Password must be at least 7 characters");var n=function(e){var r=t.from(e,"base64");return"Salted__"===r.slice(0,8).toString()?{salt:r.slice(8,16),ciphertext:r.slice(16)}:{ciphertext:r}}(o.encrypted?o.private.slice(0,128):o.private);if(!n.salt)throw new Error("Unsupported EtherWallet key format");var s=p(t.from(r),n.salt,{keysize:32,ivsize:16});a=function(e,r){return t.concat([e.update(r),e.final()])}(i.createDecipheriv("aes-256-cbc",s.key,s.iv),t.from(n.ciphertext)),a=t.from(c.decode(a.toString()),"hex")}else{if(64!==o.private.length)throw new Error("Invalid private key length");a=t.from(o.private,"hex")}var u=new l.default(a);if(u.getAddressString()!==o.address)throw new Error("Invalid private key or address");return u}function h(e){return new l.default(n.keccak256(t.from(e)))}function g(e,r){return a(this,void 0,void 0,(function(){var a,i,c,d,p,m,h;return o(this,(function(o){switch(o.label){case 0:return"#"===e[0]&&(e=e.slice(1)),a=e[0],e=e.slice(1),"d"!==a?[3,1]:(i=n.sha256(n.toBuffer(e)),[3,4]);case 1:if("q"!==a)return[3,3];if("string"!=typeof r)throw new Error("Password required");return c=n.sha256(t.from(e.slice(0,30))),d=e.slice(30,46),p=function(e){function r(e){try{return decodeURIComponent(e)}catch(e){return String.fromCharCode(65533)}}for(var a="",o="",i=0;i<e.length;i++)e[i]<=127?(a+=r(o)+String.fromCharCode(e[i]),o=""):o+="%"+e[i].toString(16);return t.from(a+r(o))}(c),[4,s.scrypt(t.from(r,"utf8"),p,16384,8,1,32)];case 2:if(m=o.sent(),h=new u.ModeOfOperation.ecb(m),i=t.concat([t.from(h.decrypt(c.slice(0,16))),t.from(h.decrypt(c.slice(16,32)))]),d.length>0&&d!==n.sha256(n.sha256(i)).slice(0,8).toString("hex"))throw new Error("Failed to decrypt input - possibly invalid passphrase");return[3,4];case 3:throw new Error("Unsupported or invalid entropy type");case 4:return[2,new l.default(i)]}}))}))}function f(e,t){if(e.length<10)throw new Error("Passphrase must be at least 10 characters");if(t.length<10)throw new Error("User id must be at least 10 characters");var r=e+t,a=i.pbkdf2Sync(r,r,2e3,32,"sha256");return new l.default(a)}r.fromEtherWallet=m,r.fromEtherCamp=h,r.fromKryptoKit=g,r.fromQuorumWallet=f;var b={fromEtherWallet:m,fromEtherCamp:h,fromKryptoKit:g,fromQuorumWallet:f};r.default=b}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"eth-keyring-controller>@metamask/eth-hd-keyring>ethereumjs-wallet",file:"node_modules/@metamask/eth-hd-keyring/node_modules/ethereumjs-wallet/dist/thirdparty.js"}],[985,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){for(var a=[],o=0;o<256;++o)a[o]=(o+256).toString(16).substr(1);t.exports=function(e,t){var r=t||0,o=a;return[o[e[r++]],o[e[r++]],o[e[r++]],o[e[r++]],"-",o[e[r++]],o[e[r++]],"-",o[e[r++]],o[e[r++]],"-",o[e[r++]],o[e[r++]],"-",o[e[r++]],o[e[r++]],o[e[r++]],o[e[r++]],o[e[r++]],o[e[r++]]].join("")}}}},{package:"eth-keyring-controller>@metamask/eth-hd-keyring>ethereumjs-wallet>uuid",file:"node_modules/@metamask/eth-hd-keyring/node_modules/uuid/lib/bytesToUuid.js"}],[986,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var a="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof window.msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto);if(a){var o=new Uint8Array(16);t.exports=function(){return a(o),o}}else{var i=new Array(16);t.exports=function(){for(var e,t=0;t<16;t++)0==(3&t)&&(e=4294967296*Math.random()),i[t]=e>>>((3&t)<<3)&255;return i}}}}},{package:"eth-keyring-controller>@metamask/eth-hd-keyring>ethereumjs-wallet>uuid",file:"node_modules/@metamask/eth-hd-keyring/node_modules/uuid/lib/rng-browser.js"}],[987,{"./lib/bytesToUuid":985,"./lib/rng":986},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var a=e("./lib/rng"),o=e("./lib/bytesToUuid");t.exports=function(e,t,r){var i=t&&r||0;"string"==typeof e&&(t="binary"===e?new Array(16):null,e=null);var n=(e=e||{}).random||(e.rng||a)();if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,t)for(var s=0;s<16;++s)t[i+s]=n[s];return t||o(n)}}}},{package:"eth-keyring-controller>@metamask/eth-hd-keyring>ethereumjs-wallet>uuid",file:"node_modules/@metamask/eth-hd-keyring/node_modules/uuid/v4.js"}],[988,{"./fetch-config-from-req":990,"./logging-utils":992,"eth-rpc-errors":1978,"json-rpc-engine":2505,"node-fetch":2795},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(r,"__esModule",{value:!0}),r.createInfuraMiddleware=void 0;const o=e("json-rpc-engine"),i=e("eth-rpc-errors"),n=a(e("node-fetch")),s=e("./fetch-config-from-req"),l=e("./logging-utils"),c=(0,l.createModuleLogger)(l.projectLogger,"create-infura-middleware"),u=["Gateway timeout","ETIMEDOUT","ECONNRESET","SyntaxError"];async function d(e,t,r,a,o,l){const{fetchUrl:c,fetchParams:u}=(0,s.fetchConfigFromReq)({network:e,projectId:t,extraHeaders:r,req:a,source:l}),d=await(0,n.default)(c,u),m=await d.text();if(!d.ok)switch(d.status){case 405:throw i.ethErrors.rpc.methodNotFound();case 429:throw p("Request is being rate limited.");case 503:case 504:throw function(){let e="Gateway timeout. The request took too long to process. ";return e+="This can happen when querying logs over too wide a block range.",p(e)}();default:throw p(m)}if("eth_getBlockByNumber"===a.method&&"Not Found"===m)return void(o.result=null);const h=JSON.parse(m);o.result=h.result,o.error=h.error}function p(e){return i.ethErrors.rpc.internal(e)}function m(e){const t=e.toString();return u.some((e=>t.includes(e)))}function h(e){return new Promise((t=>{setTimeout(t,e)}))}r.createInfuraMiddleware=function({network:e="mainnet",maxAttempts:t=5,source:r,projectId:a,headers:i={}}){if(!a||"string"!=typeof a)throw new Error(`Invalid value for 'projectId': "${a}"`);if(!i||"object"!=typeof i)throw new Error(`Invalid value for 'headers': "${i}"`);if(!t)throw new Error(`Invalid value for 'maxAttempts': "${t}" (${typeof t})`);return(0,o.createAsyncMiddleware)((async(o,n)=>{for(let s=1;s<=t;s++)try{c("Attempting request to Infura. network = %o, projectId = %s, headers = %o, req = %o",e,a,i,o),await d(e,a,i,o,n,r);break}catch(e){if(!m(e))throw c("Non-retriable request error encountered. req = %o, res = %o, error = %o",o,n,e),e;if(!(t-s)){c("Retriable request error encountered, but exceeded max attempts. req = %o, res = %o, error = %o",o,n,e);const t=`InfuraProvider - cannot complete request. All retries exhausted.\nOriginal Error:\n${e.toString()}\n\n`;throw new Error(t)}c("Retriable request error encountered. req = %o, res = %o, error = %o",o,n,e),c("Waiting 1 second to try again..."),await h(1e3)}}))}}}},{package:"@metamask/eth-json-rpc-infura",file:"node_modules/@metamask/eth-json-rpc-infura/dist/create-infura-middleware.js"}],[989,{"./create-infura-middleware":988,"eth-json-rpc-middleware":998,"json-rpc-engine":2505},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.createProvider=void 0;const a=e("json-rpc-engine"),o=e("eth-json-rpc-middleware"),i=e("./create-infura-middleware");r.createProvider=function(e){const t=new a.JsonRpcEngine;return t.push((0,i.createInfuraMiddleware)(e)),(0,o.providerFromEngine)(t)}}}},{package:"@metamask/eth-json-rpc-infura",file:"node_modules/@metamask/eth-json-rpc-infura/dist/create-provider.js"}],[99,{lodash:2735},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var a=e("lodash");var o={version:13,migrate(e){const t=(0,a.cloneDeep)(e);t.meta.version=13;try{const e=function(e){const t=e,{config:r}=t;r&&r.provider&&"testnet"===r.provider.type&&(t.config.provider.type="ropsten");return t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #13${e.stack}`)}return Promise.resolve(t)}};r.default=o}}},{package:"$root$",file:"app/scripts/migrations/013.js"}],[990,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){function a(e){return{id:e.id,jsonrpc:e.jsonrpc,method:e.method,params:e.params}}Object.defineProperty(r,"__esModule",{value:!0}),r.fetchConfigFromReq=void 0,r.fetchConfigFromReq=function({network:e,projectId:t,extraHeaders:r={},req:o,source:i}){const n=o.origin||"internal",s=Object.assign({},r,{Accept:"application/json","Content-Type":"application/json"});return i&&(s["Infura-Source"]=`${i}/${n}`),{fetchUrl:`https://${e}.infura.io/v3/${t}`,fetchParams:{method:"POST",headers:s,body:JSON.stringify(a(o))}}}}}},{package:"@metamask/eth-json-rpc-infura",file:"node_modules/@metamask/eth-json-rpc-infura/dist/fetch-config-from-req.js"}],[991,{"./create-infura-middleware":988,"./create-provider":989,"./fetch-config-from-req":990},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var a=this&&this.__createBinding||(Object.create?function(e,t,r,a){a===undefined&&(a=r),Object.defineProperty(e,a,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,a){a===undefined&&(a=r),e[a]=t[r]}),o=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||a(t,e,r)};Object.defineProperty(r,"__esModule",{value:!0}),o(e("./create-infura-middleware"),r),o(e("./fetch-config-from-req"),r),o(e("./create-provider"),r)}}},{package:"@metamask/eth-json-rpc-infura",file:"node_modules/@metamask/eth-json-rpc-infura/dist/index.js"}],[992,{"@metamask/utils":1145},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.createModuleLogger=r.projectLogger=void 0;const a=e("@metamask/utils");Object.defineProperty(r,"createModuleLogger",{enumerable:!0,get:function(){return a.createModuleLogger}}),r.projectLogger=(0,a.createProjectLogger)("eth-json-rpc-infura")}}},{package:"@metamask/eth-json-rpc-infura",file:"node_modules/@metamask/eth-json-rpc-infura/dist/logging-utils.js"}],[993,{"./utils/cache":1004,"json-rpc-engine":2505},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.createBlockCacheMiddleware=void 0;const a=e("json-rpc-engine"),o=e("./utils/cache"),i=[undefined,null,"<nil>"];class n{constructor(){this.cache={}}getBlockCacheForPayload(e,t){const r=Number.parseInt(t,16);let a=this.cache[r];if(!a){const e={};this.cache[r]=e,a=e}return a}async get(e,t){const r=this.getBlockCacheForPayload(e,t),a=(0,o.cacheIdentifierForPayload)(e,!0);return a?r[a]:undefined}async set(e,t,r){if(!this.canCacheResult(e,r))return;const a=(0,o.cacheIdentifierForPayload)(e,!0);if(!a)return;this.getBlockCacheForPayload(e,t)[a]=r}canCacheRequest(e){if(!(0,o.canCache)(e))return!1;return"pending"!==(0,o.blockTagForPayload)(e)}canCacheResult(e,t){return!i.includes(t)&&!(e.method&&["eth_getTransactionByHash","eth_getTransactionReceipt"].includes(e.method)&&(!t||!t.blockHash||"0x0000000000000000000000000000000000000000000000000000000000000000"===t.blockHash))}clearBefore(e){const t=Number.parseInt(e,16);Object.keys(this.cache).map(Number).filter((e=>e<t)).forEach((e=>delete this.cache[e]))}}r.createBlockCacheMiddleware=function({blockTracker:e}={}){if(!e)throw new Error("createBlockCacheMiddleware - No PollingBlockTracker specified");const t=new n,r={perma:t,block:t,fork:t};return(0,a.createAsyncMiddleware)((async(a,i,n)=>{if(a.skipCache)return n();const s=(0,o.cacheTypeForPayload)(a),l=r[s];if(!l)return n();if(!l.canCacheRequest(a))return n();let c,u=(0,o.blockTagForPayload)(a);if(u||(u="latest"),"earliest"===u)c="0x00";else if("latest"===u){const r=await e.getLatestBlock();t.clearBefore(r),c=r}else c=u;const d=await l.get(a,c);return d===undefined?(await n(),await l.set(a,c,i.result)):i.result=d,undefined}))}}}},{package:"@metamask/eth-json-rpc-infura>eth-json-rpc-middleware",file:"node_modules/@metamask/eth-json-rpc-infura/node_modules/eth-json-rpc-middleware/dist/block-cache.js"}],[994,{"./utils/cache":1004,"json-rpc-engine":2505},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.createBlockRefRewriteMiddleware=void 0;const a=e("json-rpc-engine"),o=e("./utils/cache");r.createBlockRefRewriteMiddleware=function({blockTracker:e}={}){if(!e)throw Error('BlockRefRewriteMiddleware - mandatory "blockTracker" option is missing.');return(0,a.createAsyncMiddleware)((async(t,r,a)=>{var i;const n=(0,o.blockTagParamIndex)(t);if(n===undefined)return a();let s=null===(i=t.params)||void 0===i?void 0:i[n];if(s===undefined&&(s="latest"),"latest"!==s)return a();const l=await e.getLatestBlock();return t.params&&(t.params[n]=l),a()}))}}}},{package:"@metamask/eth-json-rpc-infura>eth-json-rpc-middleware",file:"node_modules/@metamask/eth-json-rpc-infura/node_modules/eth-json-rpc-middleware/dist/block-ref-rewrite.js"}],[995,{"./utils/cache":1004,clone:1768,"json-rpc-engine":2505,pify:1012},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(r,"__esModule",{value:!0}),r.createBlockRefMiddleware=void 0;const o=e("json-rpc-engine"),i=a(e("clone")),n=a(e("pify")),s=e("./utils/cache");r.createBlockRefMiddleware=function({provider:e,blockTracker:t}={}){if(!e)throw Error('BlockRefMiddleware - mandatory "provider" option is missing.');if(!t)throw Error('BlockRefMiddleware - mandatory "blockTracker" option is missing.');return(0,o.createAsyncMiddleware)((async(r,a,o)=>{var l;const c=(0,s.blockTagParamIndex)(r);if(c===undefined)return o();let u=null===(l=r.params)||void 0===l?void 0:l[c];if(u===undefined&&(u="latest"),"latest"!==u)return o();const d=await t.getLatestBlock(),p=(0,i.default)(r);p.params&&(p.params[c]=d);const m=await(0,n.default)(e.sendAsync).call(e,p);return a.result=m.result,a.error=m.error,o()}))}}}},{package:"@metamask/eth-json-rpc-infura>eth-json-rpc-middleware",file:"node_modules/@metamask/eth-json-rpc-infura/node_modules/eth-json-rpc-middleware/dist/block-ref.js"}],[996,{"json-rpc-engine":2505},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.createBlockTrackerInspectorMiddleware=void 0;const a=e("json-rpc-engine"),o=["eth_getTransactionByHash","eth_getTransactionReceipt"];r.createBlockTrackerInspectorMiddleware=function({blockTracker:e}){return(0,a.createAsyncMiddleware)((async(t,r,a)=>{var i;if(!o.includes(t.method))return a();if(await a(),!(null===(i=r.result)||void 0===i?void 0:i.blockNumber))return undefined;if("string"==typeof r.result.blockNumber){Number.parseInt(r.result.blockNumber,16)>Number.parseInt(e.getCurrentBlock(),16)&&await e.checkForLatestBlock()}return undefined}))}}}},{package:"@metamask/eth-json-rpc-infura>eth-json-rpc-middleware",file:"node_modules/@metamask/eth-json-rpc-infura/node_modules/eth-json-rpc-middleware/dist/block-tracker-inspector.js"}],[997,{btoa:1730,"eth-rpc-errors":1978,"json-rpc-engine":2505,"node-fetch":1730},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.createFetchConfigFromReq=r.createFetchMiddleware=void 0;const a=e("json-rpc-engine"),o=e("eth-rpc-errors"),i=global.fetch||e("node-fetch"),n=global.btoa||e("btoa"),s=["Gateway timeout","ETIMEDOUT","failed to parse response body","Failed to fetch"];function l(e){switch(e.status){case 405:throw o.ethErrors.rpc.methodNotFound();case 418:throw o.ethErrors.rpc.internal({message:"Request is being rate limited."});case 503:case 504:throw function(){let e="Gateway timeout. The request took too long to process. ";return e+="This can happen when querying logs over too wide a block range.",o.ethErrors.rpc.internal({message:e})}()}}function c(e,t){if(200!==e.status)throw o.ethErrors.rpc.internal({message:`Non-200 status code: '${e.status}'`,data:t});if(t.error)throw o.ethErrors.rpc.internal({data:t.error});return t.result}function u({req:e,rpcUrl:t,originHttpHeaderKey:r}){const a=new URL(t),o=function(e){let t="";t+=e.protocol,t+=`//${e.hostname}`,e.port&&(t+=`:${e.port}`);return t+=`${e.pathname}`,t+=`${e.search}`,t}(a),i={id:e.id,jsonrpc:e.jsonrpc,method:e.method,params:e.params},s=e.origin,l={method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(i)};if(a.username&&a.password){const e=`${a.username}:${a.password}`,t=n(e);l.headers.Authorization=`Basic ${t}`}return r&&s&&(l.headers[r]=s),{fetchUrl:o,fetchParams:l}}function d(e){return new Promise((t=>setTimeout(t,e)))}r.createFetchMiddleware=function({rpcUrl:e,originHttpHeaderKey:t}){return(0,a.createAsyncMiddleware)((async(r,a,o)=>{const{fetchUrl:n,fetchParams:p}=u({req:r,rpcUrl:e,originHttpHeaderKey:t});for(let e=0;e<5;e++){try{const e=await i(n,p);l(e);const t=await e.text();let r;try{r=JSON.parse(t)}catch(e){throw new Error(`FetchMiddleware - failed to parse response body: "${t}"`)}const o=c(e,r);return void(a.result=o)}catch(e){const t=e.toString();if(!s.some((e=>t.includes(e))))throw e}await d(1e3)}}))},r.createFetchConfigFromReq=u}}},{package:"@metamask/eth-json-rpc-infura>eth-json-rpc-middleware",file:"node_modules/@metamask/eth-json-rpc-infura/node_modules/eth-json-rpc-middleware/dist/fetch.js"}],[998,{"./block-cache":993,"./block-ref":995,"./block-ref-rewrite":994,"./block-tracker-inspector":996,"./fetch":997,"./inflight-cache":999,"./providerAsMiddleware":1e3,"./providerFromEngine":1001,"./providerFromMiddleware":1002,"./retryOnEmpty":1003,"./wallet":1005},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var a=this&&this.__createBinding||(Object.create?function(e,t,r,a){a===undefined&&(a=r),Object.defineProperty(e,a,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,a){a===undefined&&(a=r),e[a]=t[r]}),o=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||a(t,e,r)};Object.defineProperty(r,"__esModule",{value:!0}),o(e("./block-cache"),r),o(e("./block-ref-rewrite"),r),o(e("./block-ref"),r),o(e("./block-tracker-inspector"),r),o(e("./fetch"),r),o(e("./inflight-cache"),r),o(e("./providerAsMiddleware"),r),o(e("./providerFromEngine"),r),o(e("./providerFromMiddleware"),r),o(e("./retryOnEmpty"),r),o(e("./wallet"),r)}}},{package:"@metamask/eth-json-rpc-infura>eth-json-rpc-middleware",file:"node_modules/@metamask/eth-json-rpc-infura/node_modules/eth-json-rpc-middleware/dist/index.js"}],[999,{"./utils/cache":1004,clone:1768,"json-rpc-engine":2505},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(r,"__esModule",{value:!0}),r.createInflightCacheMiddleware=void 0;const o=a(e("clone")),i=e("json-rpc-engine"),n=e("./utils/cache");r.createInflightCacheMiddleware=function(){const e={};return(0,i.createAsyncMiddleware)((async(t,r,a)=>{if(t.skipCache)return a();const i=(0,n.cacheIdentifierForPayload)(t);if(!i)return a();let s=e[i];return s?(await function(e,t){const{resolve:r,promise:a}=function(){let e;const t=new Promise((t=>{e=t}));return{resolve:e,promise:t}}();return t.push((t=>{e.result=(0,o.default)(t.result),e.error=(0,o.default)(t.error),r()})),a}(r,s),undefined):(s=[],e[i]=s,await a(),delete e[i],function(e,t){setTimeout((()=>{t.forEach((t=>{try{t(e)}catch(e){console.error(e)}}))}))}(r,s),undefined)}))}}}},{package:"@metamask/eth-json-rpc-infura>eth-json-rpc-middleware",file:"node_modules/@metamask/eth-json-rpc-infura/node_modules/eth-json-rpc-middleware/dist/inflight-cache.js"}],[4,{"../../shared/constants/app":3218,"../../shared/constants/metametrics":3223,"../../shared/constants/time":3229,"../../shared/modules/browser-runtime.utils":3241,"../../shared/modules/mv3.utils":3248,"../../shared/modules/object.utils":3250,"./first-time-state":37,"./lib/createStreamSink":49,"./lib/ens-ipfs/setup":56,"./lib/get-first-preferred-lang-code":58,"./lib/getObjStructure":59,"./lib/local-store":60,"./lib/migrator":64,"./lib/network-store":65,"./lib/notification-manager":66,"./lib/setupSentry":83,"./lib/util":86,"./metamask-controller":87,"./migrations":165,"./platforms/extension":166,"@metamask/obs-store":1112,"debounce-stream":1859,"end-of-stream":1903,"eth-rpc-errors":1978,"extension-port-stream":2084,loglevel:2750,pump:2848,"webextension-polyfill":3202},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var a=x(e("end-of-stream")),o=x(e("pump")),i=x(e("debounce-stream")),n=x(e("loglevel")),s=x(e("webextension-polyfill")),l=e("@metamask/obs-store"),c=x(e("extension-port-stream")),u=e("eth-rpc-errors"),d=e("../../shared/constants/app"),p=e("../../shared/constants/time"),m=e("../../shared/constants/metametrics"),h=e("../../shared/modules/browser-runtime.utils"),g=e("../../shared/modules/mv3.utils"),f=e("../../shared/modules/object.utils"),b=x(e("./migrations")),v=x(e("./lib/migrator")),k=x(e("./platforms/extension")),y=x(e("./lib/local-store")),w=(x(e("./lib/network-store")),e("./lib/setupSentry")),C=x(e("./lib/createStreamSink")),j=_(e("./lib/notification-manager")),T=_(e("./metamask-controller")),M=x(e("./first-time-state")),E=x(e("./lib/get-first-preferred-lang-code")),z=x(e("./lib/getObjStructure")),S=x(e("./lib/ens-ipfs/setup")),A=e("./lib/util");function P(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,r=new WeakMap;return(P=function(e){return e?r:t})(e)}function _(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var r=P(t);if(r&&r.has(e))return r.get(e);var a={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if("default"!==i&&Object.prototype.hasOwnProperty.call(e,i)){var n=o?Object.getOwnPropertyDescriptor(e,i):null;n&&(n.get||n.set)?Object.defineProperty(a,i,n):a[i]=e[i]}return a.default=e,r&&r.set(e,a),a}function x(e){return e&&e.__esModule?e:{default:e}}const{sentry:N}=global,O={...M.default},I={[d.ENVIRONMENT_TYPE_POPUP]:!0,[d.ENVIRONMENT_TYPE_NOTIFICATION]:!0,[d.ENVIRONMENT_TYPE_FULLSCREEN]:!0},R=["trezor-connect"];n.default.setDefaultLevel("info");const q=new k.default,L=new j.default;global.METAMASK_NOTIFIER=L;let U=!1,D=!1,K=!1;const B={},F={};let $;const V=new y.default;let H;const G=new URL("https://metamask.github.io/phishing-warning/v1.2.1/"),W="ACK_KEEP_ALIVE_MESSAGE",Y="WORKER_KEEP_ALIVE_MESSAGE",{promise:J,resolve:Q,reject:Z}=(0,A.deferredPromise)();let X,ee;s.default.runtime.onConnect.addListener((async(...e)=>{await J,X(...e)})),s.default.runtime.onConnectExternal.addListener((async(...e)=>{await J,ee(...e)})),async function(){try{const e=await async function(){const e=new v.default({migrations:b.default});e.on("error",console.warn),H=await V.get()||e.generateInitialState(O),H&&!H.data&&(H=e.generateInitialState(O),N.captureMessage("MetaMask - Empty vault found - unable to recover"));if(e.on("error",(e=>{const t=(0,z.default)(H);N.captureException(e,{extra:{vaultStructure:t}})})),H=await e.migrateData(H),!H)throw new Error("MetaMask - migrator returned undefined");return V.setMetadata(H.meta),V.set(H.data),H.data}(),t=await(0,E.default)();!function(e,t){$=new T.default({infuraProjectId:"b6bf7d3508c941499b10025c0776eaf8",showUserConfirmation:re,openPopup:ae,initState:e,initLangCode:t,platform:q,notificationManager:L,browser:s.default,getRequestAccountTabIds:()=>F,getOpenMetamaskTabsIds:()=>B,localStore:V}),(0,S.default)({getCurrentChainId:$.networkController.getCurrentChainId.bind($.networkController),getIpfsGateway:$.preferencesController.getIpfsGateway.bind($.preferencesController),provider:$.provider}),(0,o.default)((0,l.storeAsStream)($.store),(0,i.default)(1e3),(0,C.default)((e=>V.set(e))),(e=>{n.default.error("MetaMask - Persistence pipeline failed",e)})),r=$,global.stateHooks.getSentryState=function(){const e=r.getState(),t=(0,f.maskObject)({metamask:e},w.SENTRY_STATE);return{browser:window.navigator.userAgent,store:t,version:q.getVersion()}};var r;const p=()=>U||Boolean(Object.keys(B).length)||D,h=(e,t)=>{if(!1===e)$.onClientClosed();else{if(t===d.ENVIRONMENT_TYPE_FULLSCREEN&&Boolean(Object.keys(B).length))return;$.onEnvironmentTypeClosed(t)}};function b(){let e="";const t=v();t&&(e=String(t)),g.isManifestV3?(s.default.action.setBadgeText({text:e}),s.default.action.setBadgeBackgroundColor({color:"#037DD6"})):(s.default.browserAction.setBadgeText({text:e}),s.default.browserAction.setBadgeBackgroundColor({color:"#037DD6"}))}function v(){const e=$.txController.getUnapprovedTxCount(),{unapprovedMsgCount:t}=$.messageManager,{unapprovedPersonalMsgCount:r}=$.personalMessageManager,{unapprovedDecryptMsgCount:a}=$.decryptMessageManager,{unapprovedEncryptionPublicKeyMsgCount:o}=$.encryptionPublicKeyManager,{unapprovedTypedMessagesCount:i}=$.typedMessageManager;return e+t+r+a+o+i+$.approvalController.getTotalApprovalCount()+$.appStateController.waitingForUnlock.length}function k(){Object.keys($.txController.txStateManager.getUnapprovedTxList()).forEach((e=>$.txController.txStateManager.setTxStatusRejected(e))),$.messageManager.messages.filter((e=>"unapproved"===e.status)).forEach((e=>$.messageManager.rejectMsg(e.id,m.REJECT_NOTFICIATION_CLOSE_SIG))),$.personalMessageManager.messages.filter((e=>"unapproved"===e.status)).forEach((e=>$.personalMessageManager.rejectMsg(e.id,m.REJECT_NOTFICIATION_CLOSE_SIG))),$.typedMessageManager.messages.filter((e=>"unapproved"===e.status)).forEach((e=>$.typedMessageManager.rejectMsg(e.id,m.REJECT_NOTFICIATION_CLOSE_SIG))),$.decryptMessageManager.messages.filter((e=>"unapproved"===e.status)).forEach((e=>$.decryptMessageManager.rejectMsg(e.id,m.REJECT_NOTFICIATION_CLOSE))),$.encryptionPublicKeyManager.messages.filter((e=>"unapproved"===e.status)).forEach((e=>$.encryptionPublicKeyManager.rejectMsg(e.id,m.REJECT_NOTFICIATION_CLOSE))),Object.values($.approvalController.state.pendingApprovals).forEach((({id:e,type:t})=>{$.approvalController.reject(e,u.ethErrors.provider.userRejectedRequest())})),b()}X=async e=>{var t;const r=e.name;if(R.includes(e.name))return;let o=!1;o=(0,A.getPlatform)()===d.PLATFORM_FIREFOX?I[r]:e.sender.origin===`chrome-extension://${s.default.runtime.id}`;const i=null!==(t=e.sender)&&void 0!==t&&t.url?new URL(e.sender.url):null;if(o){const t=new c.default(e);if($.isClientOpen=!0,$.setupTrustedCommunication(t,e.sender),g.isManifestV3&&e.onMessage.addListener((t=>{t.name===Y&&e.postMessage({name:W})})),r===d.ENVIRONMENT_TYPE_POPUP&&(U=!0,(0,a.default)(t,(()=>{U=!1;const e=p();$.isClientOpen=e,h(e,d.ENVIRONMENT_TYPE_POPUP)}))),r===d.ENVIRONMENT_TYPE_NOTIFICATION&&(D=!0,(0,a.default)(t,(()=>{D=!1;const e=p();$.isClientOpen=e,h(e,d.ENVIRONMENT_TYPE_NOTIFICATION)}))),r===d.ENVIRONMENT_TYPE_FULLSCREEN){const r=e.sender.tab.id;B[r]=!0,(0,a.default)(t,(()=>{delete B[r];const e=p();$.isClientOpen=e,h(e,d.ENVIRONMENT_TYPE_FULLSCREEN)}))}}else if(i&&i.origin===G.origin&&i.pathname===G.pathname){const t=new c.default(e);$.setupPhishingCommunication({connectionStream:t})}else{if(e.sender&&e.sender.tab&&e.sender.url){const t=e.sender.tab.id,r=new URL(e.sender.url),{origin:a}=r;e.onMessage.addListener((e=>{e.data&&"eth_requestAccounts"===e.data.method&&(F[a]=t)}))}ee(e)}},ee=e=>{const t=new c.default(e);$.setupUntrustedCommunication({connectionStream:t,sender:e.sender})},b(),$.txController.on(T.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,b),$.messageManager.on(T.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,b),$.personalMessageManager.on(T.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,b),$.decryptMessageManager.on(T.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,b),$.encryptionPublicKeyManager.on(T.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,b),$.typedMessageManager.on(T.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,b),$.appStateController.on(T.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,b),$.controllerMessenger.subscribe(T.METAMASK_CONTROLLER_EVENTS.APPROVAL_STATE_CHANGE,b),L.on(j.NOTIFICATION_MANAGER_EVENTS.POPUP_CLOSED,(({automaticallyClosed:e})=>{e?v()>0&&re():k()}))}(e,t),g.isManifestV3||await async function(){let e;try{const t=new URL("https://metamask.github.io/phishing-warning/v1.2.1/");let r,a;t.hash="#extensionStartup",e=window.document.createElement("iframe"),e.setAttribute("src",t.href),e.setAttribute("sandbox","allow-scripts allow-same-origin");const o=new Promise(((e,t)=>{r=e,a=t}));e.addEventListener("load",r),window.document.body.appendChild(e),setTimeout((()=>a(new te)),1e3),await o}catch(e){e instanceof te?console.warn("Phishing warning page timeout; page not guaraneteed to work offline."):console.error("Failed to initialize phishing warning page",e)}finally{e&&e.remove()}}(),await(async()=>{const e=await s.default.tabs.query({url:"<all_urls>",windowType:"normal"}).then((e=>((0,h.checkForLastErrorAndLog)(),e))).catch((()=>{(0,h.checkForLastErrorAndLog)()}));for(const t of e)s.default.tabs.sendMessage(t.id,{name:d.EXTENSION_MESSAGES.READY}).then((()=>{(0,h.checkForLastErrorAndLog)()})).catch((()=>{(0,h.checkForLastErrorAndLog)()}))})(),n.default.info("MetaMask initialization complete."),Q()}catch(e){Z(e)}}().catch(n.default.error);class te extends Error{constructor(){super("Timeout failed")}}async function re(){const e=await q.getActiveTabs(),t=Boolean(e.find((e=>B[e.id]))),r=e.length>0&&e[0].extData&&e[0].extData.indexOf("vivaldi_tab")>-1;if(!K&&(r||!U)&&!t){K=!0;try{await L.showPopup()}finally{K=!1}}}async function ae(){await re(),await new Promise((e=>{const t=setInterval((()=>{D||(clearInterval(t),e())}),p.SECOND)}))}const oe=()=>{if($)return $.metaMetricsController.updateTraits({[m.TRAITS.INSTALL_DATE_EXT]:(new Date).toISOString().split("T")[0]}),void $.metaMetricsController.addEventBeforeMetricsOptIn({category:m.EVENT.CATEGORIES.APP,event:m.EVENT_NAMES.APP_INSTALLED,properties:{}});setTimeout((()=>{oe()}),1e3)};s.default.runtime.onInstalled.addListener((({reason:e})=>{"install"===e&&(oe(),q.openExtensionInBrowser())}))}}},{package:"$root$",file:"app/scripts/background.js"}]],[4],{});