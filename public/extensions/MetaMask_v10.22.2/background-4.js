LavaPack.loadBundle([[88,{"../../shared/constants/app":3203,"../../shared/constants/hardware-wallets":3206,"../../shared/constants/metametrics":3208,"../../shared/constants/network":3209,"../../shared/constants/permissions":3210,"../../shared/constants/swaps":3213,"../../shared/constants/time":3214,"../../shared/constants/tokens":3215,"../../shared/constants/transaction":3216,"../../shared/lib/metamask-controller-utils":3219,"../../shared/lib/token-util.ts":3223,"../../shared/modules/conversion.utils":3230,"../../shared/modules/hexstring-utils":3234,"../../shared/modules/mv3.utils":3235,"../../shared/modules/string-utils":3241,"../../shared/modules/transaction.utils":3243,"../../shared/notifications":3244,"./account-import-strategies":3,"./controllers/alert":7,"./controllers/app-state":8,"./controllers/backup":9,"./controllers/cached-balances":10,"./controllers/detect-tokens":11,"./controllers/ens":13,"./controllers/incoming-transactions":14,"./controllers/metametrics":15,"./controllers/network":18,"./controllers/onboarding":20,"./controllers/permissions":24,"./controllers/preferences":28,"./controllers/swaps":29,"./controllers/transactions":30,"./detect-multiple-instances":36,"./lib/ComposableObservableStore":38,"./lib/account-tracker":39,"./lib/createDupeReqFilterMiddleware":42,"./lib/createLoggerMiddleware":43,"./lib/createMetaRPCHandler":44,"./lib/createMetamaskMiddleware":45,"./lib/createOnboardingMiddleware":46,"./lib/createOriginMiddleware":47,"./lib/createRPCMethodTrackingMiddleware":48,"./lib/createTabIdMiddleware":50,"./lib/decrypt-message-manager":51,"./lib/encryption-public-key-manager":52,"./lib/message-manager":61,"./lib/personal-message-manager":67,"./lib/rpc-method-middleware":78,"./lib/security-provider-helpers":79,"./lib/seed-phrase-verifier":80,"./lib/segment":82,"./lib/stream-utils":85,"./lib/typed-message-manager":86,"./lib/util":87,"@keystonehq/metamask-airgapped-keyring":497,"@metamask/address-book-controller":951,"@metamask/announcement-controller":957,"@metamask/approval-controller":964,"@metamask/assets-controllers":982,"@metamask/base-controller":991,"@metamask/eth-keyring-controller":1033,"@metamask/eth-ledger-bridge-keyring":1034,"@metamask/gas-fee-controller":1103,"@metamask/obs-store":1139,"@metamask/obs-store/dist/asStream":1138,"@metamask/permission-controller":1146,"@metamask/phishing-controller":1155,"@metamask/smart-transactions-controller":1168,"@metamask/subject-metadata-controller":1173,"@sentry/browser":1228,_process:2826,"await-semaphore":1543,buffer:1768,"eth-json-rpc-middleware":1964,"eth-lattice-keyring":1974,"eth-query":1990,"eth-rpc-errors":1994,"eth-trezor-keyring":2002,events:1769,"json-rpc-engine":2523,"json-rpc-middleware-stream":2527,lodash:2731,loglevel:2743,nanoid:2783,pump:2841,"webextension-polyfill":3187},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){(function(t,n){(function(){Object.defineProperty(r,"__esModule",{value:!0}),r.default=r.METAMASK_CONTROLLER_EVENTS=void 0;var s=xe(e("events")),o=xe(e("pump")),i=e("@metamask/obs-store"),a=e("@metamask/obs-store/dist/asStream"),l=e("json-rpc-engine"),c=e("lodash"),d=e("json-rpc-middleware-stream"),h=e("eth-json-rpc-middleware"),u=e("@metamask/eth-keyring-controller"),p=e("eth-rpc-errors"),g=e("await-semaphore"),m=xe(e("loglevel")),f=xe(e("eth-trezor-keyring")),C=xe(e("@metamask/eth-ledger-bridge-keyring")),y=xe(e("eth-lattice-keyring")),b=e("@keystonehq/metamask-airgapped-keyring"),w=xe(e("eth-query")),k=xe(e("nanoid")),v=e("@sentry/browser"),M=e("@metamask/address-book-controller"),T=e("@metamask/approval-controller"),S=e("@metamask/base-controller"),A=e("@metamask/assets-controllers"),E=e("@metamask/phishing-controller"),P=e("@metamask/announcement-controller"),_=e("@metamask/gas-fee-controller"),N=e("@metamask/permission-controller"),O=e("@metamask/subject-metadata-controller"),I=xe(e("@metamask/smart-transactions-controller")),R=xe(e("webextension-polyfill")),j=e("../../shared/constants/transaction"),L=e("../../shared/constants/swaps"),x=e("../../shared/constants/network"),U=e("../../shared/constants/hardware-wallets"),K=e("../../shared/constants/permissions"),D=e("../../shared/notifications"),F=e("../../shared/modules/hexstring-utils"),B=e("../../shared/constants/time"),H=e("../../shared/constants/app"),q=e("../../shared/constants/metametrics"),$=e("../../shared/lib/token-util.ts"),V=e("../../shared/modules/string-utils"),W=e("../../shared/modules/transaction.utils"),G=e("../../shared/constants/tokens"),z=e("../../shared/lib/metamask-controller-utils"),Q=e("../../shared/modules/mv3.utils"),J=e("../../shared/modules/conversion.utils"),Y=e("./detect-multiple-instances"),X=xe(e("./lib/ComposableObservableStore")),Z=xe(e("./lib/account-tracker")),ee=xe(e("./lib/createDupeReqFilterMiddleware")),te=xe(e("./lib/createLoggerMiddleware")),re=e("./lib/rpc-method-middleware"),ne=xe(e("./lib/createOriginMiddleware")),se=xe(e("./lib/createTabIdMiddleware")),oe=xe(e("./lib/createOnboardingMiddleware")),ie=e("./lib/stream-utils"),ae=xe(e("./controllers/ens")),le=Le(e("./controllers/network")),ce=xe(e("./controllers/preferences")),de=xe(e("./controllers/app-state")),he=xe(e("./controllers/cached-balances")),ue=xe(e("./controllers/alert")),pe=xe(e("./controllers/onboarding")),ge=xe(e("./controllers/backup")),me=xe(e("./controllers/incoming-transactions")),fe=Le(e("./lib/message-manager")),Ce=xe(e("./lib/decrypt-message-manager")),ye=xe(e("./lib/encryption-public-key-manager")),be=xe(e("./lib/personal-message-manager")),we=xe(e("./lib/typed-message-manager")),ke=xe(e("./controllers/transactions")),ve=xe(e("./controllers/detect-tokens")),Me=xe(e("./controllers/swaps")),Te=xe(e("./account-import-strategies")),Se=xe(e("./lib/seed-phrase-verifier")),Ae=xe(e("./controllers/metametrics")),Ee=e("./lib/segment"),Pe=xe(e("./lib/createMetaRPCHandler")),_e=e("./lib/util"),Ne=xe(e("./lib/createMetamaskMiddleware")),Oe=e("./controllers/permissions"),Ie=xe(e("./lib/createRPCMethodTrackingMiddleware")),Re=e("./lib/security-provider-helpers");function je(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,r=new WeakMap;return(je=function(e){return e?r:t})(e)}function Le(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var r=je(t);if(r&&r.has(e))return r.get(e);var n={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if("default"!==o&&Object.prototype.hasOwnProperty.call(e,o)){var i=s?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=e[o]}return n.default=e,r&&r.set(e,n),n}function xe(e){return e&&e.__esModule?e:{default:e}}function Ue(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(r!==undefined){var n=r.call(e,t||"default");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}r.METAMASK_CONTROLLER_EVENTS={UPDATE_BADGE:"updateBadge",APPROVAL_STATE_CHANGE:"ApprovalController:stateChange"};class Ke extends s.default{constructor(e){super(),Ue(this,"removePermissionsFor",(e=>{try{this.permissionController.revokePermissions(e)}catch(e){if(!(e instanceof N.PermissionsRequestNotFoundError))throw e}})),Ue(this,"rejectPermissionsRequest",(e=>{try{this.permissionController.rejectPermissionsRequest(e)}catch(e){if(!(e instanceof N.PermissionsRequestNotFoundError))throw e}})),Ue(this,"acceptPermissionsRequest",(e=>{try{this.permissionController.acceptPermissionsRequest(e)}catch(e){if(!(e instanceof N.PermissionsRequestNotFoundError))throw e}})),Ue(this,"resolvePendingApproval",((e,t)=>{try{this.approvalController.accept(e,t)}catch(e){if(!(e instanceof T.ApprovalRequestNotFoundError))throw e}})),Ue(this,"rejectPendingApproval",((e,t)=>{try{this.approvalController.reject(e,new p.EthereumRpcError(t.code,t.message,t.data))}catch(e){if(!(e instanceof T.ApprovalRequestNotFoundError))throw e}})),this.defaultMaxListeners=20,this.sendUpdate=(0,c.debounce)(this.privateSendUpdate.bind(this),200*B.MILLISECOND),this.opts=e,this.extension=e.browser,this.platform=e.platform,this.notificationManager=e.notificationManager;const r=e.initState||{},n=this.platform.getVersion();this.recordFirstTimeInfo(r),this.activeControllerConnections=0,this.getRequestAccountTabIds=e.getRequestAccountTabIds,this.getOpenMetamaskTabsIds=e.getOpenMetamaskTabsIds,this.controllerMessenger=new S.ControllerMessenger,this.localStoreApiWrapper=e.localStore,this.store=new X.default({state:r,controllerMessenger:this.controllerMessenger,persist:!0}),this.connections={},this.createVaultMutex=new g.Mutex,this.extension.runtime.onInstalled.addListener((e=>{"update"===e.reason&&"8.1.0"===n&&this.platform.openExtensionInBrowser()})),this.approvalController=new T.ApprovalController({messenger:this.controllerMessenger.getRestricted({name:"ApprovalController"}),showApprovalRequest:e.showUserConfirmation}),this.networkController=new le.default({state:r.NetworkController,infuraProjectId:e.infuraProjectId}),this.networkController.initializeProvider(),this.provider=this.networkController.getProviderAndBlockTracker().provider,this.blockTracker=this.networkController.getProviderAndBlockTracker().blockTracker;const s=this.controllerMessenger.getRestricted({name:"TokenListController"});this.tokenListController=new A.TokenListController({chainId:(0,J.hexToDecimal)(this.networkController.getCurrentChainId()),preventPollingOnNetworkRestart:!r.TokenListController||r.TokenListController.preventPollingOnNetworkRestart,onNetworkStateChange:e=>{this.networkController.store.subscribe((t=>{const r={...t,providerConfig:{...t.provider,chainId:(0,J.hexToDecimal)(t.provider.chainId)}};return e(r)}))},messenger:s,state:r.TokenListController}),this.preferencesController=new ce.default({initState:r.PreferencesController,initLangCode:e.initLangCode,openPopup:e.openPopup,network:this.networkController,tokenListController:this.tokenListController,provider:this.provider}),this.tokensController=new A.TokensController({onPreferencesStateChange:this.preferencesController.store.subscribe.bind(this.preferencesController.store),onNetworkStateChange:e=>this.networkController.store.subscribe((t=>{const r={...t,providerConfig:{...t.provider}};return e(r)})),config:{provider:this.provider},state:r.TokensController}),this.assetsContractController=new A.AssetsContractController({onPreferencesStateChange:e=>this.preferencesController.store.subscribe(e),onNetworkStateChange:e=>this.networkController.on(le.NETWORK_EVENTS.NETWORK_DID_CHANGE,(()=>{const t=this.networkController.store.getState(),r={...t,providerConfig:{...t.provider,chainId:(0,J.hexToDecimal)(t.provider.chainId)}};return e(r)}))},{provider:this.provider},r.AssetsContractController),this.nftController=new A.NftController({onPreferencesStateChange:this.preferencesController.store.subscribe.bind(this.preferencesController.store),onNetworkStateChange:e=>this.networkController.store.subscribe((t=>{const r={...t,providerConfig:{...t.provider,chainId:(0,J.hexToDecimal)(t.provider.chainId)}};return e(r)})),getERC721AssetName:this.assetsContractController.getERC721AssetName.bind(this.assetsContractController),getERC721AssetSymbol:this.assetsContractController.getERC721AssetSymbol.bind(this.assetsContractController),getERC721TokenURI:this.assetsContractController.getERC721TokenURI.bind(this.assetsContractController),getERC721OwnerOf:this.assetsContractController.getERC721OwnerOf.bind(this.assetsContractController),getERC1155BalanceOf:this.assetsContractController.getERC1155BalanceOf.bind(this.assetsContractController),getERC1155TokenURI:this.assetsContractController.getERC1155TokenURI.bind(this.assetsContractController),onNftAdded:({address:e,symbol:t,tokenId:r,standard:n,source:s})=>this.metaMetricsController.trackEvent({event:q.EVENT_NAMES.NFT_ADDED,category:q.EVENT.CATEGORIES.WALLET,properties:{token_contract_address:e,token_symbol:t,asset_type:j.AssetType.NFT,token_standard:n,source:s},sensitiveProperties:{tokenId:r}})},{},r.NftController),this.nftController.setApiKey(t.env.OPENSEA_KEY),this.metaMetricsController=new Ae.default({segment:Ee.segment,preferencesStore:this.preferencesController.store,onNetworkDidChange:this.networkController.on.bind(this.networkController,le.NETWORK_EVENTS.NETWORK_DID_CHANGE),getNetworkIdentifier:this.networkController.getNetworkIdentifier.bind(this.networkController),getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),version:this.platform.getVersion(),environment:"production",extension:this.extension,initState:r.MetaMetricsController,captureException:v.captureException}),this.on("update",(e=>{this.metaMetricsController.handleMetaMaskStateUpdate(e)}));const o=this.controllerMessenger.getRestricted({name:"GasFeeController"}),i=L.GAS_API_BASE_URL;this.gasFeeController=new _.GasFeeController({state:r.GasFeeController,interval:1e4,messenger:o,clientId:L.SWAPS_CLIENT_ID,getProvider:()=>this.networkController.getProviderAndBlockTracker().provider,onNetworkStateChange:this.networkController.on.bind(this.networkController,le.NETWORK_EVENTS.NETWORK_DID_CHANGE),getCurrentNetworkEIP1559Compatibility:this.networkController.getEIP1559Compatibility.bind(this.networkController),getCurrentAccountEIP1559Compatibility:this.getCurrentAccountEIP1559Compatibility.bind(this),legacyAPIEndpoint:`${i}/networks/<chain_id>/gasPrices`,EIP1559APIEndpoint:`${i}/networks/<chain_id>/suggestedGasFees`,getCurrentNetworkLegacyGasAPICompatibility:()=>this.networkController.getCurrentChainId()===x.CHAIN_IDS.MAINNET,getChainId:()=>this.networkController.getCurrentChainId()}),this.qrHardwareKeyring=new b.MetaMaskKeyring,this.appStateController=new de.default({addUnlockListener:this.on.bind(this,"unlock"),isUnlocked:this.isUnlocked.bind(this),initState:r.AppStateController,onInactiveTimeout:()=>this.setLocked(),showUnlockRequest:e.showUserConfirmation,preferencesStore:this.preferencesController.store,qrHardwareStore:this.qrHardwareKeyring.getMemStore()});const a=this.controllerMessenger.getRestricted({name:"CurrencyRateController"});this.currencyRateController=new A.CurrencyRateController({includeUsdRate:!0,messenger:a,state:{...r.CurrencyController,nativeCurrency:this.networkController.providerStore.getState().ticker}}),this.phishingController=new E.PhishingController({},r.PhishingController),this.phishingController.maybeUpdateState(),this.announcementController=new P.AnnouncementController({allAnnouncements:D.UI_NOTIFICATIONS},r.AnnouncementController),this.tokenRatesController=new A.TokenRatesController({onTokensStateChange:e=>this.tokensController.subscribe(e),onCurrencyRateStateChange:e=>this.controllerMessenger.subscribe(`${this.currencyRateController.name}:stateChange`,e),onNetworkStateChange:e=>this.networkController.store.subscribe((t=>{const r={...t,providerConfig:{...t.provider,chainId:(0,J.hexToDecimal)(t.provider.chainId)}};return e(r)}))},{disabled:!this.preferencesController.store.getState().useCurrencyRateCheck},r.TokenRatesController),this.preferencesController.store.subscribe((0,_e.previousValueComparator)(((e,t)=>{const{useCurrencyRateCheck:r}=e,{useCurrencyRateCheck:n}=t;n&&!r?(this.currencyRateController.start(),this.tokenRatesController.configure({disabled:!1},!1,!1)):!n&&r&&(this.currencyRateController.stop(),this.tokenRatesController.configure({disabled:!0},!1,!1))}),this.preferencesController.store.getState())),this.ensController=new ae.default({provider:this.provider,getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),onNetworkDidChange:this.networkController.on.bind(this.networkController,le.NETWORK_EVENTS.NETWORK_DID_CHANGE)}),this.onboardingController=new pe.default({initState:r.OnboardingController}),this.incomingTransactionsController=new me.default({blockTracker:this.blockTracker,onNetworkDidChange:this.networkController.on.bind(this.networkController,le.NETWORK_EVENTS.NETWORK_DID_CHANGE),getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),preferencesController:this.preferencesController,onboardingController:this.onboardingController,initState:r.IncomingTransactionsController}),this.accountTracker=new Z.default({provider:this.provider,blockTracker:this.blockTracker,getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),getNetworkIdentifier:this.networkController.getNetworkIdentifier.bind(this.networkController),preferencesController:this.preferencesController,onboardingController:this.onboardingController}),this.on("controllerConnectionChanged",(e=>{const{completedOnboarding:t}=this.onboardingController.store.getState();e>0&&t?this.triggerNetworkrequests():this.stopNetworkRequests()})),this.onboardingController.store.subscribe((0,_e.previousValueComparator)((async(e,t)=>{const{completedOnboarding:r}=e,{completedOnboarding:n}=t;!r&&n&&this.triggerNetworkrequests()}),this.onboardingController.store.getState())),this.cachedBalancesController=new he.default({accountTracker:this.accountTracker,getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),initState:r.CachedBalancesController}),this.tokensController.hub.on("pendingSuggestedAsset",(async()=>{await e.openPopup()}));let l=[(0,u.keyringBuilderFactory)(b.MetaMaskKeyring)];if(this.canUseHardwareWallets()){l=[f.default,C.default,y.default,b.MetaMaskKeyring].map((e=>(0,u.keyringBuilderFactory)(e)))}this.keyringController=new u.KeyringController({keyringBuilders:l,initState:r.KeyringController,encryptor:e.encryptor||undefined,cacheEncryptionKey:Q.isManifestV3}),this.keyringController.memStore.subscribe((e=>this._onKeyringControllerUpdate(e))),this.keyringController.on("unlock",(()=>this._onUnlock())),this.keyringController.on("lock",(()=>this._onLock()));const d=()=>this.preferencesController.store.getState().identities;this.permissionController=new N.PermissionController({messenger:this.controllerMessenger.getRestricted({name:"PermissionController",allowedActions:[`${this.approvalController.name}:addRequest`,`${this.approvalController.name}:hasRequest`,`${this.approvalController.name}:acceptRequest`,`${this.approvalController.name}:rejectRequest`]}),state:r.PermissionController,caveatSpecifications:(0,Oe.getCaveatSpecifications)({getIdentities:d}),permissionSpecifications:{...(0,Oe.getPermissionSpecifications)({getIdentities:d,getAllAccounts:this.keyringController.getAccounts.bind(this.keyringController),captureKeyringTypesWithMissingIdentities:(e={},t=[])=>{const r=t.filter((t=>!e[t])).map((e=>{var t;return null===(t=this.keyringController.getKeyringForAccount(e))||void 0===t?void 0:t.type})),n=Object.keys(e||{}).length,s=Object.keys(this.accountTracker.store.getState().accounts||{}).length;(0,v.captureException)(new Error(`Attempt to get permission specifications failed because their were ${t.length} accounts, but ${n} identities, and the ${r} keyrings included accounts with missing identities. Meanwhile, there are ${s} accounts in the account tracker.`))}})},unrestrictedMethods:Oe.unrestrictedMethods}),this.permissionLogController=new Oe.PermissionLogController({restrictedMethods:new Set(Object.keys(K.RestrictedMethods)),initState:r.PermissionLogController}),this.subjectMetadataController=new O.SubjectMetadataController({messenger:this.controllerMessenger.getRestricted({name:"SubjectMetadataController",allowedActions:[`${this.permissionController.name}:hasPermissions`]}),state:r.SubjectMetadataController,subjectCacheLimit:100}),this.detectTokensController=new ve.default({preferences:this.preferencesController,tokensController:this.tokensController,assetsContractController:this.assetsContractController,network:this.networkController,keyringMemStore:this.keyringController.memStore,tokenList:this.tokenListController,trackMetaMetricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.addressBookController=new M.AddressBookController(undefined,r.AddressBookController),this.alertController=new ue.default({initState:r.AlertController,preferencesStore:this.preferencesController.store}),this.backupController=new ge.default({preferencesController:this.preferencesController,addressBookController:this.addressBookController,trackMetaMetricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.txController=new ke.default({initState:r.TransactionController||r.TransactionManager,getPermittedAccounts:this.getPermittedAccounts.bind(this),getProviderConfig:this.networkController.getProviderConfig.bind(this.networkController),getCurrentNetworkEIP1559Compatibility:this.networkController.getEIP1559Compatibility.bind(this.networkController),getCurrentAccountEIP1559Compatibility:this.getCurrentAccountEIP1559Compatibility.bind(this),getNetworkState:()=>this.networkController.networkStore.getState(),onNetworkStateChange:e=>this.networkController.networkStore.subscribe(e),getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),preferencesStore:this.preferencesController.store,txHistoryLimit:60,signTransaction:this.keyringController.signTransaction.bind(this.keyringController),provider:this.provider,blockTracker:this.blockTracker,createEventFragment:this.metaMetricsController.createEventFragment.bind(this.metaMetricsController),updateEventFragment:this.metaMetricsController.updateEventFragment.bind(this.metaMetricsController),finalizeEventFragment:this.metaMetricsController.finalizeEventFragment.bind(this.metaMetricsController),getEventFragmentById:this.metaMetricsController.getEventFragmentById.bind(this.metaMetricsController),trackMetaMetricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),getParticipateInMetrics:()=>this.metaMetricsController.state.participateInMetaMetrics,getEIP1559GasFeeEstimates:this.gasFeeController.fetchGasFeeEstimates.bind(this.gasFeeController),getExternalPendingTransactions:this.getExternalPendingTransactions.bind(this),getAccountType:this.getAccountType.bind(this),getDeviceModel:this.getDeviceModel.bind(this),getTokenStandardAndDetails:this.getTokenStandardAndDetails.bind(this),securityProviderRequest:this.securityProviderRequest.bind(this)}),this.txController.on("newUnapprovedTx",(()=>e.showUserConfirmation())),this.txController.on("tx:status-update",(async(e,t)=>{if(t===j.TransactionStatus.confirmed||t===j.TransactionStatus.failed){const t=this.txController.txStateManager.getTransaction(e),a=this.preferencesController.getFrequentRpcListDetail();let l={};if(t.chainId){var r;const e=a.find((e=>t.chainId===e.chainId));l=null!==(r=null==e?void 0:e.rpcPrefs)&&void 0!==r?r:{}}this.platform.showTransactionNotification(t,l);const{txReceipt:c}=t;if(t.type===j.TransactionType.tokenMethodTransferFrom&&t.txParams!==undefined){var n,s,o;const{data:e,to:r,from:i}=t.txParams,{chainId:a}=t,l=(0,W.parseStandardTokenTransactionData)(e),c=null!==(n=(0,$.getTokenIdParam)(l))&&void 0!==n?n:(0,z.getTokenValueParam)(l),{allNfts:d}=this.nftController.state,h=(0,J.hexToDecimal)(a),u=null==d||null===(s=d[i])||void 0===s||null===(o=s[h])||void 0===o?void 0:o.find((({address:e,tokenId:t})=>(0,V.isEqualCaseInsensitive)(e,r)&&t===c));u&&this.nftController.checkAndUpdateSingleNftOwnershipStatus(u,!1,{userAddress:i,chainId:h})}const d=this.getState();var i;if(c&&"0x0"===c.status)this.metaMetricsController.trackEvent({event:"Tx Status Update: On-Chain Failure",category:q.EVENT.CATEGORIES.BACKGROUND,properties:{action:"Transactions",errorMessage:null===(i=t.simulationFails)||void 0===i?void 0:i.reason,numberOfTokens:d.tokens.length,numberOfAccounts:Object.keys(d.accounts).length}},{matomoEvent:!0})}})),this.networkController.on(le.NETWORK_EVENTS.NETWORK_DID_CHANGE,(async()=>{const{ticker:e}=this.networkController.getProviderConfig();try{await this.currencyRateController.setNativeCurrency(e)}catch(e){console.error(e)}})),this.networkController.lookupNetwork(),this.messageManager=new fe.default({metricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),securityProviderRequest:this.securityProviderRequest.bind(this)}),this.personalMessageManager=new be.default({metricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),securityProviderRequest:this.securityProviderRequest.bind(this)}),this.decryptMessageManager=new Ce.default({metricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.encryptionPublicKeyManager=new ye.default({metricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.typedMessageManager=new we.default({getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),metricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),securityProviderRequest:this.securityProviderRequest.bind(this)}),this.swapsController=new Me.default({getBufferedGasLimit:this.txController.txGasUtil.getBufferedGasLimit.bind(this.txController.txGasUtil),networkController:this.networkController,provider:this.provider,getProviderConfig:this.networkController.getProviderConfig.bind(this.networkController),getTokenRatesState:()=>this.tokenRatesController.state,getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),getEIP1559GasFeeEstimates:this.gasFeeController.fetchGasFeeEstimates.bind(this.gasFeeController)}),this.smartTransactionsController=new I.default({onNetworkStateChange:e=>{this.networkController.store.subscribe((t=>{const r={...t,providerConfig:{...t.provider}};return e(r)}))},getNetwork:this.networkController.getNetworkState.bind(this.networkController),getNonceLock:this.txController.nonceTracker.getNonceLock.bind(this.txController.nonceTracker),confirmExternalTransaction:this.txController.confirmExternalTransaction.bind(this.txController),provider:this.provider,trackMetaMetricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)},{supportedChainIds:[x.CHAIN_IDS.MAINNET,x.CHAIN_IDS.GOERLI]},r.SmartTransactionsController),this.networkController.on(le.NETWORK_EVENTS.NETWORK_DID_CHANGE,(()=>{this.accountTracker._updateAccounts()})),this.networkController.on(le.NETWORK_EVENTS.NETWORK_WILL_CHANGE,(()=>{this.txController.txStateManager.clearUnapprovedTxs(),this.encryptionPublicKeyManager.clearUnapproved(),this.personalMessageManager.clearUnapproved(),this.typedMessageManager.clearUnapproved(),this.decryptMessageManager.clearUnapproved(),this.messageManager.clearUnapproved()})),this.metamaskMiddleware=(0,Ne.default)({static:{eth_syncing:!1,web3_clientVersion:`MetaMask/v${n}`},version:n,getAccounts:async({origin:e},{suppressUnauthorizedError:t=!0}={})=>{if(e===H.ORIGIN_METAMASK){const e=this.preferencesController.getSelectedAddress();return e?[e]:[]}return this.isUnlocked()?await this.getPermittedAccounts(e,{suppressUnauthorizedError:t}):[]},processTransaction:this.newUnapprovedTransaction.bind(this),processEthSignMessage:this.newUnsignedMessage.bind(this),processTypedMessage:this.newUnsignedTypedMessage.bind(this),processTypedMessageV3:this.newUnsignedTypedMessage.bind(this),processTypedMessageV4:this.newUnsignedTypedMessage.bind(this),processPersonalMessage:this.newUnsignedPersonalMessage.bind(this),processDecryptMessage:this.newRequestDecryptMessage.bind(this),processEncryptionPublicKey:this.newRequestEncryptionPublicKey.bind(this),getPendingNonce:this.getPendingNonce.bind(this),getPendingTransactionByHash:e=>this.txController.getTransactions({searchCriteria:{hash:e,status:j.TransactionStatus.submitted}})[0]}),this.on("update",(e=>this._onStateUpdate(e)));const h={AccountTracker:this.accountTracker.store,TxController:this.txController.memStore,TokenRatesController:this.tokenRatesController,MessageManager:this.messageManager.memStore,PersonalMessageManager:this.personalMessageManager.memStore,DecryptMessageManager:this.decryptMessageManager.memStore,EncryptionPublicKeyManager:this.encryptionPublicKeyManager.memStore,TypesMessageManager:this.typedMessageManager.memStore,SwapsController:this.swapsController.store,EnsController:this.ensController.store,ApprovalController:this.approvalController};this.store.updateStructure({AppStateController:this.appStateController.store,TransactionController:this.txController.store,KeyringController:this.keyringController.store,PreferencesController:this.preferencesController.store,MetaMetricsController:this.metaMetricsController.store,AddressBookController:this.addressBookController,CurrencyController:this.currencyRateController,NetworkController:this.networkController.store,CachedBalancesController:this.cachedBalancesController.store,AlertController:this.alertController.store,OnboardingController:this.onboardingController.store,IncomingTransactionsController:this.incomingTransactionsController.store,PermissionController:this.permissionController,PermissionLogController:this.permissionLogController.store,SubjectMetadataController:this.subjectMetadataController,BackupController:this.backupController,AnnouncementController:this.announcementController,GasFeeController:this.gasFeeController,TokenListController:this.tokenListController,TokensController:this.tokensController,SmartTransactionsController:this.smartTransactionsController,NftController:this.nftController,PhishingController:this.phishingController,...h}),this.memStore=new X.default({config:{AppStateController:this.appStateController.store,NetworkController:this.networkController.store,CachedBalancesController:this.cachedBalancesController.store,KeyringController:this.keyringController.memStore,PreferencesController:this.preferencesController.store,MetaMetricsController:this.metaMetricsController.store,AddressBookController:this.addressBookController,CurrencyController:this.currencyRateController,AlertController:this.alertController.store,OnboardingController:this.onboardingController.store,IncomingTransactionsController:this.incomingTransactionsController.store,PermissionController:this.permissionController,PermissionLogController:this.permissionLogController.store,SubjectMetadataController:this.subjectMetadataController,BackupController:this.backupController,AnnouncementController:this.announcementController,GasFeeController:this.gasFeeController,TokenListController:this.tokenListController,TokensController:this.tokensController,SmartTransactionsController:this.smartTransactionsController,NftController:this.nftController,...h},controllerMessenger:this.controllerMessenger});const m=[this.accountTracker.resetState,this.txController.resetState,this.messageManager.resetState,this.personalMessageManager.resetState,this.decryptMessageManager.resetState,this.encryptionPublicKeyManager.resetState,this.typedMessageManager.resetState,this.swapsController.resetState,this.ensController.resetState,this.approvalController.clear.bind(this.approvalController)];Q.isManifestV3?!0===globalThis.isFirstTimeProfileLoaded&&this.resetStates(m):this.resetStates(m),!this.isUnlocked()&&this.onboardingController.store.getState().completedOnboarding?this._loginUser():this._startUISync(),this.extension.runtime.getPlatformInfo().then((({os:e})=>{this.appStateController.setBrowserEnvironment(e,this.extension.runtime.getBrowserInfo===undefined?"chrome":"firefox")})),this.setupControllerEventSubscriptions(),this.publicConfigStore=this.createPublicConfigStore(),this.extension.runtime.onMessageExternal.addListener(Y.onMessageReceived),(0,Y.checkForMultipleVersionsRunning)()}triggerNetworkrequests(){this.accountTracker.start(),this.incomingTransactionsController.start(),this.preferencesController.store.getState().useCurrencyRateCheck&&this.currencyRateController.start(),this.preferencesController.store.getState().useTokenDetection&&this.tokenListController.start()}stopNetworkRequests(){this.accountTracker.stop(),this.incomingTransactionsController.stop(),this.preferencesController.store.getState().useCurrencyRateCheck&&this.currencyRateController.stop(),this.preferencesController.store.getState().useTokenDetection&&this.tokenListController.stop()}canUseHardwareWallets(){var e;return!Q.isManifestV3||(null===(e={})||void 0===e?void 0:e.HARDWARE_WALLETS_MV3)}resetStates(e){e.forEach((e=>{try{e()}catch(e){console.error(e)}})),globalThis.isFirstTimeProfileLoaded=!1}setupControllerEventSubscriptions(){const e=async(e,t)=>{this.isUnlocked()&&this.notifyConnections(e,{method:Oe.NOTIFICATION_NAMES.accountsChanged,params:t.length<2?t:await this.getPermittedAccounts(e)}),this.permissionLogController.updateAccountsHistory(e,t)};let t;this.preferencesController.store.subscribe((async({selectedAddress:r})=>{if(r&&r!==t){t=r;const n=(0,Oe.getPermittedAccountsByOrigin)(this.permissionController.state);for(const[t,s]of n.entries())s.includes(r)&&e(t,s)}})),this.controllerMessenger.subscribe(`${this.permissionController.name}:stateChange`,(async(t,r)=>{const n=(0,Oe.getChangedAccounts)(t,r);for(const[t,r]of n.entries())e(t,r)}),Oe.getPermittedAccountsByOrigin)}createPublicConfigStore(){const e=new i.ObservableStore,{networkController:t}=this;function r(r){const n=t.getCurrentChainId();"loading"!==r.network&&e.putState(function(e,{isUnlocked:t,network:r}){return{isUnlocked:t,chainId:e,networkVersion:r}}(n,r))}return this.on("update",r),r(this.getState()),e}async getProviderState(e){return{isUnlocked:this.isUnlocked(),...this.getProviderNetworkState(),accounts:await this.getPermittedAccounts(e)}}getProviderNetworkState(e){const{network:t}=e||this.getState();return{chainId:this.networkController.getCurrentChainId(),networkVersion:t}}getState(){const{vault:e}=this.keyringController.store.getState();return{isInitialized:Boolean(e),...this.memStore.getFlatState()}}getApi(){const{addressBookController:e,alertController:t,appStateController:r,nftController:n,nftDetectionController:s,currencyRateController:o,detectTokensController:i,ensController:a,gasFeeController:l,metaMetricsController:c,networkController:d,announcementController:h,onboardingController:u,permissionController:p,preferencesController:g,qrHardwareKeyring:m,swapsController:f,tokensController:C,smartTransactionsController:y,txController:b,assetsContractController:w,backupController:k}=this;return{getState:this.getState.bind(this),setCurrentCurrency:o.setCurrentCurrency.bind(o),setUseBlockie:g.setUseBlockie.bind(g),setUseNonceField:g.setUseNonceField.bind(g),setUsePhishDetect:g.setUsePhishDetect.bind(g),setUseMultiAccountBalanceChecker:g.setUseMultiAccountBalanceChecker.bind(g),setUseTokenDetection:g.setUseTokenDetection.bind(g),setUseNftDetection:g.setUseNftDetection.bind(g),setUseCurrencyRateCheck:g.setUseCurrencyRateCheck.bind(g),setOpenSeaEnabled:g.setOpenSeaEnabled.bind(g),setIpfsGateway:g.setIpfsGateway.bind(g),setParticipateInMetaMetrics:c.setParticipateInMetaMetrics.bind(c),setCurrentLocale:g.setCurrentLocale.bind(g),markPasswordForgotten:this.markPasswordForgotten.bind(this),unMarkPasswordForgotten:this.unMarkPasswordForgotten.bind(this),getRequestAccountTabIds:this.getRequestAccountTabIds,getOpenMetamaskTabsIds:this.getOpenMetamaskTabsIds,markNotificationPopupAsAutomaticallyClosed:()=>this.notificationManager.markAsAutomaticallyClosed(),addNewAccount:this.addNewAccount.bind(this),verifySeedPhrase:this.verifySeedPhrase.bind(this),resetAccount:this.resetAccount.bind(this),removeAccount:this.removeAccount.bind(this),importAccountWithStrategy:this.importAccountWithStrategy.bind(this),connectHardware:this.connectHardware.bind(this),forgetDevice:this.forgetDevice.bind(this),checkHardwareStatus:this.checkHardwareStatus.bind(this),unlockHardwareWalletAccount:this.unlockHardwareWalletAccount.bind(this),setLedgerTransportPreference:this.setLedgerTransportPreference.bind(this),attemptLedgerTransportCreation:this.attemptLedgerTransportCreation.bind(this),establishLedgerTransportPreference:this.establishLedgerTransportPreference.bind(this),submitQRHardwareCryptoHDKey:m.submitCryptoHDKey.bind(m),submitQRHardwareCryptoAccount:m.submitCryptoAccount.bind(m),cancelSyncQRHardware:m.cancelSync.bind(m),submitQRHardwareSignature:m.submitSignature.bind(m),cancelQRHardwareSignRequest:m.cancelSignRequest.bind(m),fetchInfoToSync:this.fetchInfoToSync.bind(this),submitPassword:this.submitPassword.bind(this),verifyPassword:this.verifyPassword.bind(this),setProviderType:d.setProviderType.bind(d),rollbackToPreviousProvider:d.rollbackToPreviousProvider.bind(d),setCustomRpc:this.setCustomRpc.bind(this),updateAndSetCustomRpc:this.updateAndSetCustomRpc.bind(this),delCustomRpc:this.delCustomRpc.bind(this),addCustomNetwork:this.addCustomNetwork.bind(this),requestAddNetworkApproval:this.requestAddNetworkApproval.bind(this),setSelectedAddress:g.setSelectedAddress.bind(g),addToken:C.addToken.bind(C),rejectWatchAsset:C.rejectWatchAsset.bind(C),acceptWatchAsset:C.acceptWatchAsset.bind(C),updateTokenType:C.updateTokenType.bind(C),setAccountLabel:g.setAccountLabel.bind(g),setFeatureFlag:g.setFeatureFlag.bind(g),setPreference:g.setPreference.bind(g),addKnownMethodData:g.addKnownMethodData.bind(g),setDismissSeedBackUpReminder:g.setDismissSeedBackUpReminder.bind(g),setDisabledRpcMethodPreference:g.setDisabledRpcMethodPreference.bind(g),getRpcMethodPreferences:g.getRpcMethodPreferences.bind(g),setAdvancedGasFee:g.setAdvancedGasFee.bind(g),setTheme:g.setTheme.bind(g),setTransactionSecurityCheckEnabled:g.setTransactionSecurityCheckEnabled.bind(g),getTokenStandardAndDetails:this.getTokenStandardAndDetails.bind(this),addNft:n.addNft.bind(n),addNftVerifyOwnership:n.addNftVerifyOwnership.bind(n),removeAndIgnoreNft:n.removeAndIgnoreNft.bind(n),removeNft:n.removeNft.bind(n),checkAndUpdateAllNftsOwnershipStatus:n.checkAndUpdateAllNftsOwnershipStatus.bind(n),checkAndUpdateSingleNftOwnershipStatus:n.checkAndUpdateSingleNftOwnershipStatus.bind(n),isNftOwner:n.isNftOwner.bind(n),setAddressBook:e.set.bind(e),removeFromAddressBook:e.delete.bind(e),setLastActiveTime:r.setLastActiveTime.bind(r),setDefaultHomeActiveTabName:r.setDefaultHomeActiveTabName.bind(r),setConnectedStatusPopoverHasBeenShown:r.setConnectedStatusPopoverHasBeenShown.bind(r),setRecoveryPhraseReminderHasBeenShown:r.setRecoveryPhraseReminderHasBeenShown.bind(r),setRecoveryPhraseReminderLastShown:r.setRecoveryPhraseReminderLastShown.bind(r),setOutdatedBrowserWarningLastShown:r.setOutdatedBrowserWarningLastShown.bind(r),setShowTestnetMessageInDropdown:r.setShowTestnetMessageInDropdown.bind(r),setShowPortfolioTooltip:r.setShowPortfolioTooltip.bind(r),setShowBetaHeader:r.setShowBetaHeader.bind(r),updateCollectibleDropDownState:r.updateCollectibleDropDownState.bind(r),setFirstTimeUsedNetwork:r.setFirstTimeUsedNetwork.bind(r),tryReverseResolveAddress:a.reverseResolveAddress.bind(a),setLocked:this.setLocked.bind(this),createNewVaultAndKeychain:this.createNewVaultAndKeychain.bind(this),createNewVaultAndRestore:this.createNewVaultAndRestore.bind(this),exportAccount:this.exportAccount.bind(this),cancelTransaction:b.cancelTransaction.bind(b),updateTransaction:b.updateTransaction.bind(b),updateAndApproveTransaction:b.updateAndApproveTransaction.bind(b),approveTransactionsWithSameNonce:b.approveTransactionsWithSameNonce.bind(b),createCancelTransaction:this.createCancelTransaction.bind(this),createSpeedUpTransaction:this.createSpeedUpTransaction.bind(this),estimateGas:this.estimateGas.bind(this),getNextNonce:this.getNextNonce.bind(this),addUnapprovedTransaction:b.addUnapprovedTransaction.bind(b),createTransactionEventFragment:b.createTransactionEventFragment.bind(b),getTransactions:b.getTransactions.bind(b),updateEditableParams:b.updateEditableParams.bind(b),updateTransactionGasFees:b.updateTransactionGasFees.bind(b),updateTransactionSendFlowHistory:b.updateTransactionSendFlowHistory.bind(b),updateSwapApprovalTransaction:b.updateSwapApprovalTransaction.bind(b),updateSwapTransaction:b.updateSwapTransaction.bind(b),updatePreviousGasParams:b.updatePreviousGasParams.bind(b),signMessage:this.signMessage.bind(this),cancelMessage:this.cancelMessage.bind(this),signPersonalMessage:this.signPersonalMessage.bind(this),cancelPersonalMessage:this.cancelPersonalMessage.bind(this),signTypedMessage:this.signTypedMessage.bind(this),cancelTypedMessage:this.cancelTypedMessage.bind(this),decryptMessage:this.decryptMessage.bind(this),decryptMessageInline:this.decryptMessageInline.bind(this),cancelDecryptMessage:this.cancelDecryptMessage.bind(this),encryptionPublicKey:this.encryptionPublicKey.bind(this),cancelEncryptionPublicKey:this.cancelEncryptionPublicKey.bind(this),setSeedPhraseBackedUp:u.setSeedPhraseBackedUp.bind(u),completeOnboarding:u.completeOnboarding.bind(u),setFirstTimeFlowType:u.setFirstTimeFlowType.bind(u),setAlertEnabledness:t.setAlertEnabledness.bind(t),setUnconnectedAccountAlertShown:t.setUnconnectedAccountAlertShown.bind(t),setWeb3ShimUsageAlertDismissed:t.setWeb3ShimUsageAlertDismissed.bind(t),removePermissionsFor:this.removePermissionsFor,approvePermissionsRequest:this.acceptPermissionsRequest,rejectPermissionsRequest:this.rejectPermissionsRequest,...(0,Oe.getPermissionBackgroundApiMethods)(p),fetchAndSetQuotes:f.fetchAndSetQuotes.bind(f),setSelectedQuoteAggId:f.setSelectedQuoteAggId.bind(f),resetSwapsState:f.resetSwapsState.bind(f),setSwapsTokens:f.setSwapsTokens.bind(f),clearSwapsQuotes:f.clearSwapsQuotes.bind(f),setApproveTxId:f.setApproveTxId.bind(f),setTradeTxId:f.setTradeTxId.bind(f),setSwapsTxGasPrice:f.setSwapsTxGasPrice.bind(f),setSwapsTxGasLimit:f.setSwapsTxGasLimit.bind(f),setSwapsTxMaxFeePerGas:f.setSwapsTxMaxFeePerGas.bind(f),setSwapsTxMaxFeePriorityPerGas:f.setSwapsTxMaxFeePriorityPerGas.bind(f),safeRefetchQuotes:f.safeRefetchQuotes.bind(f),stopPollingForQuotes:f.stopPollingForQuotes.bind(f),setBackgroundSwapRouteState:f.setBackgroundSwapRouteState.bind(f),resetPostFetchState:f.resetPostFetchState.bind(f),setSwapsErrorKey:f.setSwapsErrorKey.bind(f),setInitialGasEstimate:f.setInitialGasEstimate.bind(f),setCustomApproveTxData:f.setCustomApproveTxData.bind(f),setSwapsLiveness:f.setSwapsLiveness.bind(f),setSwapsFeatureFlags:f.setSwapsFeatureFlags.bind(f),setSwapsUserFeeLevel:f.setSwapsUserFeeLevel.bind(f),setSwapsQuotesPollingLimitEnabled:f.setSwapsQuotesPollingLimitEnabled.bind(f),setSmartTransactionsOptInStatus:y.setOptInState.bind(y),fetchSmartTransactionFees:y.getFees.bind(y),clearSmartTransactionFees:y.clearFees.bind(y),submitSignedTransactions:y.submitSignedTransactions.bind(y),cancelSmartTransaction:y.cancelSmartTransaction.bind(y),fetchSmartTransactionsLiveness:y.fetchLiveness.bind(y),updateSmartTransaction:y.updateSmartTransaction.bind(y),setStatusRefreshInterval:y.setStatusRefreshInterval.bind(y),trackMetaMetricsEvent:c.trackEvent.bind(c),trackMetaMetricsPage:c.trackPage.bind(c),createEventFragment:c.createEventFragment.bind(c),updateEventFragment:c.updateEventFragment.bind(c),finalizeEventFragment:c.finalizeEventFragment.bind(c),resolvePendingApproval:this.resolvePendingApproval,rejectPendingApproval:this.rejectPendingApproval,updateViewedNotifications:h.updateViewed.bind(h),getGasFeeEstimatesAndStartPolling:l.getGasFeeEstimatesAndStartPolling.bind(l),disconnectGasFeeEstimatePoller:l.disconnectPoller.bind(l),getGasFeeTimeEstimate:l.getTimeEstimate.bind(l),addPollingTokenToAppState:r.addPollingToken.bind(r),removePollingTokenFromAppState:r.removePollingToken.bind(r),backupUserData:k.backupUserData.bind(k),restoreUserData:k.restoreUserData.bind(k),detectNewTokens:i.detectNewTokens.bind(i),detectNfts:null,addDetectedTokens:C.addDetectedTokens.bind(C),addImportedTokens:C.addTokens.bind(C),ignoreTokens:C.ignoreTokens.bind(C),getBalancesInSingleCall:w.getBalancesInSingleCall.bind(w)}}async exportAccount(e,t){return await this.verifyPassword(t),this.keyringController.exportAccount(e,t)}async getTokenStandardAndDetails(e,t,r){var n,s,o,i;const{tokenList:a}=this.tokenListController.state,{tokens:l}=this.tokensController.state,c={...G.STATIC_MAINNET_TOKEN_LIST[e.toLowerCase()]||{},...a[e.toLowerCase()]||{},...l.find((({address:t})=>(0,V.isEqualCaseInsensitive)(t,e)))||{}},d=(0,V.isEqualCaseInsensitive)(c.standard,j.TokenStandard.ERC20)||!0===c.erc20,h=!(r||(0,V.isEqualCaseInsensitive)(c.standard,j.TokenStandard.ERC1155)||(0,V.isEqualCaseInsensitive)(c.standard,j.TokenStandard.ERC721)||c.erc721),u=c.decimals!==undefined&&c.symbol;let p;if(d||h&&u)try{const r=await(0,$.fetchTokenBalance)(e,t,this.provider);p={address:e,balance:r,standard:j.TokenStandard.ERC20,decimals:c.decimals,symbol:c.symbol}}catch(e){m.default.warning(`Failed to get token balance. Error: ${e}`)}return p===undefined&&(p=await this.assetsContractController.getTokenStandardAndDetails(e,t,r)),{...p,decimals:null===(n=p)||void 0===n||null===(s=n.decimals)||void 0===s?void 0:s.toString(10),balance:null===(o=p)||void 0===o||null===(i=o.balance)||void 0===i?void 0:i.toString(10)}}async createNewVaultAndKeychain(e){const t=await this.createVaultMutex.acquire();try{let r;if((await this.keyringController.getAccounts()).length>0)r=await this.keyringController.fullUpdate();else{r=await this.keyringController.createNewVaultAndKeychain(e);const t=await this.keyringController.getAccounts();this.preferencesController.setAddresses(t),this.selectFirstIdentity()}return r}finally{t()}}async requestAddNetworkApproval(e,t){try{await this.approvalController.addAndShowApprovalRequest({origin:"metamask",type:"wallet_addEthereumChain",requestData:{chainId:e.chainId,blockExplorerUrl:e.rpcPrefs.blockExplorerUrl,chainName:e.nickname,rpcUrl:e.rpcUrl,ticker:e.ticker,imageUrl:e.rpcPrefs.imageUrl}})}catch(e){if(!t||"User rejected the request."!==e.message)throw e}}async addCustomNetwork(e,t){const{chainId:r,chainName:n,rpcUrl:s,ticker:o,blockExplorerUrl:i}=e;this.preferencesController.upsertToFrequentRpcList(s,r,o,n,{blockExplorerUrl:i}),this.metaMetricsController.trackEvent({event:"Custom Network Added",category:q.EVENT.CATEGORIES.NETWORK,referrer:{url:H.ORIGIN_METAMASK},properties:{chain_id:r,symbol:o,source:q.EVENT.SOURCE.NETWORK.POPULAR_NETWORK_LIST},actionId:t})}async createNewVaultAndRestore(e,t){const r=await this.createVaultMutex.acquire();try{let s,o;const i=n.from(t),{keyringController:a}=this;this.preferencesController.setAddresses([]),this.permissionController.clearState(),this.accountTracker.clearAccounts(),this.cachedBalancesController.clearCachedBalances(),this.txController.txStateManager.clearUnapprovedTxs();const l=await a.createNewVaultAndRestore(e,i),c=new w.default(this.provider);s=await a.getAccounts(),o=await this.getBalance(s[s.length-1],c);const[d]=a.getKeyringsByType(U.HardwareKeyringTypes.hdKeyTree);if(!d)throw new Error("MetamaskController - No HD Key Tree found");for(;"0x0"!==o;)await a.addNewAccount(d),s=await a.getAccounts(),o=await this.getBalance(s[s.length-1],c);s.length>1&&"0x0"===o&&(await this.removeAccount(s[s.length-1]),s=await a.getAccounts());const h=this.preferencesController.getLedgerTransportPreference();return this.setLedgerTransportPreference(h),this.preferencesController.setAddresses(s),this.selectFirstIdentity(),l}finally{r()}}getBalance(e,t){return new Promise(((r,n)=>{const s=this.accountTracker.store.getState().accounts[e];s&&s.balance?r(s.balance):t.getBalance(e,((e,t)=>{e?(n(e),m.default.error(e)):r(t||"0x0")}))}))}async fetchInfoToSync(){const{currentLocale:e,frequentRpcList:t,identities:r,selectedAddress:n,useTokenDetection:s}=this.preferencesController.store.getState(),o=!s&&this.networkController.store.getState().provider.chainId===x.CHAIN_IDS.MAINNET,{tokenList:i}=this.tokenListController.state,a=o?G.STATIC_MAINNET_TOKEN_LIST:i,l={currentLocale:e,frequentRpcList:t,identities:r,selectedAddress:n},{allTokens:c,allIgnoredTokens:d}=this.tokensController.state,h={};Object.keys(c).forEach((e=>{h[e]={},Object.keys(c[e]).forEach((t=>{const r=(0,F.toChecksumHexAddress)(t);h[e][r]=c[e][r].filter((e=>{var t;if(e.isERC721===undefined){if(a[null===(t=e.address)||void 0===t?void 0:t.toLowerCase()]!==undefined)return!0}else if(!1===e.isERC721)return!0;return!1}))}))}));const[u]=this.keyringController.getKeyringsByType(U.HardwareKeyringTypes.hdKeyTree),p=this.keyringController.getKeyringsByType(U.HardwareKeyringTypes.hdKeyTree),g=await u.getAccounts(),m=(await Promise.all(p.map((e=>e.getAccounts())))).reduce(((e,t)=>[...e,...t]),[]),f={hd:g.filter(((e,t)=>g.indexOf(e)===t)).map((e=>(0,F.toChecksumHexAddress)(e))),simpleKeyPair:m.filter(((e,t)=>m.indexOf(e)===t)).map((e=>(0,F.toChecksumHexAddress)(e))),ledger:[],trezor:[],lattice:[]};let{transactions:C}=this.txController.store.getState();return C=Object.values(C).filter((e=>{const t=(0,F.toChecksumHexAddress)(e.txParams.from);return f.hd.includes(t)})),{accounts:f,preferences:l,transactions:C,tokens:{allTokens:h,allIgnoredTokens:d},network:this.networkController.store.getState()}}async submitPassword(e){await this.keyringController.submitPassword(e);try{await this.blockTracker.checkForLatestBlock()}catch(e){m.default.error("Error while unlocking extension.",e)}const t=this.preferencesController.getLedgerTransportPreference();return this.setLedgerTransportPreference(t),this.keyringController.fullUpdate()}async _loginUser(){try{var e;const t=null===(e={})||void 0===e?void 0:e.PASSWORD;t?await this.submitPassword(t):Q.isManifestV3&&await this.submitEncryptionKey(),await this.accountTracker._updateAccounts()}finally{this._startUISync()}}_startUISync(){this.emit("startUISync"),this.startUISync=!0,this.memStore.subscribe(this.sendUpdate.bind(this))}async submitEncryptionKey(){try{const{loginToken:e,loginSalt:t}=await R.default.storage.session.get(["loginToken","loginSalt"]);if(e&&t){const{vault:r}=this.keyringController.store.getState();if(r.salt!==t)return console.warn("submitEncryptionKey: Stored salt and vault salt do not match"),void await this.clearLoginArtifacts();await this.keyringController.submitEncryptionKey(e,t)}}catch(e){throw await this.clearLoginArtifacts(),e}}async clearLoginArtifacts(){await R.default.storage.session.remove(["loginToken","loginSalt"])}async verifyPassword(e){await this.keyringController.verifyPassword(e)}selectFirstIdentity(){const{identities:e}=this.preferencesController.store.getState(),[t]=Object.keys(e);this.preferencesController.setSelectedAddress(t)}getPrimaryKeyringMnemonic(){const[e]=this.keyringController.getKeyringsByType(U.HardwareKeyringTypes.hdKeyTree);if(!e.mnemonic)throw new Error("Primary keyring mnemonic unavailable.");return e.mnemonic}async getKeyringForDevice(e,t=null){let r=null;if(e!==U.HardwareDeviceNames.QR&&!this.canUseHardwareWallets())throw new Error("Hardware wallets are not supported on this version.");switch(e){case U.HardwareDeviceNames.trezor:r=f.default.type;break;case U.HardwareDeviceNames.ledger:r=C.default.type;break;case U.HardwareDeviceNames.qr:r=b.MetaMaskKeyring.type;break;case U.HardwareDeviceNames.lattice:r=y.default.type;break;default:throw new Error("MetamaskController:getKeyringForDevice - Unknown device")}let[n]=await this.keyringController.getKeyringsByType(r);if(n||(n=await this.keyringController.addNewKeyring(r)),t&&n.setHdPath&&n.setHdPath(t),e===U.HardwareDeviceNames.lattice&&(n.appName="MetaMask"),e===U.HardwareDeviceNames.trezor){const e=n.getModel();this.appStateController.setTrezorModel(e)}return n.network=this.networkController.getProviderConfig().type,n}async attemptLedgerTransportCreation(){const e=await this.getKeyringForDevice(U.HardwareDeviceNames.ledger);return await e.attemptMakeApp()}async establishLedgerTransportPreference(){const e=this.preferencesController.getLedgerTransportPreference();return await this.setLedgerTransportPreference(e)}async connectHardware(e,t,r){const n=await this.getKeyringForDevice(e,r);let s=[];switch(t){case-1:s=await n.getPreviousPage();break;case 1:s=await n.getNextPage();break;default:s=await n.getFirstPage()}const o=await this.keyringController.getAccounts(),i=[...new Set(o.concat(s.map((e=>e.address.toLowerCase()))))];return this.accountTracker.syncWithAddresses(i),s}async checkHardwareStatus(e,t){return(await this.getKeyringForDevice(e,t)).isUnlocked()}async forgetDevice(e){return(await this.getKeyringForDevice(e)).forgetDevice(),!0}async getAccountType(e){switch((await this.keyringController.getKeyringForAccount(e)).type){case U.HardwareKeyringTypes.trezor:case U.HardwareKeyringTypes.lattice:case U.HardwareKeyringTypes.qr:case U.HardwareKeyringTypes.ledger:return"hardware";case U.HardwareKeyringTypes.imported:return"imported";default:return"MetaMask"}}async getDeviceModel(e){const t=await this.keyringController.getKeyringForAccount(e);switch(t.type){case U.HardwareKeyringTypes.trezor:return t.getModel();case U.HardwareKeyringTypes.qr:return t.getName();case U.HardwareKeyringTypes.ledger:return U.HardwareDeviceNames.ledger;case U.HardwareKeyringTypes.lattice:return U.HardwareDeviceNames.lattice;default:return"N/A"}}getAccountLabel(e,t,r){return`${e[0].toUpperCase()}${e.slice(1)} ${parseInt(t,10)+1} ${r||""}`.trim()}async unlockHardwareWalletAccount(e,t,r,n){const s=await this.getKeyringForDevice(t,r);s.setAccountToUnlock(e);const o=await this.keyringController.getAccounts(),i=await this.keyringController.addNewAccount(s),a=await this.keyringController.getAccounts();this.preferencesController.setAddresses(a),a.forEach((r=>{if(!o.includes(r)){const o=this.getAccountLabel(t===U.HardwareDeviceNames.qr?s.getName():t,e,n);this.preferencesController.setAccountLabel(r,o),this.preferencesController.setSelectedAddress(r)}}));const{identities:l}=this.preferencesController.store.getState();return{...i,identities:l}}async addNewAccount(e){const[t]=this.keyringController.getKeyringsByType(U.HardwareKeyringTypes.hdKeyTree);if(!t)throw new Error("MetamaskController - No HD Key Tree found");const{keyringController:r}=this,{identities:n}=this.preferencesController.store.getState();if(Object.keys(n).length===e){const e=await r.getAccounts(),n=await r.addNewAccount(t),s=await r.getAccounts();await this.verifySeedPhrase(),this.preferencesController.setAddresses(s),s.forEach((t=>{e.includes(t)||this.preferencesController.setSelectedAddress(t)}));const{identities:o}=this.preferencesController.store.getState();return{...n,identities:o}}return{...r.memStore.getState(),identities:n}}async verifySeedPhrase(){const[e]=this.keyringController.getKeyringsByType(U.HardwareKeyringTypes.hdKeyTree);if(!e)throw new Error("MetamaskController - No HD Key Tree found");const t=await e.serialize(),r=n.from(t.mnemonic),s=await e.getAccounts();if(s.length<1)throw new Error("MetamaskController - No accounts found");try{return await Se.default.verifyAccounts(s,r),Array.from(r.values())}catch(e){throw m.default.error(e.message),e}}async resetAccount(){const e=this.preferencesController.getSelectedAddress();return this.txController.wipeTransactions(e),this.networkController.resetConnection(),e}async getPermittedAccounts(e,{suppressUnauthorizedError:t=!0}={}){try{return await this.permissionController.executeRestrictedMethod(e,K.RestrictedMethods.eth_accounts)}catch(e){if(t&&e.code===p.errorCodes.provider.unauthorized)return[];throw e}}removeAllAccountPermissions(e){this.permissionController.updatePermissionsByCaveat(K.CaveatTypes.restrictReturnedAccounts,(t=>Oe.CaveatMutatorFactories[K.CaveatTypes.restrictReturnedAccounts].removeAccount(e,t)))}async removeAccount(e){this.removeAllAccountPermissions(e),this.preferencesController.removeAddress(e),this.accountTracker.removeAccount([e]);const t=await this.keyringController.getKeyringForAccount(e);await this.keyringController.removeAccount(e);const r=t?await t.getAccounts():{};var n;0===(null==r?void 0:r.length)&&(null===(n=t.destroy)||void 0===n||n.call(t));return e}async importAccountWithStrategy(e,t){const r=await Te.default.importAccount(e,t),n=await this.keyringController.addNewKeyring(U.HardwareKeyringTypes.imported,[r]),[s]=await n.getAccounts(),o=await this.keyringController.getAccounts();this.preferencesController.setAddresses(o),this.preferencesController.setSelectedAddress(s)}async newUnapprovedTransaction(e,t){return await this.txController.newUnapprovedTransaction(e,t)}async newUnsignedMessage(e,t){const{disabledRpcMethodPreferences:r}=this.preferencesController.store.getState(),{eth_sign:n}=r,s=(0,fe.normalizeMsgData)(e.data);let o;if(!n)throw p.ethErrors.rpc.methodNotFound("eth_sign has been disabled. You must enable it in the advanced settings");if(66!==s.length&&67!==s.length)throw p.ethErrors.rpc.invalidParams("eth_sign requires 32 byte message hash");return o=this.messageManager.addUnapprovedMessageAsync(e,t),this.sendUpdate(),this.opts.showUserConfirmation(),await o}async signMessage(e){m.default.info("MetaMaskController - signMessage");const t=e.metamaskId;try{const r=await this.messageManager.approveMessage(e),n=await this.keyringController.signMessage(r);return this.messageManager.setMsgStatusSigned(t,n),this.getState()}catch(e){throw m.default.info("MetaMaskController - eth_sign failed",e),this.messageManager.errorMessage(t,e),e}}cancelMessage(e){const{messageManager:t}=this;return t.rejectMsg(e),this.getState()}async newUnsignedPersonalMessage(e,t){const r=this.personalMessageManager.addUnapprovedMessageAsync(e,t);return this.sendUpdate(),this.opts.showUserConfirmation(),r}async signPersonalMessage(e){m.default.info("MetaMaskController - signPersonalMessage");const t=e.metamaskId;try{const r=await this.personalMessageManager.approveMessage(e),n=await this.keyringController.signPersonalMessage(r);return this.personalMessageManager.setMsgStatusSigned(t,n),this.getState()}catch(e){throw m.default.info("MetaMaskController - eth_personalSign failed",e),this.personalMessageManager.errorMessage(t,e),e}}cancelPersonalMessage(e){return this.personalMessageManager.rejectMsg(e),this.getState()}async newRequestDecryptMessage(e,t){const r=this.decryptMessageManager.addUnapprovedMessageAsync(e,t);return this.sendUpdate(),this.opts.showUserConfirmation(),r}async decryptMessageInline(e){m.default.info("MetaMaskController - decryptMessageInline");const t=e.metamaskId,r=this.decryptMessageManager.getMsg(t);try{const t=(0,F.stripHexPrefix)(e.data),s=n.from(t,"hex");e.data=JSON.parse(s.toString("utf8")),r.rawData=await this.keyringController.decryptMessage(e)}catch(e){r.error=e.message}return this.decryptMessageManager._updateMsg(r),this.getState()}async decryptMessage(e){m.default.info("MetaMaskController - decryptMessage");const t=e.metamaskId;try{const r=await this.decryptMessageManager.approveMessage(e),s=(0,F.stripHexPrefix)(r.data),o=n.from(s,"hex");r.data=JSON.parse(o.toString("utf8"));const i=await this.keyringController.decryptMessage(r);this.decryptMessageManager.setMsgStatusDecrypted(t,i)}catch(e){m.default.info("MetaMaskController - eth_decrypt failed.",e),this.decryptMessageManager.errorMessage(t,e)}return this.getState()}cancelDecryptMessage(e){return this.decryptMessageManager.rejectMsg(e),this.getState()}async newRequestEncryptionPublicKey(e,t){const r=e;switch((await this.keyringController.getKeyringForAccount(r)).type){case U.HardwareKeyringTypes.ledger:return new Promise(((e,t)=>{t(new Error("Ledger does not support eth_getEncryptionPublicKey."))}));case U.HardwareKeyringTypes.trezor:return new Promise(((e,t)=>{t(new Error("Trezor does not support eth_getEncryptionPublicKey."))}));case U.HardwareKeyringTypes.lattice:return new Promise(((e,t)=>{t(new Error("Lattice does not support eth_getEncryptionPublicKey."))}));case U.HardwareKeyringTypes.qr:return Promise.reject(new Error("QR hardware does not support eth_getEncryptionPublicKey."));default:{const r=this.encryptionPublicKeyManager.addUnapprovedMessageAsync(e,t);return this.sendUpdate(),this.opts.showUserConfirmation(),r}}}async encryptionPublicKey(e){m.default.info("MetaMaskController - encryptionPublicKey");const t=e.metamaskId;try{const r=await this.encryptionPublicKeyManager.approveMessage(e),n=await this.keyringController.getEncryptionPublicKey(r.data);this.encryptionPublicKeyManager.setMsgStatusReceived(t,n)}catch(e){m.default.info("MetaMaskController - eth_getEncryptionPublicKey failed.",e),this.encryptionPublicKeyManager.errorMessage(t,e)}return this.getState()}cancelEncryptionPublicKey(e){return this.encryptionPublicKeyManager.rejectMsg(e),this.getState()}newUnsignedTypedMessage(e,t,r){const n=this.typedMessageManager.addUnapprovedMessageAsync(e,t,r);return this.sendUpdate(),this.opts.showUserConfirmation(),n}async signTypedMessage(e){m.default.info("MetaMaskController - eth_signTypedData");const t=e.metamaskId,{version:r}=e;try{const n=await this.typedMessageManager.approveMessage(e);"V1"!==r&&"string"==typeof n.data&&(n.data=JSON.parse(n.data));const s=await this.keyringController.signTypedMessage(n,{version:r});return this.typedMessageManager.setMsgStatusSigned(t,s),this.getState()}catch(e){throw m.default.info("MetaMaskController - eth_signTypedData failed.",e),this.typedMessageManager.errorMessage(t,e),e}}cancelTypedMessage(e){return this.typedMessageManager.rejectMsg(e),this.getState()}async getCurrentAccountEIP1559Compatibility(){return!0}async createCancelTransaction(e,t,r){await this.txController.createCancelTransaction(e,t,r);return this.getState()}async createSpeedUpTransaction(e,t,r){await this.txController.createSpeedUpTransaction(e,t,r);return this.getState()}estimateGas(e){return new Promise(((t,r)=>this.txController.txGasUtil.query.estimateGas(e,((e,n)=>e?r(e):t(n.toString(16))))))}markPasswordForgotten(){this.preferencesController.setPasswordForgotten(!0),this.sendUpdate()}unMarkPasswordForgotten(){this.preferencesController.setPasswordForgotten(!1),this.sendUpdate()}setupUntrustedCommunication({connectionStream:e,sender:t,subjectType:r}){const{usePhishDetect:n}=this.preferencesController.store.getState();let s;if(s=r||(t.id&&t.id!==this.extension.runtime.id?O.SubjectType.Extension:O.SubjectType.Website),t.url){const{hostname:r}=new URL(t.url);this.phishingController.maybeUpdateState();const s=this.phishingController.test(r);if(n&&null!=s&&s.result)return this.sendPhishingWarning(e,r),void this.metaMetricsController.trackEvent({event:q.EVENT_NAMES.PHISHING_PAGE_DISPLAYED,category:q.EVENT.CATEGORIES.PHISHING,properties:{url:r}})}const o=(0,ie.setupMultiplex)(e);this.setupProviderConnection(o.createStream("metamask-provider"),t,s),t.url&&this.setupPublicConfig(o.createStream("publicConfig"))}setupTrustedCommunication(e,t){const r=(0,ie.setupMultiplex)(e);this.setupControllerConnection(r.createStream("controller")),this.setupProviderConnection(r.createStream("provider"),t,O.SubjectType.Internal)}setupPhishingCommunication({connectionStream:e}){const{usePhishDetect:t}=this.preferencesController.store.getState();if(!t)return;const r=(0,ie.setupMultiplex)(e).createStream("metamask-phishing-safelist");r.on("data",(0,Pe.default)({safelistPhishingDomain:this.safelistPhishingDomain.bind(this)},r))}sendPhishingWarning(e,t){(0,ie.setupMultiplex)(e).createStream("phishing").write({hostname:t})}setupControllerConnection(e){const t=this.getApi();this.activeControllerConnections+=1,this.emit("controllerConnectionChanged",this.activeControllerConnections),e.on("data",(0,Pe.default)(t,e,this.store,this.localStoreApiWrapper));const r=t=>{e._writableState.ended||e.write({jsonrpc:"2.0",method:"sendUpdate",params:[t]})};this.on("update",r);const n=()=>{e._writableState.ended||e.write({jsonrpc:"2.0",method:"startUISync"})};this.startUISync?n():this.once("startUISync",n),e.on("end",(()=>{this.activeControllerConnections-=1,this.emit("controllerConnectionChanged",this.activeControllerConnections),this.removeListener("update",r)}))}setupProviderConnection(e,t,r){let n,s;n=r===O.SubjectType.Internal?H.ORIGIN_METAMASK:new URL(t.url).origin,t.id&&t.id!==this.extension.runtime.id&&this.subjectMetadataController.addSubjectMetadata({origin:n,extensionId:t.id,subjectType:O.SubjectType.Extension}),t.tab&&t.tab.id&&(s=t.tab.id);const i=this.setupProviderEngine({origin:n,sender:t,subjectType:r,tabId:s}),a=(0,d.createEngineStream)({engine:i}),l=this.addConnection(n,{engine:i});(0,o.default)(e,a,e,(e=>{i._middleware.forEach((e=>{e.destroy&&"function"==typeof e.destroy&&e.destroy()})),l&&this.removeConnection(n,l),e&&m.default.error(e)}))}setupProviderEngine({origin:e,subjectType:t,sender:r,tabId:n}){const{provider:s}=this,o=new l.JsonRpcEngine;return s.on("data",((e,t)=>{if(e)throw e;o.emit("notification",t)})),Q.isManifestV3&&o.push((0,ee.default)()),o.push((0,ne.default)({origin:e})),n&&o.push((0,se.default)({tabId:n})),o.push((0,te.default)({origin:e})),o.push(this.permissionLogController.createMiddleware()),o.push((0,Ie.default)({trackEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),getMetricsState:this.metaMetricsController.store.getState.bind(this.metaMetricsController.store)})),t===O.SubjectType.Website&&o.push((0,oe.default)({location:r.url,registerOnboarding:this.onboardingController.registerOnboarding})),o.push((0,re.createMethodMiddleware)({origin:e,subjectType:t,addSubjectMetadata:this.subjectMetadataController.addSubjectMetadata.bind(this.subjectMetadataController),getProviderState:this.getProviderState.bind(this),getUnlockPromise:this.appStateController.getUnlockPromise.bind(this.appStateController),handleWatchAssetRequest:this.tokensController.watchAsset.bind(this.tokensController),requestUserApproval:this.approvalController.addAndShowApprovalRequest.bind(this.approvalController),sendMetrics:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),getAccounts:this.getPermittedAccounts.bind(this,e),getPermissionsForOrigin:this.permissionController.getPermissions.bind(this.permissionController,e),hasPermission:this.permissionController.hasPermission.bind(this.permissionController,e),requestAccountsPermission:this.permissionController.requestPermissions.bind(this.permissionController,{origin:e},{eth_accounts:{}}),requestPermissionsForOrigin:this.permissionController.requestPermissions.bind(this.permissionController,{origin:e}),addCustomRpc:async({chainId:e,blockExplorerUrl:t,ticker:r,chainName:n,rpcUrl:s}={})=>{await this.preferencesController.upsertToFrequentRpcList(s,e,r,n,{blockExplorerUrl:t})},findCustomRpcBy:this.findCustomRpcBy.bind(this),getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),getCurrentRpcUrl:this.networkController.getCurrentRpcUrl.bind(this.networkController),setProviderType:this.networkController.setProviderType.bind(this.networkController),updateRpcTarget:({rpcUrl:e,chainId:t,ticker:r,nickname:n})=>{this.networkController.setRpcTarget(e,t,r,n)},getWeb3ShimUsageState:this.alertController.getWeb3ShimUsageState.bind(this.alertController),setWeb3ShimUsageRecorded:this.alertController.setWeb3ShimUsageRecorded.bind(this.alertController)})),t!==O.SubjectType.Internal&&o.push(this.permissionController.createPermissionMiddleware({origin:e})),o.push(this.metamaskMiddleware),o.push((0,h.providerAsMiddleware)(s)),o}setupPublicConfig(e){const t=(0,a.storeAsStream)(this.publicConfigStore);(0,o.default)(t,e,(e=>{t.destroy(),e&&m.default.error(e)}))}addConnection(e,{engine:t}){if(e===H.ORIGIN_METAMASK)return null;this.connections[e]||(this.connections[e]={});const r=(0,k.default)();return this.connections[e][r]={engine:t},r}removeConnection(e,t){const r=this.connections[e];r&&(delete r[t],0===Object.keys(r).length&&delete this.connections[e])}removeAllConnections(e){const t=this.connections[e];t&&Object.keys(t).forEach((t=>{this.removeConnection(e,t)}))}notifyConnections(e,t){const r=this.connections[e];r&&Object.values(r).forEach((e=>{e.engine&&e.engine.emit("notification",t)}))}notifyAllConnections(e){const t="function"==typeof e?t=>e(t):()=>e;Object.keys(this.connections).forEach((e=>{Object.values(this.connections[e]).forEach((async r=>{r.engine&&r.engine.emit("notification",await t(e))}))}))}async _onKeyringControllerUpdate(e){const{keyrings:t,encryptionKey:r,encryptionSalt:n}=e,s=t.reduce(((e,{accounts:t})=>e.concat(t)),[]);Q.isManifestV3&&await R.default.storage.session.set({loginToken:r,loginSalt:n}),s.length&&(this.preferencesController.syncAddresses(s),this.accountTracker.syncWithAddresses(s))}_onUnlock(){this.notifyAllConnections((async e=>({method:Oe.NOTIFICATION_NAMES.unlockStateChanged,params:{isUnlocked:!0,accounts:await this.getPermittedAccounts(e)}}))),this.unMarkPasswordForgotten(),this.emit("unlock")}_onLock(){this.notifyAllConnections({method:Oe.NOTIFICATION_NAMES.unlockStateChanged,params:{isUnlocked:!1}}),this.emit("lock")}_onStateUpdate(e){this.isClientOpenAndUnlocked=e.isUnlocked&&this._isClientOpen,this.notifyAllConnections({method:Oe.NOTIFICATION_NAMES.chainChanged,params:this.getProviderNetworkState(e)})}privateSendUpdate(){this.emit("update",this.getState())}isUnlocked(){return this.keyringController.memStore.getState().isUnlocked}getExternalPendingTransactions(e){return this.smartTransactionsController.getTransactions({addressFrom:e,status:"pending"})}async getPendingNonce(e){const{nonceDetails:t,releaseLock:r}=await this.txController.nonceTracker.getNonceLock(e),n=t.params.highestSuggested;return r(),n}async getNextNonce(e){const t=await this.txController.nonceTracker.getNonceLock(e);return t.releaseLock(),t.nextNonce}async updateAndSetCustomRpc(e,t,r="ETH",n,s){return this.networkController.setRpcTarget(e,t,r,n,s),await this.preferencesController.upsertToFrequentRpcList(e,t,r,n,s),e}async setCustomRpc(e,t,r="ETH",n="",s={}){const o=this.preferencesController.getFrequentRpcListDetail().find((t=>e===t.rpcUrl));return o?this.networkController.setRpcTarget(o.rpcUrl,o.chainId,o.ticker,o.nickname,s):(this.networkController.setRpcTarget(e,t,r,n,s),await this.preferencesController.upsertToFrequentRpcList(e,t,r,n,s)),e}async delCustomRpc(e){await this.preferencesController.removeFromFrequentRpcList(e)}findCustomRpcBy(e){const t=this.preferencesController.getFrequentRpcListDetail();for(const r of t)for(const t of Object.keys(e))if(r[t]===e[t])return r;return null}async setLedgerTransportPreference(e){if(!this.canUseHardwareWallets())return undefined;const t=this.preferencesController.getLedgerTransportPreference(),r=this.preferencesController.setLedgerTransportPreference(e),n=await this.getKeyringForDevice(U.HardwareDeviceNames.ledger);return null!=n&&n.updateTransportMethod?n.updateTransportMethod(r).catch((e=>{throw this.preferencesController.setLedgerTransportPreference(t),e})):undefined}recordFirstTimeInfo(e){if(!("firstTimeInfo"in e)){const t=this.platform.getVersion();e.firstTimeInfo={version:t,date:Date.now()}}}set isClientOpen(e){this._isClientOpen=e,this.detectTokensController.isOpen=e}onClientClosed(){try{this.gasFeeController.stopPolling(),this.appStateController.clearPollingTokens()}catch(e){console.error(e)}}onEnvironmentTypeClosed(e){const t=H.POLLING_TOKEN_ENVIRONMENT_TYPES[e];this.appStateController.store.getState()[t].forEach((e=>{this.gasFeeController.disconnectPoller(e),this.appStateController.removePollingToken(e,t)}))}safelistPhishingDomain(e){return this.phishingController.bypass(e)}setLocked(){var e;const[t]=this.keyringController.getKeyringsByType(U.HardwareKeyringTypes.trezor);t&&t.dispose();const[r]=this.keyringController.getKeyringsByType(U.HardwareKeyringTypes.ledger);return null==r||null===(e=r.destroy)||void 0===e||e.call(r),Q.isManifestV3&&this.clearLoginArtifacts(),this.keyringController.setLocked()}async securityProviderRequest(e,t){const{currentLocale:r,transactionSecurityCheckEnabled:n}=this.preferencesController.store.getState(),s=Number((0,J.hexToDecimal)(this.networkController.getCurrentChainId()));if(n)try{return await(0,Re.securityProviderCheck)(e,t,s,r)}catch(e){throw m.default.error(e.message),e}return null}}r.default=Ke}).call(this)}).call(this,e("_process"),e("buffer").Buffer)}}},{package:"$root$",file:"app/scripts/metamask-controller.js"}],[89,{lodash:2731},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:2,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=2;try{"etherscan"===t.data.config.provider.type&&(t.data.config.provider.type="rpc",t.data.config.provider.rpcTarget="https://rpc.metamask.io/")}catch(e){}return Promise.resolve(t)}};r.default=s}}},{package:"$root$",file:"app/scripts/migrations/002.js"}],[9,{"../../../shared/modules/string-utils":3241},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("../../../shared/modules/string-utils");r.default=class{constructor(e={}){const{preferencesController:t,addressBookController:r,trackMetaMetricsEvent:n}=e;this.preferencesController=t,this.addressBookController=r,this._trackMetaMetricsEvent=n}async restoreUserData(e){const t=this.preferencesController.store.getState(),{preferences:r,addressBook:n}=JSON.parse(e);r&&(r.identities=t.identities,r.lostIdentities=t.lostIdentities,r.selectedAddress=t.selectedAddress,this.preferencesController.store.updateState(r)),n&&this.addressBookController.update(n,!0),r&&n&&this._trackMetaMetricsEvent({event:"User Data Imported",category:"Backup"})}async backupUserData(){const e={preferences:{...this.preferencesController.store.getState()},addressBook:{...this.addressBookController.state}};delete e.preferences.identities,delete e.preferences.lostIdentities,delete e.preferences.selectedAddress;const t=JSON.stringify(e),r=new Date,s=e=>(0,n.prependZero)(e,2);return{fileName:`MetaMaskUserData.${r.getFullYear()}_${s(r.getMonth()+1)}_${s(r.getDay())}_${s(r.getHours())}_${s(r.getMinutes())}_${s(r.getDay())}.json`,data:t}}}}}},{package:"$root$",file:"app/scripts/controllers/backup.js"}],[90,{lodash:2731},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:3,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=3;try{"https://rawtestrpc.metamask.io/"===t.data.config.provider.rpcTarget&&(t.data.config.provider.rpcTarget="https://testrpc.metamask.io/")}catch(e){}return Promise.resolve(t)}};r.default=s}}},{package:"$root$",file:"app/scripts/migrations/003.js"}],[91,{lodash:2731},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:4,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=4;try{if("rpc"!==t.data.config.provider.type)return Promise.resolve(t);switch(t.data.config.provider.rpcTarget){case"https://testrpc.metamask.io/":t.data.config.provider={type:"testnet"};break;case"https://rpc.metamask.io/":t.data.config.provider={type:"mainnet"}}}catch(e){}return Promise.resolve(t)}};r.default=s}}},{package:"$root$",file:"app/scripts/migrations/004.js"}],[92,{lodash:2731},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:5,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=5;try{const e=function(e){const{config:t}=e,r={...e,KeyringController:{vault:e.vault,selectedAccount:t.selectedAccount,walletNicknames:e.walletNicknames}};return delete r.vault,delete r.walletNicknames,delete r.config.selectedAccount,r}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #5${e.stack}`)}return Promise.resolve(t)}};r.default=s}}},{package:"$root$",file:"app/scripts/migrations/005.js"}],[93,{lodash:2731},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:6,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=6;try{const e=function(e){const t=e.KeyringController,r={...e,PreferencesController:{selectedAddress:t.selectedAccount}};return delete r.KeyringController.selectedAccount,r}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #6${e.stack}`)}return Promise.resolve(t)}};r.default=s}}},{package:"$root$",file:"app/scripts/migrations/006.js"}],[94,{lodash:2731},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:7,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=7;try{const e=function(e){const t={...e,TransactionManager:{transactions:e.transactions||[],gasMultiplier:e.gasMultiplier||1}};return delete t.transactions,delete t.gasMultiplier,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #7${e.stack}`)}return Promise.resolve(t)}};r.default=s}}},{package:"$root$",file:"app/scripts/migrations/007.js"}],[95,{lodash:2731},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:8,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=8;try{const e=function(e){const t={...e,NoticeController:{noticesList:e.noticesList||[]}};return delete t.noticesList,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #8${e.stack}`)}return Promise.resolve(t)}};r.default=s}}},{package:"$root$",file:"app/scripts/migrations/008.js"}],[950,{"@metamask/base-controller":955,"@metamask/controller-utils":996},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.AddressBookController=void 0;const n=e("@metamask/controller-utils"),s=e("@metamask/base-controller");class o extends s.BaseController{constructor(e,t){super(e,t),this.name="AddressBookController",this.defaultState={addressBook:{}},this.initialize()}clear(){this.update({addressBook:{}})}delete(e,t){if(t=(0,n.toChecksumHexAddress)(t),!(0,n.isValidHexAddress)(t)||!this.state.addressBook[e]||!this.state.addressBook[e][t])return!1;const r=Object.assign({},this.state.addressBook);return delete r[e][t],0===Object.keys(r[e]).length&&delete r[e],this.update({addressBook:r}),!0}set(e,t,r="1",s=""){if(e=(0,n.toChecksumHexAddress)(e),!(0,n.isValidHexAddress)(e))return!1;const o={address:e,chainId:r,isEns:!1,memo:s,name:t},i=(0,n.normalizeEnsName)(t);return i&&(o.name=i,o.isEns=!0),this.update({addressBook:Object.assign(Object.assign({},this.state.addressBook),{[r]:Object.assign(Object.assign({},this.state.addressBook[r]),{[e]:o})})}),!0}}r.AddressBookController=o,r.default=o}}},{package:"@metamask/address-book-controller",file:"node_modules/@metamask/address-book-controller/dist/AddressBookController.js"}],[951,{"./AddressBookController":950},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){n===undefined&&(n=r);var s=Object.getOwnPropertyDescriptor(t,r);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,s)}:function(e,t,r,n){n===undefined&&(n=r),e[n]=t[r]}),s=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(r,"__esModule",{value:!0}),s(e("./AddressBookController"),r)}}},{package:"@metamask/address-book-controller",file:"node_modules/@metamask/address-book-controller/dist/index.js"}],[952,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.BaseController=void 0;class n{constructor(e={},t={}){this.defaultConfig={},this.defaultState={},this.disabled=!1,this.name="BaseController",this.internalConfig=this.defaultConfig,this.internalState=this.defaultState,this.internalListeners=[],this.initialState=t,this.initialConfig=e}initialize(){return this.internalState=this.defaultState,this.internalConfig=this.defaultConfig,this.configure(this.initialConfig),this.update(this.initialState),this}get config(){return this.internalConfig}get state(){return this.internalState}configure(e,t=!1,r=!0){if(r){this.internalConfig=t?e:Object.assign(this.internalConfig,e);for(const e in this.internalConfig)void 0!==this.internalConfig[e]&&(this[e]=this.internalConfig[e])}else for(const t in e)void 0!==this.internalConfig[t]&&(this.internalConfig[t]=e[t],this[t]=e[t])}notify(){this.disabled||this.internalListeners.forEach((e=>{e(this.internalState)}))}subscribe(e){this.internalListeners.push(e)}unsubscribe(e){const t=this.internalListeners.findIndex((t=>e===t));return t>-1&&this.internalListeners.splice(t,1),t>-1}update(e,t=!1){this.internalState=t?Object.assign({},e):Object.assign({},this.internalState,e),this.notify()}}r.BaseController=n,r.default=n}}},{package:"@metamask/address-book-controller>@metamask/base-controller",file:"node_modules/@metamask/address-book-controller/node_modules/@metamask/base-controller/dist/BaseController.js"}],[953,{immer:2493},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.getPersistentState=r.getAnonymizedState=r.BaseController=void 0;const n=e("immer");(0,n.enablePatches)();function s(e,t,r){return Object.keys(e).reduce(((n,s)=>{const o=t[s][r],i=e[s];return"function"==typeof o?n[s]=o(i):o&&(n[s]=i),n}),{})}r.BaseController=class{constructor({messenger:e,metadata:t,name:r,state:n}){this.messagingSystem=e,this.name=r,this.internalState=n,this.metadata=t,this.messagingSystem.registerActionHandler(`${r}:getState`,(()=>this.state))}get state(){return this.internalState}set state(e){throw new Error("Controller state cannot be directly mutated; use 'update' method instead.")}update(e){const[t,r]=n.produceWithPatches(this.internalState,e);this.internalState=t,this.messagingSystem.publish(`${this.name}:stateChange`,t,r)}destroy(){this.messagingSystem.clearEventSubscriptions(`${this.name}:stateChange`)}},r.getAnonymizedState=function(e,t){return s(e,t,"anonymous")},r.getPersistentState=function(e,t){return s(e,t,"persist")}}}},{package:"@metamask/address-book-controller>@metamask/base-controller",file:"node_modules/@metamask/address-book-controller/node_modules/@metamask/base-controller/dist/BaseControllerV2.js"}],[954,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.ControllerMessenger=r.RestrictedControllerMessenger=void 0;class n{constructor({controllerMessenger:e,name:t,allowedActions:r,allowedEvents:n}){this.controllerMessenger=e,this.controllerName=t,this.allowedActions=r||null,this.allowedEvents=n||null}registerActionHandler(e,t){if(!e.startsWith(`${this.controllerName}:`))throw new Error(`Only allowed registering action handlers prefixed by '${this.controllerName}:'`);this.controllerMessenger.registerActionHandler(e,t)}unregisterActionHandler(e){if(!e.startsWith(`${this.controllerName}:`))throw new Error(`Only allowed unregistering action handlers prefixed by '${this.controllerName}:'`);this.controllerMessenger.unregisterActionHandler(e)}call(e,...t){if(null===this.allowedActions)throw new Error("No actions allowed");if(!this.allowedActions.includes(e))throw new Error(`Action missing from allow list: ${e}`);return this.controllerMessenger.call(e,...t)}publish(e,...t){if(!e.startsWith(`${this.controllerName}:`))throw new Error(`Only allowed publishing events prefixed by '${this.controllerName}:'`);this.controllerMessenger.publish(e,...t)}subscribe(e,t,r){if(null===this.allowedEvents)throw new Error("No events allowed");if(!this.allowedEvents.includes(e))throw new Error(`Event missing from allow list: ${e}`);return r?this.controllerMessenger.subscribe(e,t,r):this.controllerMessenger.subscribe(e,t)}unsubscribe(e,t){if(null===this.allowedEvents)throw new Error("No events allowed");if(!this.allowedEvents.includes(e))throw new Error(`Event missing from allow list: ${e}`);this.controllerMessenger.unsubscribe(e,t)}clearEventSubscriptions(e){if(!e.startsWith(`${this.controllerName}:`))throw new Error(`Only allowed clearing events prefixed by '${this.controllerName}:'`);this.controllerMessenger.clearEventSubscriptions(e)}}r.RestrictedControllerMessenger=n;r.ControllerMessenger=class{constructor(){this.actions=new Map,this.events=new Map,this.eventPayloadCache=new Map}registerActionHandler(e,t){if(this.actions.has(e))throw new Error(`A handler for ${e} has already been registered`);this.actions.set(e,t)}unregisterActionHandler(e){this.actions.delete(e)}clearActions(){this.actions.clear()}call(e,...t){const r=this.actions.get(e);if(!r)throw new Error(`A handler for ${e} has not been registered`);return r(...t)}publish(e,...t){const r=this.events.get(e);if(r)for(const[e,n]of r.entries())if(n){const r=this.eventPayloadCache.get(e),s=n(...t);s!==r&&(this.eventPayloadCache.set(e,s),e(s,r))}else e(...t)}subscribe(e,t,r){let n=this.events.get(e);n||(n=new Map,this.events.set(e,n)),n.set(t,r)}unsubscribe(e,t){const r=this.events.get(e);if(!r||!r.has(t))throw new Error(`Subscription not found for event: ${e}`);r.get(t)&&this.eventPayloadCache.delete(t),r.delete(t)}clearEventSubscriptions(e){this.events.delete(e)}clearSubscriptions(){this.events.clear()}getRestricted({name:e,allowedActions:t,allowedEvents:r}){return new n({controllerMessenger:this,name:e,allowedActions:t,allowedEvents:r})}}}}},{package:"@metamask/address-book-controller>@metamask/base-controller",file:"node_modules/@metamask/address-book-controller/node_modules/@metamask/base-controller/dist/ControllerMessenger.js"}],[955,{"./BaseController":952,"./BaseControllerV2":953,"./ControllerMessenger":954},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){n===undefined&&(n=r);var s=Object.getOwnPropertyDescriptor(t,r);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,s)}:function(e,t,r,n){n===undefined&&(n=r),e[n]=t[r]}),s=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(r,"__esModule",{value:!0}),r.getPersistentState=r.getAnonymizedState=r.BaseControllerV2=r.BaseController=void 0;var o=e("./BaseController");Object.defineProperty(r,"BaseController",{enumerable:!0,get:function(){return o.BaseController}});var i=e("./BaseControllerV2");Object.defineProperty(r,"BaseControllerV2",{enumerable:!0,get:function(){return i.BaseController}}),Object.defineProperty(r,"getAnonymizedState",{enumerable:!0,get:function(){return i.getAnonymizedState}}),Object.defineProperty(r,"getPersistentState",{enumerable:!0,get:function(){return i.getPersistentState}}),s(e("./ControllerMessenger"),r)}}},{package:"@metamask/address-book-controller>@metamask/base-controller",file:"node_modules/@metamask/address-book-controller/node_modules/@metamask/base-controller/dist/index.js"}],[956,{"@metamask/base-controller":961},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.AnnouncementController=void 0;const n=e("@metamask/base-controller"),s={announcements:{}};class o extends n.BaseController{constructor(e,t){super(e,t||s),this.initialize(),this._addAnnouncements()}_addAnnouncements(){const e={},{allAnnouncements:t}=this.config;Object.values(t).forEach((t=>{e[t.id]=this.state.announcements[t.id]?this.state.announcements[t.id]:Object.assign(Object.assign({},t),{isShown:!1})})),this.update({announcements:e})}updateViewed(e){const t=this.state.announcements;for(const r of Object.keys(e).map(Number))t[r].isShown=e[r];this.update({announcements:t},!0)}}r.AnnouncementController=o}}},{package:"@metamask/announcement-controller",file:"node_modules/@metamask/announcement-controller/dist/AnnouncementController.js"}],[957,{"./AnnouncementController":956},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){n===undefined&&(n=r);var s=Object.getOwnPropertyDescriptor(t,r);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,s)}:function(e,t,r,n){n===undefined&&(n=r),e[n]=t[r]}),s=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(r,"__esModule",{value:!0}),s(e("./AnnouncementController"),r)}}},{package:"@metamask/announcement-controller",file:"node_modules/@metamask/announcement-controller/dist/index.js"}],[958,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.BaseController=void 0;class n{constructor(e={},t={}){this.defaultConfig={},this.defaultState={},this.disabled=!1,this.name="BaseController",this.internalConfig=this.defaultConfig,this.internalState=this.defaultState,this.internalListeners=[],this.initialState=t,this.initialConfig=e}initialize(){return this.internalState=this.defaultState,this.internalConfig=this.defaultConfig,this.configure(this.initialConfig),this.update(this.initialState),this}get config(){return this.internalConfig}get state(){return this.internalState}configure(e,t=!1,r=!0){if(r){this.internalConfig=t?e:Object.assign(this.internalConfig,e);for(const e in this.internalConfig)void 0!==this.internalConfig[e]&&(this[e]=this.internalConfig[e])}else for(const t in e)void 0!==this.internalConfig[t]&&(this.internalConfig[t]=e[t],this[t]=e[t])}notify(){this.disabled||this.internalListeners.forEach((e=>{e(this.internalState)}))}subscribe(e){this.internalListeners.push(e)}unsubscribe(e){const t=this.internalListeners.findIndex((t=>e===t));return t>-1&&this.internalListeners.splice(t,1),t>-1}update(e,t=!1){this.internalState=t?Object.assign({},e):Object.assign({},this.internalState,e),this.notify()}}r.BaseController=n,r.default=n}}},{package:"@metamask/announcement-controller>@metamask/base-controller",file:"node_modules/@metamask/announcement-controller/node_modules/@metamask/base-controller/dist/BaseController.js"}],[959,{immer:2493},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.getPersistentState=r.getAnonymizedState=r.BaseController=void 0;const n=e("immer");(0,n.enablePatches)();function s(e,t,r){return Object.keys(e).reduce(((n,s)=>{const o=t[s][r],i=e[s];return"function"==typeof o?n[s]=o(i):o&&(n[s]=i),n}),{})}r.BaseController=class{constructor({messenger:e,metadata:t,name:r,state:n}){this.messagingSystem=e,this.name=r,this.internalState=n,this.metadata=t,this.messagingSystem.registerActionHandler(`${r}:getState`,(()=>this.state))}get state(){return this.internalState}set state(e){throw new Error("Controller state cannot be directly mutated; use 'update' method instead.")}update(e){const[t,r]=n.produceWithPatches(this.internalState,e);this.internalState=t,this.messagingSystem.publish(`${this.name}:stateChange`,t,r)}destroy(){this.messagingSystem.clearEventSubscriptions(`${this.name}:stateChange`)}},r.getAnonymizedState=function(e,t){return s(e,t,"anonymous")},r.getPersistentState=function(e,t){return s(e,t,"persist")}}}},{package:"@metamask/announcement-controller>@metamask/base-controller",file:"node_modules/@metamask/announcement-controller/node_modules/@metamask/base-controller/dist/BaseControllerV2.js"}],[96,{lodash:2731},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:9,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=9;try{const e=function(e){const t=(0,n.merge)({},e,{CurrencyController:{currentCurrency:e.currentFiat||e.fiatCurrency||"USD",conversionRate:e.conversionRate,conversionDate:e.conversionDate}});return delete t.currentFiat,delete t.fiatCurrency,delete t.conversionRate,delete t.conversionDate,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #9${e.stack}`)}return Promise.resolve(t)}};r.default=s}}},{package:"$root$",file:"app/scripts/migrations/009.js"}],[960,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.ControllerMessenger=r.RestrictedControllerMessenger=void 0;class n{constructor({controllerMessenger:e,name:t,allowedActions:r,allowedEvents:n}){this.controllerMessenger=e,this.controllerName=t,this.allowedActions=r||null,this.allowedEvents=n||null}registerActionHandler(e,t){if(!e.startsWith(`${this.controllerName}:`))throw new Error(`Only allowed registering action handlers prefixed by '${this.controllerName}:'`);this.controllerMessenger.registerActionHandler(e,t)}unregisterActionHandler(e){if(!e.startsWith(`${this.controllerName}:`))throw new Error(`Only allowed unregistering action handlers prefixed by '${this.controllerName}:'`);this.controllerMessenger.unregisterActionHandler(e)}call(e,...t){if(null===this.allowedActions)throw new Error("No actions allowed");if(!this.allowedActions.includes(e))throw new Error(`Action missing from allow list: ${e}`);return this.controllerMessenger.call(e,...t)}publish(e,...t){if(!e.startsWith(`${this.controllerName}:`))throw new Error(`Only allowed publishing events prefixed by '${this.controllerName}:'`);this.controllerMessenger.publish(e,...t)}subscribe(e,t,r){if(null===this.allowedEvents)throw new Error("No events allowed");if(!this.allowedEvents.includes(e))throw new Error(`Event missing from allow list: ${e}`);return r?this.controllerMessenger.subscribe(e,t,r):this.controllerMessenger.subscribe(e,t)}unsubscribe(e,t){if(null===this.allowedEvents)throw new Error("No events allowed");if(!this.allowedEvents.includes(e))throw new Error(`Event missing from allow list: ${e}`);this.controllerMessenger.unsubscribe(e,t)}clearEventSubscriptions(e){if(!e.startsWith(`${this.controllerName}:`))throw new Error(`Only allowed clearing events prefixed by '${this.controllerName}:'`);this.controllerMessenger.clearEventSubscriptions(e)}}r.RestrictedControllerMessenger=n;r.ControllerMessenger=class{constructor(){this.actions=new Map,this.events=new Map,this.eventPayloadCache=new Map}registerActionHandler(e,t){if(this.actions.has(e))throw new Error(`A handler for ${e} has already been registered`);this.actions.set(e,t)}unregisterActionHandler(e){this.actions.delete(e)}clearActions(){this.actions.clear()}call(e,...t){const r=this.actions.get(e);if(!r)throw new Error(`A handler for ${e} has not been registered`);return r(...t)}publish(e,...t){const r=this.events.get(e);if(r)for(const[e,n]of r.entries())if(n){const r=this.eventPayloadCache.get(e),s=n(...t);s!==r&&(this.eventPayloadCache.set(e,s),e(s,r))}else e(...t)}subscribe(e,t,r){let n=this.events.get(e);n||(n=new Map,this.events.set(e,n)),n.set(t,r)}unsubscribe(e,t){const r=this.events.get(e);if(!r||!r.has(t))throw new Error(`Subscription not found for event: ${e}`);r.get(t)&&this.eventPayloadCache.delete(t),r.delete(t)}clearEventSubscriptions(e){this.events.delete(e)}clearSubscriptions(){this.events.clear()}getRestricted({name:e,allowedActions:t,allowedEvents:r}){return new n({controllerMessenger:this,name:e,allowedActions:t,allowedEvents:r})}}}}},{package:"@metamask/announcement-controller>@metamask/base-controller",file:"node_modules/@metamask/announcement-controller/node_modules/@metamask/base-controller/dist/ControllerMessenger.js"}],[961,{"./BaseController":958,"./BaseControllerV2":959,"./ControllerMessenger":960},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){n===undefined&&(n=r);var s=Object.getOwnPropertyDescriptor(t,r);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,s)}:function(e,t,r,n){n===undefined&&(n=r),e[n]=t[r]}),s=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(r,"__esModule",{value:!0}),r.getPersistentState=r.getAnonymizedState=r.BaseControllerV2=r.BaseController=void 0;var o=e("./BaseController");Object.defineProperty(r,"BaseController",{enumerable:!0,get:function(){return o.BaseController}});var i=e("./BaseControllerV2");Object.defineProperty(r,"BaseControllerV2",{enumerable:!0,get:function(){return i.BaseController}}),Object.defineProperty(r,"getAnonymizedState",{enumerable:!0,get:function(){return i.getAnonymizedState}}),Object.defineProperty(r,"getPersistentState",{enumerable:!0,get:function(){return i.getPersistentState}}),s(e("./ControllerMessenger"),r)}}},{package:"@metamask/announcement-controller>@metamask/base-controller",file:"node_modules/@metamask/announcement-controller/node_modules/@metamask/base-controller/dist/index.js"}],[962,{"./errors":963,"@metamask/base-controller":991,"eth-rpc-errors":1994,nanoid:965},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.ApprovalController=void 0;const n=e("eth-rpc-errors"),s=e("nanoid"),o=e("@metamask/base-controller"),i=e("./errors"),a="ApprovalController",l={pendingApprovals:{persist:!1,anonymous:!0},pendingApprovalCount:{persist:!1,anonymous:!1}};class c extends o.BaseControllerV2{constructor({messenger:e,showApprovalRequest:t,state:r={}}){super({name:a,metadata:l,messenger:e,state:Object.assign(Object.assign({},{pendingApprovals:{},pendingApprovalCount:0}),r)}),this._approvals=new Map,this._origins=new Map,this._showApprovalRequest=t,this.registerMessageHandlers()}registerMessageHandlers(){this.messagingSystem.registerActionHandler(`${a}:clearRequests`,this.clear.bind(this)),this.messagingSystem.registerActionHandler(`${a}:addRequest`,((e,t)=>t?this.addAndShowApprovalRequest(e):this.add(e))),this.messagingSystem.registerActionHandler(`${a}:hasRequest`,this.has.bind(this)),this.messagingSystem.registerActionHandler(`${a}:acceptRequest`,this.accept.bind(this)),this.messagingSystem.registerActionHandler(`${a}:rejectRequest`,this.reject.bind(this))}addAndShowApprovalRequest(e){const t=this._add(e.origin,e.type,e.id,e.requestData);return this._showApprovalRequest(),t}add(e){return this._add(e.origin,e.type,e.id,e.requestData)}get(e){return this.state.pendingApprovals[e]}getApprovalCount(e={}){var t,r;if(!e.origin&&!e.type)throw new Error("Must specify origin, type, or both.");const{origin:n,type:s}=e;if(n&&s)return Number(Boolean(null===(t=this._origins.get(n))||void 0===t?void 0:t.has(s)));if(n)return(null===(r=this._origins.get(n))||void 0===r?void 0:r.size)||0;let o=0;for(const e of Object.values(this.state.pendingApprovals))e.type===s&&(o+=1);return o}getTotalApprovalCount(){return this.state.pendingApprovalCount}has(e={}){var t;const{id:r,origin:n,type:s}=e;if(r){if("string"!=typeof r)throw new Error("May not specify non-string id.");return this._approvals.has(r)}if(s&&"string"!=typeof s)throw new Error("May not specify non-string type.");if(n){if("string"!=typeof n)throw new Error("May not specify non-string origin.");return s?Boolean(null===(t=this._origins.get(n))||void 0===t?void 0:t.has(s)):this._origins.has(n)}if(s){for(const e of Object.values(this.state.pendingApprovals))if(e.type===s)return!0;return!1}throw new Error("Must specify a valid combination of id, origin, and type.")}accept(e,t){this._deleteApprovalAndGetCallbacks(e).resolve(t)}reject(e,t){this._deleteApprovalAndGetCallbacks(e).reject(t)}clear(e){for(const t of this._approvals.keys())this.reject(t,e);this._origins.clear(),this.update((()=>({pendingApprovals:{},pendingApprovalCount:0})))}_add(e,t,r=(0,s.nanoid)(),o){var i;if(this._validateAddParams(r,e,t,o),null===(i=this._origins.get(e))||void 0===i?void 0:i.has(t))throw n.ethErrors.rpc.resourceUnavailable(((e,t)=>`Request of type '${t}' already pending for origin ${e}. Please wait.`)(e,t));return new Promise(((n,s)=>{this._approvals.set(r,{resolve:n,reject:s}),this._addPendingApprovalOrigin(e,t),this._addToStore(r,e,t,o)}))}_validateAddParams(e,t,r,s){let o=null;if(e&&"string"==typeof e?this._approvals.has(e)?o=`Approval request with id '${e}' already exists.`:t&&"string"==typeof t?r&&"string"==typeof r?s&&("object"!=typeof s||Array.isArray(s))&&(o="Request data must be a plain object if specified."):o="Must specify non-empty string type.":o="Must specify non-empty string origin.":o="Must specify non-empty string id.",o)throw n.ethErrors.rpc.internal(o)}_addPendingApprovalOrigin(e,t){const r=this._origins.get(e)||new Set;r.add(t),this._origins.has(e)||this._origins.set(e,r)}_addToStore(e,t,r,n){const s={id:e,origin:t,type:r,time:Date.now(),requestData:n||null};this.update((t=>{t.pendingApprovals[e]=s,t.pendingApprovalCount=Object.keys(t.pendingApprovals).length}))}_delete(e){this._approvals.delete(e);const{origin:t,type:r}=this.state.pendingApprovals[e];this._origins.get(t).delete(r),this._isEmptyOrigin(t)&&this._origins.delete(t),this.update((t=>{delete t.pendingApprovals[e],t.pendingApprovalCount=Object.keys(t.pendingApprovals).length}))}_deleteApprovalAndGetCallbacks(e){const t=this._approvals.get(e);if(!t)throw new i.ApprovalRequestNotFoundError(e);return this._delete(e),t}_isEmptyOrigin(e){var t;return!(null===(t=this._origins.get(e))||void 0===t?void 0:t.size)}}r.ApprovalController=c,r.default=c}}},{package:"@metamask/approval-controller",file:"node_modules/@metamask/approval-controller/dist/ApprovalController.js"}],[963,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.ApprovalRequestNotFoundError=void 0;class n extends Error{constructor(e){super(`Approval request with id '${e}' not found.`)}}r.ApprovalRequestNotFoundError=n}}},{package:"@metamask/approval-controller",file:"node_modules/@metamask/approval-controller/dist/errors.js"}],[964,{"./ApprovalController":962,"./errors":963},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){n===undefined&&(n=r);var s=Object.getOwnPropertyDescriptor(t,r);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,s)}:function(e,t,r,n){n===undefined&&(n=r),e[n]=t[r]}),s=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(r,"__esModule",{value:!0}),s(e("./ApprovalController"),r),s(e("./errors"),r)}}},{package:"@metamask/approval-controller",file:"node_modules/@metamask/approval-controller/dist/index.js"}],[965,{"./url-alphabet/index.cjs":966},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){let{urlAlphabet:n}=e("./url-alphabet/index.cjs"),s=e=>crypto.getRandomValues(new Uint8Array(e)),o=(e,t,r)=>{let n=(2<<Math.log(e.length-1)/Math.LN2)-1,s=-~(1.6*n*t/e.length);return(o=t)=>{let i="";for(;;){let t=r(s),a=s;for(;a--;)if(i+=e[t[a]&n]||"",i.length===o)return i}}};t.exports={nanoid:(e=21)=>crypto.getRandomValues(new Uint8Array(e)).reduce(((e,t)=>e+=(t&=63)<36?t.toString(36):t<62?(t-26).toString(36).toUpperCase():t>62?"-":"_"),""),customAlphabet:(e,t=21)=>o(e,t,s),customRandom:o,urlAlphabet:n,random:s}}}},{package:"@metamask/approval-controller>nanoid",file:"node_modules/@metamask/approval-controller/node_modules/nanoid/index.browser.cjs"}],[966,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){t.exports={urlAlphabet:"useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict"}}}},{package:"@metamask/approval-controller>nanoid",file:"node_modules/@metamask/approval-controller/node_modules/nanoid/url-alphabet/index.cjs"}],[97,{lodash:2731},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:10,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=10;try{const e=function(e){const t=(0,n.merge)({},e,{ShapeShiftController:{shapeShiftTxList:e.shapeShiftTxList||[]}});return delete t.shapeShiftTxList,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #10${e.stack}`)}return Promise.resolve(t)}};r.default=s}}},{package:"$root$",file:"app/scripts/migrations/010.js"}],[98,{lodash:2731},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:11,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=11;try{const e=function(e){const t=e;return delete t.TOSHash,delete t.isDisclaimerConfirmed,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #11${e.stack}`)}return Promise.resolve(t)}};r.default=s}}},{package:"$root$",file:"app/scripts/migrations/011.js"}],[99,{lodash:2731},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:12,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=12;try{const e=function(e){const t=e;return t.NoticeController.noticesList.forEach((e=>{e.read&&(e.body="")})),t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #12${e.stack}`)}return Promise.resolve(t)}};r.default=s}}},{package:"$root$",file:"app/scripts/migrations/012.js"}],[992,{buffer:1768},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){(function(e){(function(){Object.defineProperty(r,"__esModule",{value:!0}),r.generateSalt=r.serializeBufferForStorage=r.serializeBufferFromStorage=r.keyFromPassword=r.exportKey=r.importKey=r.decryptWithKey=r.decryptWithDetail=r.decrypt=r.encryptWithKey=r.encryptWithDetail=r.encrypt=void 0;const t="AES-GCM",n="utf-8";async function s(e,t,r,n=d()){const s=r||await c(e,n),i=await o(s,t);return i.salt=n,JSON.stringify(i)}async function o(r,s){const o=JSON.stringify(s),i=e.from(o,n),a=global.crypto.getRandomValues(new Uint8Array(16)),l=await global.crypto.subtle.encrypt({name:t,iv:a},r,i),c=new Uint8Array(l),d=e.from(a).toString("base64");return{data:e.from(c).toString("base64"),iv:d}}async function i(e,t,r){const n=JSON.parse(t),{salt:s}=n,o=r||await c(e,s);return await a(o,n)}async function a(r,s){const o=e.from(s.data,"base64"),i=e.from(s.iv,"base64");let a;try{const s=await crypto.subtle.decrypt({name:t,iv:i},r,o),l=new Uint8Array(s),c=e.from(l).toString(n);a=JSON.parse(c)}catch(e){throw new Error("Incorrect password")}return a}async function l(e){const t=await window.crypto.subtle.exportKey("jwk",e);return JSON.stringify(t)}async function c(r,s,o=!1){const i=e.from(r,n),a=e.from(s,"base64"),l=await global.crypto.subtle.importKey("raw",i,{name:"PBKDF2"},!1,["deriveBits","deriveKey"]);return await global.crypto.subtle.deriveKey({name:"PBKDF2",salt:a,iterations:1e4,hash:"SHA-256"},l,{name:t,length:256},o,["encrypt","decrypt"])}function d(e=32){const t=new Uint8Array(e);global.crypto.getRandomValues(t);return btoa(String.fromCharCode.apply(null,t))}r.encrypt=s,r.encryptWithDetail=async function(e,t,r=d()){const n=await c(e,r,!0),o=await l(n);return{vault:await s(e,t,n,r),exportedKeyString:o}},r.encryptWithKey=o,r.decrypt=i,r.decryptWithDetail=async function(e,t){const r=JSON.parse(t),{salt:n}=r,s=await c(e,n,!0);return{exportedKeyString:await l(s),vault:await i(e,t,s),salt:n}},r.decryptWithKey=a,r.importKey=async function(e){return await window.crypto.subtle.importKey("jwk",JSON.parse(e),t,!0,["encrypt","decrypt"])},r.exportKey=l,r.keyFromPassword=c,r.serializeBufferFromStorage=function(e){const t="0x"===e.slice(0,2)?e.slice(2):e,r=new Uint8Array(t.length/2);for(let e=0;e<t.length;e+=2){const n=t.substr(e,2);r[e/2]=parseInt(n,16)}return r},r.serializeBufferForStorage=function(e){let t="0x";return e.forEach((e=>{t+=function(e){let t=e.toString(16);for(;t.length<2;)t=`0${t}`;return t}(e)})),t},r.generateSalt=d}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@metamask/rpc-methods>@metamask/browser-passworder",file:"node_modules/@metamask/browser-passworder/dist/index.js"}],[999,{"@ethereumjs/util":314,"@metamask/eth-sig-util":1050,"@metamask/scure-bip39":1163,"@metamask/scure-bip39/dist/wordlists/english":1164,buffer:1768,"ethereum-cryptography/hdkey":1005,"ethereum-cryptography/keccak":1006,"ethereum-cryptography/utils":1007},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){(function(r){(function(){const{HDKey:n}=e("ethereum-cryptography/hdkey"),{keccak256:s}=e("ethereum-cryptography/keccak"),{bytesToHex:o}=e("ethereum-cryptography/utils"),{stripHexPrefix:i,privateToPublic:a,publicToAddress:l,ecsign:c,arrToBufArr:d,bufferToHex:h}=e("@ethereumjs/util"),u=e("@metamask/scure-bip39"),{wordlist:p}=e("@metamask/scure-bip39/dist/wordlists/english"),{concatSig:g,decrypt:m,getEncryptionPublicKey:f,normalize:C,personalSign:y,signTypedData:b,SignTypedDataVersion:w}=e("@metamask/eth-sig-util"),k="HD Key Tree";class v{constructor(e={}){this.type=k,this._wallets=[],this.deserialize(e)}generateRandomMnemonic(){this._initFromMnemonic(u.generateMnemonic(p))}_uint8ArrayToString(e){return Array.from(new Uint16Array(new Uint8Array(e).buffer)).map((e=>p[e])).join(" ")}_stringToUint8Array(e){const t=e.split(" ").map((e=>p.indexOf(e)));return new Uint8Array(new Uint16Array(t).buffer)}_mnemonicToUint8Array(e){let t=e;if(e&&e.type&&"Buffer"===e.type&&(t=e.data),"string"==typeof t||r.isBuffer(t)||Array.isArray(t)){let e=t;return Array.isArray(t)?e=r.from(t).toString():r.isBuffer(t)&&(e=t.toString()),this._stringToUint8Array(e)}return t instanceof Object&&!(t instanceof Uint8Array)?Uint8Array.from(Object.values(t)):t}serialize(){const e=this._uint8ArrayToString(this.mnemonic),t=new TextEncoder("utf-8").encode(e);return Promise.resolve({mnemonic:Array.from(t),numberOfAccounts:this._wallets.length,hdPath:this.hdPath})}deserialize(e={}){if(e.numberOfAccounts&&!e.mnemonic)throw new Error("Eth-Hd-Keyring: Deserialize method cannot be called with an opts value for numberOfAccounts and no menmonic");if(this.root)throw new Error("Eth-Hd-Keyring: Secret recovery phrase already provided");return this.opts=e,this._wallets=[],this.mnemonic=null,this.root=null,this.hdPath=e.hdPath||"m/44'/60'/0'/0",e.mnemonic&&this._initFromMnemonic(e.mnemonic),e.numberOfAccounts?this.addAccounts(e.numberOfAccounts):Promise.resolve([])}addAccounts(e=1){if(!this.root)throw new Error("Eth-Hd-Keyring: No secret recovery phrase provided");const t=this._wallets.length,r=[];for(let n=t;n<e+t;n++){const e=this.root.deriveChild(n);r.push(e),this._wallets.push(e)}const n=r.map((e=>this._addressfromPublicKey(e.publicKey)));return Promise.resolve(n)}getAccounts(){return this._wallets.map((e=>this._addressfromPublicKey(e.publicKey)))}async getAppKeyAddress(e,t){if(!t||"string"!=typeof t)throw new Error("'origin' must be a non-empty string");const r=this._getWalletForAccount(e,{withAppKeyOrigin:t});return C(l(r.publicKey).toString("hex"))}async exportAccount(e,t={}){const r=this._getWalletForAccount(e,t);return o(r.privateKey)}async signTransaction(e,t,r={}){const n=this._getPrivateKeyFor(e,r),s=t.sign(n);return s===undefined?t:s}async signMessage(e,t,n={}){const s=i(t),o=this._getPrivateKeyFor(e,n),a=c(r.from(s,"hex"),o);return g(a.v,a.r,a.s)}async signPersonalMessage(e,t,n={}){const s=this._getPrivateKeyFor(e,n),o=r.from(s,"hex");return y({privateKey:o,data:t})}async decryptMessage(e,t){const n=this._getWalletForAccount(e),{privateKey:s}=n,o=r.from(s).toString("hex");return m({privateKey:o,encryptedData:t})}async signTypedData(e,t,r={version:w.V1}){const n=Object.keys(w).includes(r.version)?r.version:w.V1,s=this._getPrivateKeyFor(e,r);return b({privateKey:s,data:t,version:n})}removeAccount(e){const t=C(e);if(!this._wallets.map((({publicKey:e})=>this._addressfromPublicKey(e))).includes(t))throw new Error(`Address ${t} not found in this keyring`);this._wallets=this._wallets.filter((({publicKey:e})=>this._addressfromPublicKey(e)!==t))}async getEncryptionPublicKey(e,t={}){const r=this._getPrivateKeyFor(e,t);return f(r)}_getPrivateKeyFor(e,t={}){if(!e)throw new Error("Must specify address.");return this._getWalletForAccount(e,t).privateKey}_getWalletForAccount(e,t={}){const n=C(e);let o=this._wallets.find((({publicKey:e})=>this._addressfromPublicKey(e)===n));if(!o)throw new Error("HD Keyring - Unable to find matching address.");if(t.withAppKeyOrigin){const{privateKey:e}=o,n=r.from(t.withAppKeyOrigin,"utf8"),i=r.concat([e,n]),l=d(s(i,256));o={privateKey:l,publicKey:a(l)}}return o}_initFromMnemonic(e){if(this.root)throw new Error("Eth-Hd-Keyring: Secret recovery phrase already provided");this.mnemonic=this._mnemonicToUint8Array(e);if(!u.validateMnemonic(this.mnemonic,p))throw new Error("Eth-Hd-Keyring: Invalid secret recovery phrase provided");const t=u.mnemonicToSeedSync(this.mnemonic,p);this.hdWallet=n.fromMasterSeed(t),this.root=this.hdWallet.derive(this.hdPath)}_addressfromPublicKey(e){return h(l(r.from(e),!0)).toLowerCase()}}v.type=k,t.exports=v}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@metamask/eth-keyring-controller>@metamask/eth-hd-keyring",file:"node_modules/@metamask/eth-hd-keyring/index.js"}],[4,{"../../shared/constants/app":3203,"../../shared/constants/metametrics":3208,"../../shared/constants/time":3214,"../../shared/modules/browser-runtime.utils":3227,"../../shared/modules/mv3.utils":3235,"../../shared/modules/object.utils":3237,"./first-time-state":37,"./lib/createStreamSink":49,"./lib/ens-ipfs/setup":56,"./lib/get-first-preferred-lang-code":58,"./lib/getObjStructure":59,"./lib/local-store":60,"./lib/migrator":64,"./lib/network-store":65,"./lib/notification-manager":66,"./lib/setupSentry":84,"./lib/util":87,"./metamask-controller":88,"./migrations":167,"./platforms/extension":168,"@metamask/obs-store":1139,"debounce-stream":1896,"end-of-stream":1935,"eth-rpc-errors":1994,"extension-port-stream":2086,loglevel:2743,pump:2841,"webextension-polyfill":3187},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=I(e("end-of-stream")),s=I(e("pump")),o=I(e("debounce-stream")),i=I(e("loglevel")),a=I(e("webextension-polyfill")),l=e("@metamask/obs-store"),c=I(e("extension-port-stream")),d=e("eth-rpc-errors"),h=e("../../shared/constants/app"),u=e("../../shared/constants/time"),p=e("../../shared/constants/metametrics"),g=e("../../shared/modules/browser-runtime.utils"),m=e("../../shared/modules/mv3.utils"),f=e("../../shared/modules/object.utils"),C=I(e("./migrations")),y=I(e("./lib/migrator")),b=I(e("./platforms/extension")),w=I(e("./lib/local-store")),k=(I(e("./lib/network-store")),e("./lib/setupSentry")),v=I(e("./lib/createStreamSink")),M=O(e("./lib/notification-manager")),T=O(e("./metamask-controller")),S=I(e("./first-time-state")),A=I(e("./lib/get-first-preferred-lang-code")),E=I(e("./lib/getObjStructure")),P=I(e("./lib/ens-ipfs/setup")),_=e("./lib/util");function N(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,r=new WeakMap;return(N=function(e){return e?r:t})(e)}function O(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var r=N(t);if(r&&r.has(e))return r.get(e);var n={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if("default"!==o&&Object.prototype.hasOwnProperty.call(e,o)){var i=s?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=e[o]}return n.default=e,r&&r.set(e,n),n}function I(e){return e&&e.__esModule?e:{default:e}}const{sentry:R}=global,j={...S.default},L={[h.ENVIRONMENT_TYPE_POPUP]:!0,[h.ENVIRONMENT_TYPE_NOTIFICATION]:!0,[h.ENVIRONMENT_TYPE_FULLSCREEN]:!0},x=["trezor-connect"];i.default.setDefaultLevel("info");const U=new b.default,K=new M.default;global.METAMASK_NOTIFIER=K;let D=!1,F=!1,B=!1;const H={},q={};let $;const V=new w.default;let W;const G=new URL("https://metamask.github.io/phishing-warning/v2.0.1/"),z="ACK_KEEP_ALIVE_MESSAGE",Q="WORKER_KEEP_ALIVE_MESSAGE",{promise:J,resolve:Y,reject:X}=(0,_.deferredPromise)();let Z,ee;a.default.runtime.onConnect.addListener((async(...e)=>{await J,Z(...e)})),a.default.runtime.onConnectExternal.addListener((async(...e)=>{await J,ee(...e)})),async function(){try{const e=await async function(){const e=new y.default({migrations:C.default});e.on("error",console.warn),W=await V.get()||e.generateInitialState(j),W&&!W.data&&(W=e.generateInitialState(j),R.captureMessage("MetaMask - Empty vault found - unable to recover"));if(e.on("error",(e=>{const t=(0,E.default)(W);R.captureException(e,{extra:{vaultStructure:t}})})),W=await e.migrateData(W),!W)throw new Error("MetaMask - migrator returned undefined");return V.setMetadata(W.meta),V.set(W.data),W.data}(),t=await(0,A.default)();!function(e,t){$=new T.default({infuraProjectId:"b6bf7d3508c941499b10025c0776eaf8",showUserConfirmation:re,openPopup:ne,initState:e,initLangCode:t,platform:U,notificationManager:K,browser:a.default,getRequestAccountTabIds:()=>q,getOpenMetamaskTabsIds:()=>H,localStore:V}),(0,P.default)({getCurrentChainId:$.networkController.getCurrentChainId.bind($.networkController),getIpfsGateway:$.preferencesController.getIpfsGateway.bind($.preferencesController),provider:$.provider}),(0,s.default)((0,l.storeAsStream)($.store),(0,o.default)(1e3),(0,v.default)((e=>V.set(e))),(e=>{i.default.error("MetaMask - Persistence pipeline failed",e)})),r=$,global.stateHooks.getSentryState=function(){const e=r.getState(),t=(0,f.maskObject)({metamask:e},k.SENTRY_STATE);return{browser:window.navigator.userAgent,store:t,version:U.getVersion()}};var r;const u=()=>D||Boolean(Object.keys(H).length)||F,g=(e,t)=>{if(!1===e)$.onClientClosed();else{if(t===h.ENVIRONMENT_TYPE_FULLSCREEN&&Boolean(Object.keys(H).length))return;$.onEnvironmentTypeClosed(t)}};function C(){let e="";const t=y();t&&(e=String(t)),m.isManifestV3?(a.default.action.setBadgeText({text:e}),a.default.action.setBadgeBackgroundColor({color:"#037DD6"})):(a.default.browserAction.setBadgeText({text:e}),a.default.browserAction.setBadgeBackgroundColor({color:"#037DD6"}))}function y(){const e=$.txController.getUnapprovedTxCount(),{unapprovedMsgCount:t}=$.messageManager,{unapprovedPersonalMsgCount:r}=$.personalMessageManager,{unapprovedDecryptMsgCount:n}=$.decryptMessageManager,{unapprovedEncryptionPublicKeyMsgCount:s}=$.encryptionPublicKeyManager,{unapprovedTypedMessagesCount:o}=$.typedMessageManager;return e+t+r+n+s+o+$.approvalController.getTotalApprovalCount()+$.appStateController.waitingForUnlock.length}function b(){Object.keys($.txController.txStateManager.getUnapprovedTxList()).forEach((e=>$.txController.txStateManager.setTxStatusRejected(e))),$.messageManager.messages.filter((e=>"unapproved"===e.status)).forEach((e=>$.messageManager.rejectMsg(e.id,p.REJECT_NOTFICIATION_CLOSE_SIG))),$.personalMessageManager.messages.filter((e=>"unapproved"===e.status)).forEach((e=>$.personalMessageManager.rejectMsg(e.id,p.REJECT_NOTFICIATION_CLOSE_SIG))),$.typedMessageManager.messages.filter((e=>"unapproved"===e.status)).forEach((e=>$.typedMessageManager.rejectMsg(e.id,p.REJECT_NOTFICIATION_CLOSE_SIG))),$.decryptMessageManager.messages.filter((e=>"unapproved"===e.status)).forEach((e=>$.decryptMessageManager.rejectMsg(e.id,p.REJECT_NOTFICIATION_CLOSE))),$.encryptionPublicKeyManager.messages.filter((e=>"unapproved"===e.status)).forEach((e=>$.encryptionPublicKeyManager.rejectMsg(e.id,p.REJECT_NOTFICIATION_CLOSE))),Object.values($.approvalController.state.pendingApprovals).forEach((({id:e,type:t})=>{$.approvalController.reject(e,d.ethErrors.provider.userRejectedRequest())})),C()}Z=async e=>{var t;const r=e.name;if(x.includes(e.name))return;let s=!1;const o=(0,_.getPlatform)(),i=null!==(t=e.sender)&&void 0!==t&&t.url?new URL(e.sender.url):null;if(s=o===h.PLATFORM_FIREFOX?L[r]:(null==i?void 0:i.origin)===`chrome-extension://${a.default.runtime.id}`,s){const t=new c.default(e);if($.isClientOpen=!0,$.setupTrustedCommunication(t,e.sender),m.isManifestV3&&e.onMessage.addListener((t=>{t.name===Q&&e.postMessage({name:z})})),r===h.ENVIRONMENT_TYPE_POPUP&&(D=!0,(0,n.default)(t,(()=>{D=!1;const e=u();$.isClientOpen=e,g(e,h.ENVIRONMENT_TYPE_POPUP)}))),r===h.ENVIRONMENT_TYPE_NOTIFICATION&&(F=!0,(0,n.default)(t,(()=>{F=!1;const e=u();$.isClientOpen=e,g(e,h.ENVIRONMENT_TYPE_NOTIFICATION)}))),r===h.ENVIRONMENT_TYPE_FULLSCREEN){const r=e.sender.tab.id;H[r]=!0,(0,n.default)(t,(()=>{delete H[r];const e=u();$.isClientOpen=e,g(e,h.ENVIRONMENT_TYPE_FULLSCREEN)}))}}else if(i&&i.origin===G.origin&&i.pathname===G.pathname){const t=new c.default(e);$.setupPhishingCommunication({connectionStream:t})}else{if(e.sender&&e.sender.tab&&e.sender.url){const t=e.sender.tab.id,r=new URL(e.sender.url),{origin:n}=r;e.onMessage.addListener((e=>{e.data&&"eth_requestAccounts"===e.data.method&&(q[n]=t)}))}ee(e)}},ee=e=>{const t=new c.default(e);$.setupUntrustedCommunication({connectionStream:t,sender:e.sender})},C(),$.txController.on(T.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,C),$.messageManager.on(T.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,C),$.personalMessageManager.on(T.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,C),$.decryptMessageManager.on(T.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,C),$.encryptionPublicKeyManager.on(T.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,C),$.typedMessageManager.on(T.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,C),$.appStateController.on(T.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,C),$.controllerMessenger.subscribe(T.METAMASK_CONTROLLER_EVENTS.APPROVAL_STATE_CHANGE,C),K.on(M.NOTIFICATION_MANAGER_EVENTS.POPUP_CLOSED,(({automaticallyClosed:e})=>{e?y()>0&&re():b()}))}(e,t),m.isManifestV3||await async function(){let e;try{const t=new URL("https://metamask.github.io/phishing-warning/v2.0.1/");let r,n;t.hash="#extensionStartup",e=window.document.createElement("iframe"),e.setAttribute("src",t.href),e.setAttribute("sandbox","allow-scripts allow-same-origin");const s=new Promise(((e,t)=>{r=e,n=t}));e.addEventListener("load",r),window.document.body.appendChild(e),setTimeout((()=>n(new te)),1e3),await s}catch(e){e instanceof te?console.warn("Phishing warning page timeout; page not guaraneteed to work offline."):console.error("Failed to initialize phishing warning page",e)}finally{e&&e.remove()}}(),await(async()=>{const e=await a.default.tabs.query({url:"<all_urls>",windowType:"normal"}).then((e=>((0,g.checkForLastErrorAndLog)(),e))).catch((()=>{(0,g.checkForLastErrorAndLog)()}));for(const t of e)a.default.tabs.sendMessage(t.id,{name:h.EXTENSION_MESSAGES.READY}).then((()=>{(0,g.checkForLastErrorAndLog)()})).catch((()=>{(0,g.checkForLastErrorAndLog)()}))})(),i.default.info("MetaMask initialization complete."),Y()}catch(e){X(e)}}().catch(i.default.error);class te extends Error{constructor(){super("Timeout failed")}}async function re(){const e=await U.getActiveTabs(),t=Boolean(e.find((e=>H[e.id]))),r=e.length>0&&e[0].extData&&e[0].extData.indexOf("vivaldi_tab")>-1;if(!B&&(r||!D)&&!t){B=!0;try{await K.showPopup()}finally{B=!1}}}async function ne(){await re(),await new Promise((e=>{const t=setInterval((()=>{F||(clearInterval(t),e())}),u.SECOND)}))}const se=()=>{if($)return $.metaMetricsController.updateTraits({[p.TRAITS.INSTALL_DATE_EXT]:(new Date).toISOString().split("T")[0]}),void $.metaMetricsController.addEventBeforeMetricsOptIn({category:p.EVENT.CATEGORIES.APP,event:p.EVENT_NAMES.APP_INSTALLED,properties:{}});setTimeout((()=>{se()}),1e3)};a.default.runtime.onInstalled.addListener((({reason:e})=>{"install"===e&&(se(),U.openExtensionInBrowser())}))}}},{package:"$root$",file:"app/scripts/background.js"}]],[4],{});