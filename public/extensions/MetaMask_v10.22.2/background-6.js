LavaPack.loadBundle([[4,{"../../shared/constants/app":4120,"../../shared/constants/metametrics":4130,"../../shared/modules/browser-runtime.utils":4155,"../../shared/modules/mv3.utils":4167,"../../shared/modules/object.utils":4169,"./first-time-state":27,"./lib/createStreamSink":42,"./lib/ens-ipfs/setup":48,"./lib/get-first-preferred-lang-code":50,"./lib/getObjStructure":51,"./lib/local-store":54,"./lib/migrator":57,"./lib/network-store":58,"./lib/notification-manager":59,"./lib/setup-initial-state-hooks":81,"./lib/setupSentry":82,"./lib/util":92,"./metamask-controller":93,"./migrations":215,"./platforms/extension":216,"@metamask/controller-utils":1077,"@metamask/obs-store":1453,"@metamask/utils":1982,"debounce-stream":2777,"end-of-stream":2816,"eth-rpc-errors":2865,events:2936,"extension-port-stream":2939,loglevel:3483,pump:3661,"webextension-polyfill":4102},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.loadStateFromPersistence=le,r.setupController=ue,r.statePersistenceEvents=void 0,e("./lib/setup-initial-state-hooks");var n=L(e("events")),a=L(e("end-of-stream")),o=L(e("pump")),s=L(e("debounce-stream")),i=L(e("loglevel")),l=L(e("webextension-polyfill")),c=e("@metamask/obs-store"),u=e("@metamask/utils"),d=e("@metamask/controller-utils"),p=L(e("extension-port-stream")),f=e("eth-rpc-errors"),E=e("../../shared/constants/app"),m=e("../../shared/constants/metametrics"),g=e("../../shared/modules/browser-runtime.utils"),C=e("../../shared/modules/mv3.utils"),T=e("../../shared/modules/object.utils"),b=L(e("./migrations")),S=L(e("./lib/migrator")),_=L(e("./platforms/extension")),v=L(e("./lib/local-store")),M=(L(e("./lib/network-store")),e("./lib/setupSentry")),O=L(e("./lib/createStreamSink")),N=k(e("./lib/notification-manager")),w=k(e("./metamask-controller")),A=L(e("./first-time-state")),h=L(e("./lib/get-first-preferred-lang-code")),y=L(e("./lib/getObjStructure")),P=L(e("./lib/ens-ipfs/setup")),I=e("./lib/util");function R(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,r=new WeakMap;return(R=function(e){return e?r:t})(e)}function k(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var r=R(t);if(r&&r.has(e))return r.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if("default"!==o&&Object.prototype.hasOwnProperty.call(e,o)){var s=a?Object.getOwnPropertyDescriptor(e,o):null;s&&(s.get||s.set)?Object.defineProperty(n,o,s):n[o]=e[o]}return n.default=e,r&&r.set(e,n),n}function L(e){return e&&e.__esModule?e:{default:e}}const U=new v.default;global.stateHooks.getMostRecentPersistedState=()=>U.mostRecentRetrievedState;const{sentry:j}=global,F={...A.default},D={[E.ENVIRONMENT_TYPE_POPUP]:!0,[E.ENVIRONMENT_TYPE_NOTIFICATION]:!0,[E.ENVIRONMENT_TYPE_FULLSCREEN]:!0},x=["trezor-connect"];i.default.setLevel("info",!1);const V=new _.default,B=new N.default;let G=0,Y=!1,K=!1;const q={},$={};let H,Q;const z={};const J=new URL("https://metamask.github.io/phishing-warning/v3.0.3/"),W=1e3,X=r.statePersistenceEvents=new n.default,{promise:Z,resolve:ee,reject:te}=(0,I.deferredPromise)(),re=async()=>{const e=await l.default.tabs.query({url:"<all_urls>",windowType:"normal"}).then((e=>((0,g.checkForLastErrorAndLog)(),e))).catch((()=>{(0,g.checkForLastErrorAndLog)()}));for(const t of e)l.default.tabs.sendMessage(t.id,{name:E.EXTENSION_MESSAGES.READY}).then((()=>{(0,g.checkForLastErrorAndLog)()})).catch((()=>{(0,g.checkForLastErrorAndLog)()}))};let ne,ae;function oe(){const e=(new Date).toISOString();l.default.storage.session.set({timestamp:e})}async function se(){try{const e=await le(),t=e.data,r=await(0,h.default)();let n;if(C.isManifestV3){const e=2e3;oe(),setInterval(oe,e);const t=await l.default.storage.session.get(["isFirstMetaMaskControllerSetup"]);n=(null==t?void 0:t.isFirstMetaMaskControllerSetup)===undefined,await l.default.storage.session.set({isFirstMetaMaskControllerSetup:n})}ue(t,r,{},n,e.meta),C.isManifestV3||await async function(){let e;try{const t=new URL("https://metamask.github.io/phishing-warning/v3.0.3/");let r,n;t.hash="#extensionStartup",e=window.document.createElement("iframe"),e.setAttribute("src",t.href),e.setAttribute("sandbox","allow-scripts allow-same-origin");const a=new Promise(((e,t)=>{r=e,n=t}));e.addEventListener("load",r),window.document.body.appendChild(e),setTimeout((()=>n(new ie)),W),await a}catch(e){e instanceof ie?console.warn("Phishing warning page timeout; page not guaranteed to work offline."):console.error("Failed to initialize phishing warning page",e)}finally{e&&e.remove()}}(),await re(),i.default.info("MetaMask initialization complete."),ee()}catch(e){te(e)}}l.default.runtime.onConnect.addListener((async(...e)=>{await Z,ne(...e)})),l.default.runtime.onConnectExternal.addListener((async(...e)=>{await Z,ae(...e)}));class ie extends Error{constructor(){super("Timeout failed")}}async function le(){const e=new S.default({migrations:b.default});if(e.on("error",console.warn),Q=await U.get()||e.generateInitialState(F),Q&&!Q.data&&(Q=e.generateInitialState(F),j.captureMessage("MetaMask - Empty vault found - unable to recover")),e.on("error",(e=>{const t=(0,y.default)(Q);j.captureException(e,{extra:{vaultStructure:t}})})),Q=await e.migrateData(Q),!Q)throw new Error("MetaMask - migrator returned undefined");if(!(0,u.isObject)(Q.meta))throw new Error(`MetaMask - migrator metadata has invalid type '${typeof Q.meta}'`);if("number"!=typeof Q.meta.version)throw new Error(`MetaMask - migrator metadata version has invalid type '${typeof Q.meta.version}'`);if(!(0,u.isObject)(Q.data))throw new Error(`MetaMask - migrator data has invalid type '${typeof Q.data}'`);return U.setMetadata(Q.meta),U.set(Q.data),Q}function ce(e,t,r){if(!(0,u.hasProperty)(t.permissions,"eth_accounts"))return;const n=Object.keys(r.store.getState().identities).length,a=t.permissions.eth_accounts.caveats;if(a){const t=a[0].value.length;H.metaMetricsController.trackEvent({event:m.MetaMetricsEventName.DappViewed,category:m.MetaMetricsEventCategory.InpageProvider,referrer:{url:e},properties:{is_first_visit:!1,number_of_accounts:n,number_of_accounts_connected:t}})}}function ue(e,t,r,n,u){var g;H=new w.default({infuraProjectId:"b6bf7d3508c941499b10025c0776eaf8",showUserConfirmation:de,initState:e,initLangCode:t,platform:V,notificationManager:B,browser:l.default,getRequestAccountTabIds:()=>$,getOpenMetamaskTabsIds:()=>q,localStore:U,overrides:r,isFirstMetaMaskControllerSetup:n,currentMigrationVersion:u.version,featureFlags:{}}),(0,P.default)({getCurrentChainId:()=>H.networkController.state.providerConfig.chainId,getIpfsGateway:H.preferencesController.getIpfsGateway.bind(H.preferencesController),getUseAddressBarEnsResolution:()=>H.preferencesController.store.getState().useAddressBarEnsResolution,provider:H.provider}),(0,o.default)((0,c.storeAsStream)(H.store),(0,s.default)(1e3),(0,O.default)((async e=>{await U.set(e),X.emit("state-persisted",e)})),(e=>{i.default.error("MetaMask - Persistence pipeline failed",e)})),g=H,global.stateHooks.getSentryAppState=function(){const e=g.memStore.getState();return(0,T.maskObject)(e,M.SENTRY_BACKGROUND_STATE)};const b=()=>G>0||Boolean(Object.keys(q).length)||Y,S=(e,t)=>{if(!1===e)H.onClientClosed();else{if(t===E.ENVIRONMENT_TYPE_FULLSCREEN&&Boolean(Object.keys(q).length))return;H.onEnvironmentTypeClosed(t)}};function _(){let e="";const t=v();t&&(e=String(t)),C.isManifestV3?(l.default.action.setBadgeText({text:e}),l.default.action.setBadgeBackgroundColor({color:"#037DD6"})):(l.default.browserAction.setBadgeText({text:e}),l.default.browserAction.setBadgeBackgroundColor({color:"#037DD6"}))}function v(){let e=H.appStateController.waitingForUnlock.length+H.approvalController.getTotalApprovalCount();return H.preferencesController.getUseRequestQueue()&&(e+=H.queuedRequestController.state.queuedRequestCount),e}ne=async e=>{var t;const n=e.name;if(x.includes(e.name))return;let o=!1;const s=(0,I.getPlatform)(),i=null!==(t=e.sender)&&void 0!==t&&t.url?new URL(e.sender.url):null;if(o=s===E.PLATFORM_FIREFOX?D[n]:(null==i?void 0:i.origin)===`chrome-extension://${l.default.runtime.id}`,o){var c;const t=(null==r||null===(c=r.getPortStream)||void 0===c?void 0:c.call(r,e))||new p.default(e);if(H.isClientOpen=!0,H.setupTrustedCommunication(t,e.sender),n===E.ENVIRONMENT_TYPE_POPUP&&(G+=1,(0,a.default)(t,(()=>{G-=1;const e=b();H.isClientOpen=e,S(e,E.ENVIRONMENT_TYPE_POPUP)}))),n===E.ENVIRONMENT_TYPE_NOTIFICATION&&(Y=!0,(0,a.default)(t,(()=>{Y=!1;const e=b();H.isClientOpen=e,S(e,E.ENVIRONMENT_TYPE_NOTIFICATION)}))),n===E.ENVIRONMENT_TYPE_FULLSCREEN){const r=e.sender.tab.id;q[r]=!0,(0,a.default)(t,(()=>{delete q[r];const e=b();H.isClientOpen=e,S(e,E.ENVIRONMENT_TYPE_FULLSCREEN)}))}}else if(i&&i.origin===J.origin&&i.pathname===J.pathname){var u;const t=(null==r||null===(u=r.getPortStream)||void 0===u?void 0:u.call(r,e))||new p.default(e);H.setupPhishingCommunication({connectionStream:t})}else{if(e.sender&&e.sender.tab&&e.sender.url){const t=e.sender.tab.id,r=new URL(e.sender.url),{origin:n}=r;Object.keys(z).includes(t)||(z[t]=n);const a=H.permissionController.state.subjects[n],o=a!==undefined,s="New Tab"!==e.sender.tab.title;o&&s&&ce(n,a,H.preferencesController),e.onMessage.addListener((e=>{e.data&&e.data.method===E.MESSAGE_TYPE.ETH_REQUEST_ACCOUNTS&&($[n]=t)}))}ae(e)}},ae=e=>{var t;const n=(null==r||null===(t=r.getPortStream)||void 0===t?void 0:t.call(r,e))||new p.default(e);H.setupUntrustedCommunication({connectionStream:n,sender:e.sender})},null!=r&&r.registerConnectListeners&&r.registerConnectListeners(ne,ae),_(),H.decryptMessageController.hub.on(w.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,_),H.encryptionPublicKeyController.hub.on(w.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,_),H.signatureController.hub.on(w.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,_),H.appStateController.on(w.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,_),H.controllerMessenger.subscribe(w.METAMASK_CONTROLLER_EVENTS.APPROVAL_STATE_CHANGE,_),H.controllerMessenger.subscribe(w.METAMASK_CONTROLLER_EVENTS.QUEUED_REQUEST_STATE_CHANGE,_),H.txController.initApprovals(),B.on(N.NOTIFICATION_MANAGER_EVENTS.POPUP_CLOSED,(({automaticallyClosed:e})=>{e?v()>0&&de():(H.signatureController.rejectUnapproved(m.REJECT_NOTIFICATION_CLOSE_SIG),H.decryptMessageController.rejectUnapproved(m.REJECT_NOTIFICATION_CLOSE),H.encryptionPublicKeyController.rejectUnapproved(m.REJECT_NOTIFICATION_CLOSE),Object.values(H.approvalController.state.pendingApprovals).forEach((({id:e,type:t})=>{switch(t){case d.ApprovalType.SnapDialogAlert:case d.ApprovalType.SnapDialogPrompt:H.approvalController.accept(e,null);break;case d.ApprovalType.SnapDialogConfirmation:case E.SNAP_MANAGE_ACCOUNTS_CONFIRMATION_TYPES.confirmAccountCreation:case E.SNAP_MANAGE_ACCOUNTS_CONFIRMATION_TYPES.confirmAccountRemoval:case E.SNAP_MANAGE_ACCOUNTS_CONFIRMATION_TYPES.showSnapAccountRedirect:H.approvalController.accept(e,!1);break;default:H.approvalController.reject(e,f.ethErrors.provider.userRejectedRequest())}}))),_()})),Object.values(H.snapController.state.snaps).some((e=>!e.preinstalled))&&H.snapController.updateBlockedSnaps()}async function de(){const e=await V.getActiveTabs(),t=Boolean(e.find((e=>q[e.id]))),r=e.length>0&&e[0].extData&&e[0].extData.indexOf("vivaldi_tab")>-1;if(!K&&(r||0===G)&&!t){K=!0;try{const e=H.appStateController.getCurrentPopupId();await B.showPopup((e=>H.appStateController.setCurrentPopupId(e)),e)}finally{K=!1}}}const pe=()=>{if(H)return H.metaMetricsController.updateTraits({[m.MetaMetricsUserTrait.InstallDateExt]:(new Date).toISOString().split("T")[0]}),void H.metaMetricsController.addEventBeforeMetricsOptIn({category:m.MetaMetricsEventCategory.App,event:m.MetaMetricsEventName.AppInstalled,properties:{}});setTimeout((()=>{pe()}),1e3)};async function fe(){Boolean(await U.get())||(pe(),V.openExtensionInBrowser()),l.default.tabs.onActivated.addListener((e=>{if(H){const{tabId:t}=e,r=z[t];if(r){const e=H.permissionController.state.subjects[r];e!==undefined&&ce(r,e,H.preferencesController)}}}))}(async function(){await fe(),se().catch(i.default.error)})()}}},{package:"$root$",file:"app/scripts/background.js"}]],[4],{});