LavaPack.loadBundle([[2047,{"./proxy/index.cjs":2049},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){var s=Object.create?function(e,t,n,s){s===undefined&&(s=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,s,r)}:function(e,t,n,s){s===undefined&&(s=n),e[s]=t[n]},r=function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||s(t,e,n)};Object.defineProperty(n,"__esModule",{value:!0}),r(e("./proxy/index.cjs"),n)}}},{package:"@metamask/snaps-execution-environments",file:"node_modules/@metamask/snaps-execution-environments/dist/index.cjs"}],[2048,{"@metamask/post-message-stream":1837,"@metamask/snaps-execution-environments/package.json":2050,"@metamask/snaps-utils":2242,"@metamask/utils":2359},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){function s(e,t,n){return(t=function(e){var t=function(e,t){if("object"!=typeof e||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var s=n.call(e,t||"default");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:t+""}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t,n){i(e,t),t.set(e,n)}function i(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function a(e,t){return e.get(c(e,t))}function o(e,t,n){return e.set(c(e,t),n),n}function c(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError("Private element is not present on this object")}var u=function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.ProxySnapExecutor=void 0;const l=e("@metamask/post-message-stream"),d=e("@metamask/snaps-utils"),m=e("@metamask/utils"),p=`https://execution.metamask.io/iframe/${u(e("@metamask/snaps-execution-environments/package.json")).default.version}/index.html`;var f=new WeakMap,g=new WeakMap,h=new WeakSet;class b{static initialize(e,t=p){return new b(e,t)}constructor(e,t){var n,u;i(n=this,u=h),u.add(n),r(this,f,void 0),r(this,g,void 0),s(this,"jobs",{}),o(f,this,e),a(f,this).on("data",c(h,this,v).bind(this)),o(g,this,t)}}function v(e){const{jobId:t,data:n}=e;this.jobs[t]?"terminateJob"!==n.method?this.jobs[t].stream.write(n):c(h,this,y).call(this,t):c(h,this,w).call(this,t).then(()=>{c(h,this,v).call(this,e)}).catch(e=>{(0,d.logError)("[Worker] Error initializing job:",e)})}async function w(e){const t=await(0,d.createWindow)({uri:a(g,this),id:e}),n=new l.WindowPostMessageStream({name:"parent",target:"child",targetWindow:t,targetOrigin:"*"});return n.on("data",t=>{a(f,this).write({data:t,jobId:e})}),this.jobs[e]={id:e,window:t,stream:n},this.jobs[e]}function y(e){(0,m.assert)(this.jobs[e],`Job "${e}" not found.`);const t=document.getElementById(e);(0,m.assert)(t,`Iframe with ID "${e}" not found.`),t.remove(),this.jobs[e].stream.destroy(),delete this.jobs[e]}n.ProxySnapExecutor=b}}},{package:"@metamask/snaps-execution-environments",file:"node_modules/@metamask/snaps-execution-environments/dist/proxy/ProxySnapExecutor.cjs"}],[2049,{"./ProxySnapExecutor.cjs":2048},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){var s=Object.create?function(e,t,n,s){s===undefined&&(s=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,s,r)}:function(e,t,n,s){s===undefined&&(s=n),e[s]=t[n]},r=function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||s(t,e,n)};Object.defineProperty(n,"__esModule",{value:!0}),r(e("./ProxySnapExecutor.cjs"),n)}}},{package:"@metamask/snaps-execution-environments",file:"node_modules/@metamask/snaps-execution-environments/dist/proxy/index.cjs"}],[2050,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){t.exports={name:"@metamask/snaps-execution-environments",version:"10.2.0",description:"Snap sandbox environments for executing SES javascript",keywords:["MetaMask","Snaps","Ethereum"],homepage:"https://github.com/MetaMask/snaps/tree/main/packages/snaps-execution-environments#readme",bugs:{url:"https://github.com/MetaMask/snaps/issues"},repository:{type:"git",url:"https://github.com/MetaMask/snaps.git"},license:"SEE LICENSE IN LICENSE",sideEffects:!1,exports:{".":{import:{types:"./dist/index.d.mts",default:"./dist/index.mjs"},require:{types:"./dist/index.d.cts",default:"./dist/index.cjs"}},"./node-process":"./dist/webpack/node-process/bundle.js","./node-thread":"./dist/webpack/node-thread/bundle.js","./package.json":"./package.json"},main:"./dist/index.cjs",module:"./dist/index.mjs",types:"./dist/index.d.cts",files:["dist"],scripts:{"auto-changelog-init":"auto-changelog init",build:"ts-bridge --project tsconfig.build.json --verbose --clean --no-references","build:lavamoat":"lavamoat --policy lavamoat/build-system/policy.json  --override lavamoat/build-system/policy-override.json ./scripts/build.js","build:lavamoat:policy":"yarn build:lavamoat --writeAutoPolicy && LAVAMOAT_GENERATE_POLICY=true node scripts/build.js","build:lavamoat:test":"NODE_ENV=test yarn build:lavamoat","build:post":"yarn build:lavamoat","changelog:update":"../../scripts/update-changelog.sh @metamask/snaps-execution-environments","changelog:validate":"../../scripts/validate-changelog.sh @metamask/snaps-execution-environments",clean:"rimraf '*.tsbuildinfo' 'dist' 'src/__GENERATED__/' 'coverage/*' '__test__/*'",lint:"yarn lint:eslint && yarn lint:misc --check && yarn changelog:validate && yarn lint:dependencies","lint:ci":"yarn lint","lint:dependencies":"depcheck","lint:eslint":"eslint . --cache","lint:fix":"yarn lint:eslint --fix && yarn lint:misc --write","lint:misc":'prettier --no-error-on-unmatched-pattern --log-level warn "**/*.json" "**/*.md" "**/*.html" "!CHANGELOG.md" --ignore-path ./.prettierignore',"publish:preview":"yarn npm publish --tag preview","since-latest-release":"../../scripts/since-latest-release.sh",start:"node scripts/start.js",test:"jest --reporters=jest-silent-reporter && yarn test:browser","test:browser":"vitest","test:browser:firefox":"vitest --config ./vitest.config.firefox.mts","test:clean":"jest --clearCache","test:post":"tsx ../../scripts/update-coverage.mts && rimraf coverage/jest coverage/vite","test:verbose":"jest --verbose","test:watch":"jest --watch"},dependencies:{"@metamask/json-rpc-engine":"^10.0.2","@metamask/object-multiplex":"^2.1.0","@metamask/post-message-stream":"^10.0.0","@metamask/providers":"^22.1.0","@metamask/rpc-errors":"^7.0.3","@metamask/snaps-sdk":"^9.3.0","@metamask/snaps-utils":"^11.2.0","@metamask/superstruct":"^3.2.1","@metamask/utils":"^11.4.2","readable-stream":"^3.6.2"},devDependencies:{"@esbuild-plugins/node-globals-polyfill":"^0.2.3","@esbuild-plugins/node-modules-polyfill":"^0.2.2","@lavamoat/allow-scripts":"^3.3.4","@lavamoat/lavatube":"^1.0.0","@lavamoat/webpack":"^1.0.0","@metamask/auto-changelog":"^5.0.2","@swc/core":"1.11.31","@swc/jest":"^0.2.38","@testing-library/dom":"^10.4.0","@ts-bridge/cli":"^0.6.1","@types/jest":"^27.5.1","@types/node":"18.14.2","@types/webpack-env":"^1.18.1","@vitest/browser":"^3.1.1","@vitest/coverage-v8":"^3.1.1",deepmerge:"^4.2.2",depcheck:"^1.4.7",eslint:"^9.11.0","html-webpack-plugin":"^5.5.0",jest:"^29.0.2","jest-environment-node":"^29.5.0","jest-fetch-mock":"^3.0.3","jest-silent-reporter":"^0.6.0",lavamoat:"^9.0.10",prettier:"^3.3.3",rimraf:"^4.1.2","serve-handler":"^6.1.5",ses:"^1.13.1","stream-browserify":"^3.0.0",terser:"^5.17.7","ts-loader":"^9.5.2","tsconfig-paths-webpack-plugin":"^4.0.1",tsx:"^4.20.3",typescript:"~5.3.3",vite:"^6.2.7","vite-tsconfig-paths":"^4.0.5",vitest:"^3.1.1",webpack:"^5.97.1","webpack-merge":"^5.9.0"},engines:{node:"^20 || >=22"},publishConfig:{access:"public",registry:"https://registry.npmjs.org/"}}}}},{package:"@metamask/snaps-execution-environments",file:"node_modules/@metamask/snaps-execution-environments/package.json"}],[4963,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){function s(e,t,n){return(t=function(e){var t=function(e,t){if("object"!=typeof e||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var s=n.call(e,t||"default");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:t+""}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(n,"__esModule",{value:!0}),n.CallbackProcessor=void 0;n.CallbackProcessor=class{constructor(){s(this,"currentMessageId",0),s(this,"messageCallbacks",new Map)}registerCallback(e){return this.currentMessageId+=1,this.messageCallbacks.set(this.currentMessageId,e),this.currentMessageId}processCallback(e){if(this.messageCallbacks.has(e.messageId)){const t=this.messageCallbacks.get(e.messageId);if(t)return this.messageCallbacks.delete(e.messageId),t(e)}return null}}}}},{package:"$root$",file:"offscreen/scripts/callback-processor.ts"}],[4964,{"../../shared/constants/offscreen-communication":4991},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){chrome.runtime.onMessage.addListener((e,t,n)=>{if(e.target===s.OffscreenCommunicationTarget.latticeOffscreen)return async function(e){const t=window.open(e);if(!t)throw new Error("Failed to open Lattice connector.");return t}(e.params.url).then(e=>{const t=setInterval(()=>{e.closed&&(clearInterval(t),n({error:new Error("Lattice connector closed.")}))},500);window.addEventListener("message",r=>{if(r.origin===s.KnownOrigins.lattice||r.source!==e)try{clearInterval(t);const e=JSON.parse(r.data);e.deviceID&&e.password||n({error:new Error("Invalid credentials returned from Lattice.")}),n({result:e})}catch(e){n({error:e})}},!1)}),!0})};var s=e("../../shared/constants/offscreen-communication")}}},{package:"$root$",file:"offscreen/scripts/lattice.ts"}],[4965,{"../../shared/constants/offscreen-communication":4991,"./callback-processor":4963},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),n.default=async function(){return new Promise(e=>{const t=document.createElement("iframe");t.src="https://metamask.github.io/ledger-iframe-bridge/9.0.1/",t.allow="hid",t.onload=()=>{!function(e){window.addEventListener("message",({origin:t,data:n,source:r})=>{if(t===s.KnownOrigins.ledger&&r===e.contentWindow&&n){if(n.action===a)return void chrome.runtime.sendMessage({action:s.OffscreenCommunicationEvents.ledgerDeviceConnect,payload:n.payload.connected});o.processCallback(n)}}),chrome.runtime.onMessage.addListener((t,n,r)=>{if(t.target!==s.OffscreenCommunicationTarget.ledgerOffscreen)return;if(!e.contentWindow){return void r({success:!1,payload:{error:new Error("Ledger iframe not present")}})}const a=o.registerCallback(r),c={...t,target:i,messageId:a};return e.contentWindow.postMessage(c,s.KnownOrigins.ledger),!0})}(t),e()},document.body.appendChild(t)})};var s=e("../../shared/constants/offscreen-communication"),r=e("./callback-processor");const i="LEDGER-IFRAME",a="ledger-connection-event",o=new r.CallbackProcessor}}},{package:"$root$",file:"offscreen/scripts/ledger.ts"}],[4967,{"../../shared/constants/offscreen-communication":4991,"@trezor/connect-web":2478},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){chrome.runtime.onMessage.addListener((e,t,n)=>{if(e.target===r.OffscreenCommunicationTarget.trezorOffscreen){switch(e.action){case r.TrezorAction.init:s.default.on(s.DEVICE_EVENT,e=>{var t;e.type===s.DEVICE.CONNECT&&null!==(t=e.payload.features)&&void 0!==t&&t.model&&chrome.runtime.sendMessage({target:r.OffscreenCommunicationTarget.extension,event:r.OffscreenCommunicationEvents.trezorDeviceConnect,payload:{model:e.payload.features.model,minorVersion:e.payload.features.minor_version}})}),s.default.init({...e.params,env:"webextension",popup:!0}).then(()=>{n()});break;case r.TrezorAction.dispose:s.default.dispose(),n();break;case r.TrezorAction.getPublicKey:s.default.getPublicKey(e.params).then(e=>{n(e)});break;case r.TrezorAction.signTransaction:s.default.ethereumSignTransaction(e.params).then(e=>{n(e)});break;case r.TrezorAction.signMessage:s.default.ethereumSignMessage(e.params).then(e=>{n(e)});break;case r.TrezorAction.signTypedData:s.default.ethereumSignTypedData(e.params).then(e=>{n(e)});break;default:n({success:!1,payload:{error:"Trezor action not supported"}})}return!0}})};var s=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var n=i(t);if(n&&n.has(e))return n.get(e);var s={__proto__:null},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if("default"!==a&&{}.hasOwnProperty.call(e,a)){var o=r?Object.getOwnPropertyDescriptor(e,a):null;o&&(o.get||o.set)?Object.defineProperty(s,a,o):s[a]=e[a]}return s.default=e,n&&n.set(e,s),s}(e("@trezor/connect-web")),r=e("../../shared/constants/offscreen-communication");function i(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,n=new WeakMap;return(i=function(e){return e?n:t})(e)}}}},{package:"$root$",file:"offscreen/scripts/trezor.ts"}],[4966,{"../../shared/constants/offscreen-communication":4991,"./lattice":4964,"./ledger":4965,"./trezor":4967,"@metamask/post-message-stream":1837,"@metamask/snaps-execution-environments":2047,"@metamask/utils":2359},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){var s=e("@metamask/post-message-stream"),r=e("@metamask/snaps-execution-environments"),i=(e("@metamask/utils"),e("../../shared/constants/offscreen-communication")),a=u(e("./ledger")),o=u(e("./trezor")),c=u(e("./lattice"));function u(e){return e&&e.__esModule?e:{default:e}}(async function(){!function(){const e=new s.BrowserRuntimePostMessageStream({name:"child",target:"parent"});r.ProxySnapExecutor.initialize(e,"./snaps/index.html")}(),(0,o.default)(),(0,c.default)();try{const e=new Promise((e,t)=>{setTimeout(()=>{t(new Error("Ledger initialization timed out"))},i.OFFSCREEN_LEDGER_INIT_TIMEOUT)});await Promise.race([(0,a.default)(),e])}catch(e){console.error("Ledger initialization failed:",e)}})().then(()=>{chrome.runtime.sendMessage({target:i.OffscreenCommunicationTarget.extensionMain,isBooted:!0,webdriverPresent:!0===navigator.webdriver})})}}},{package:"$root$",file:"offscreen/scripts/offscreen.ts"}]],[4966],{});