@import '~@fontsource/jura/index.css';
@import '~@fontsource/chakra-petch/index.css';
/*
  Subset of font https://github.com/googlefonts/noto-emoji
  which includes only flags emoji generated using command:
  $ fonttools subset NotoColorEmoji.ttf --ignore-missing-glyphs --text-file=data.txt
  where data.txt is a text file containing all the glyphs you want to include
*/
@font-face {
  font-family: 'Noto Color Emoji';
  src: url('./assets/NotoColorEmoji.subset.ttf');
}

* {
  box-sizing: border-box;
  /* Measurements */
}

@media screen and (max-width: 730px) {
  * {
    --sidebar-width: calc(var(--sidebar-width) - 1em);
  }
}

body,
html,
#root,
.App {
  height: 100%;
  overflow: hidden;
}

.App {
  text-align: center;
  display: grid;
  grid-template-columns: var(--sidebar-width) 1fr;
  grid-template-areas: 'sidebar content' 'controller controller';
  grid-template-rows: 1fr min-content;
  --sidebar-width: 240px;
  --content-width: calc(100vw - var(--sidebar-width));
  --hp-logo-sidebar-width: 64px;
}

.App.collapsed {
  --sidebar-width: 68px;
  --content-width: calc(100vw - var(--sidebar-width));
  grid-template-columns: var(--sidebar-width) 1fr;
  --hp-logo-sidebar-width: 24px;
}

.App .content {
  display: flex;
  flex-direction: column;
  height: 100%;
  overflow-y: auto;
  overflow-x: hidden;
  background: var(--gradient-body-background);
}

.App .content .UpdateComponent--topLevel {
  height: 100vh;
  position: initial;
  width: var(--content-width);
}

.App .content .UpdateComponent--topLevel.collapsed {
  width: var(--content-width);
}

.App .controller {
  grid-area: controller;
  position: relative;
}

.danger {
  font-weight: var(--bold);
  color: var(--danger);
}

.material-icons.is-primary {
  /* I can't find any elements that use this, so idk what colour this should be */
  color: var(--danger);
}

.material-icons.is-secondary {
  color: var(--download-button);
}

.material-icons.is-success {
  color: var(--success);
}

.material-icons.is-danger {
  color: var(--danger);
}

.material-icons.is-danger:hover {
  color: var(--danger-hover);
}

.material-icons.settings.folder {
  cursor: pointer;
  color: var(--text-default);
}

.icons > * {
  cursor: pointer;
}

.smallMessage {
  font-size: var(--text-md);
  width: 100%;
  max-width: 513px;
  white-space: break-spaces;
  padding-top: 4px;
}

svg.disabled {
  color: var(--background);
}

.react-contextmenu--visible {
  background-color: var(--input-background);
  padding: var(--space-md) var(--space-lg);
  border-radius: 6px;
  z-index: 99;
}

.react-contextmenu-item {
  color: var(--text-default);
  font-size: var(--text-sm);
  line-height: var(--space-lg);
  font-family: var(--secondary-font-family);
  cursor: pointer;
  text-align: left;
}

.react-contextmenu-item:hover {
  color: var(--download-button);
}

.react-contextmenu-item.disabled {
  color: var(--icon-disabled);
  cursor: initial;
}

.isRTL {
  direction: rtl;
}
