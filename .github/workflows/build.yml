name: Build

on:
  push:
    branches: [main, stable, tech/release_ci_cd]
    tags:
      - '!v*'
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
  GH_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
  CSC_IDENTITY_AUTO_DISCOVERY: true
  CSC_LINK: ${{ secrets.CSC_LINK }}
  CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
  APPLE_ID: ${{ secrets.APPLEID }}
  APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLEIDPASS }}
  TEAMID: ${{ secrets.TEAMID }}

jobs:
  build_windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository.
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          token: ${{ secrets.pat }}
      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Reconfigure git to use HTTP authentication
        run: >
          git config --global url."https://github.com/".insteadOf
          ssh://git@github.com/
      - name: Authenticate with private NPM package
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
      - name: Install modules.
        run: npm i --legacy-peer-deps
      - name: Build artifacts.
        run: npm run dist:win nsis
      - name: Upload EXE.
        uses: actions/upload-artifact@v2
        with:
          name: win-setup
          path: dist/HyperPlay*.exe
          retention-days: 14
  build_linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository.
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          token: ${{ secrets.pat }}
      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Reconfigure git to use HTTP authentication
        run: >
          git config --global url."https://github.com/".insteadOf
          ssh://git@github.com/
      - name: Authenticate with private NPM package
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
      - name: Install modules.
        run: yarn
      - name: Build artifacts.
        run: yarn dist:linux appimage --publish=never
      - name: Upload AppImage.
        uses: actions/upload-artifact@v2
        with:
          name: linux-appimage
          path: dist/HyperPlay-*.AppImage
          retention-days: 14
  build_mac:
    runs-on: macos-latest
    steps:
      - name: Checkout repository.
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          token: ${{ secrets.pat }}
      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Reconfigure git to use HTTP authentication
        run: >
          git config --global url."https://github.com/".insteadOf
          ssh://git@github.com/
      - name: Authenticate with private NPM package
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
      - name: Install modules.
        run: yarn
      - name: Build artifacts.
        run: yarn dist:mac --publish=never
      - name: Upload x64 build.
        uses: actions/upload-artifact@v3
        with:
          name: mac-dmg-x64
          path: dist/HyperPlay*x64.dmg
          retention-days: 14
      - name: Upload ARM64.
        uses: actions/upload-artifact@v3
        with:
          name: mac-dmg-arm64
          path: dist/HyperPlay*arm64.dmg
          retention-days: 14
